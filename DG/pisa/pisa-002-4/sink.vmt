(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
(declare-fun s13 () Bool)
(declare-fun s13.next () Bool)
(declare-fun s14 () Bool)
(declare-fun s14.next () Bool)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! s0 :next s0.next))
(define-fun nxt9 () Bool (! s1 :next s1.next))
(define-fun nxt10 () Bool (! s2 :next s2.next))
(define-fun nxt11 () Bool (! s3 :next s3.next))
(define-fun nxt12 () Bool (! s4 :next s4.next))
(define-fun nxt13 () Bool (! s5 :next s5.next))
(define-fun nxt14 () Bool (! s6 :next s6.next))
(define-fun nxt15 () Bool (! s7 :next s7.next))
(define-fun nxt16 () Bool (! s8 :next s8.next))
(define-fun nxt17 () Bool (! s9 :next s9.next))
(define-fun nxt18 () Bool (! s10 :next s10.next))
(define-fun nxt19 () Bool (! s11 :next s11.next))
(define-fun nxt20 () Bool (! s12 :next s12.next))
(define-fun nxt21 () Bool (! s13 :next s13.next))
(define-fun nxt22 () Bool (! s14 :next s14.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s1 Bool)) Bool (not s1))
(define-fun d4 ((x0 Bool) (x5 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x5) (not s1) (not s1.next)))
(define-fun d5 ((x0 Bool) (x4 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x4) (not s1) (not s1.next)))
(define-fun d6 ((x0 Bool) (x3 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x3) (not s1) (not s1.next)))
(define-fun d7 ((x0 Bool) (x6 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) x6 (not s1) (not s1.next)))
(define-fun d8 ((x0 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) x7 (not s1) (not s1.next)))
(define-fun d9 ((x0 Bool) (x2 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x2) (not s1) (not s1.next)))
(define-fun d10 ((x0 Bool) (x1 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) x1 (not s1) (not s1.next)))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d4 x0 x5 s1 s1.next) (d5 x0 x4 s1 s1.next) (d6 x0 x3 s1 s1.next) (d7 x0 x6 s1 s1.next) (d8 x0 x7 s1 s1.next) (d9 x0 x2 s1 s1.next) (d10 x0 x1 s1 s1.next)))
(define-fun d12 ((s1 Bool)) Bool (not s1))
(define-fun d13 ((s0 Bool) (s1 Bool)) Bool (and (d0 s0) (d3 s1)))
(define-fun d14 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d1 x0 s0 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d15 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d11 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next))))
(define-fun d16 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (d14 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d15 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d17 ((s0 Bool) (s1 Bool)) Bool (and (d2 s0) (d12 s1)))
(define-fun d18 ((s2 Bool)) Bool (not s2))
(define-fun d19 ((x0 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x6) (not s2) (not s2.next)))
(define-fun d20 ((x0 Bool) (x5 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x5) (not s2) (not s2.next)))
(define-fun d21 ((x0 Bool) (x4 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x4) (not s2) (not s2.next)))
(define-fun d22 ((x0 Bool) (x3 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x3) (not s2) (not s2.next)))
(define-fun d23 ((x0 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x7 (not s2) (not s2.next)))
(define-fun d24 ((x0 Bool) (x2 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x2) (not s2) (not s2.next)))
(define-fun d25 ((x0 Bool) (x1 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not s2) (not s2.next)))
(define-fun d26 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d19 x0 x6 s2 s2.next) (d20 x0 x5 s2 s2.next) (d21 x0 x4 s2 s2.next) (d22 x0 x3 s2 s2.next) (d23 x0 x7 s2 s2.next) (d24 x0 x2 s2 s2.next) (d25 x0 x1 s2 s2.next)))
(define-fun d27 ((s2 Bool)) Bool (not s2))
(define-fun d28 ((s0 Bool) (s1 Bool) (s2 Bool)) Bool (and (d13 s0 s1) (d18 s2)))
(define-fun d29 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (or (d16 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next))))
(define-fun d30 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d26 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next))))
(define-fun d31 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (d29 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (d30 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d32 ((s0 Bool) (s1 Bool) (s2 Bool)) Bool (and (d17 s0 s1) (d27 s2)))
(define-fun d33 ((s3 Bool)) Bool (not s3))
(define-fun d34 ((x0 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not s3) (not s3.next)))
(define-fun d35 ((s3 Bool)) Bool (not s3))
(define-fun d36 ((s3 Bool) (s4 Bool)) Bool (and (not s3) s4))
(define-fun d37 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) x6 x7 s3 (not s4) (not s3.next) (not s4.next)))
(define-fun d38 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 x7 (not s3) s4 s3.next (not s4.next)))
(define-fun d39 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (or (d37 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s3.next s4.next) (d38 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s3.next s4.next)))
(define-fun d40 ((s3 Bool) (s4 Bool)) Bool (and (not s3) (not s4)))
(define-fun d41 ((s3 Bool) (s5 Bool)) Bool (and (not s5) (d33 s3)))
(define-fun d42 ((x0 Bool) (s3 Bool) (s5 Bool) (s3.next Bool) (s5.next Bool)) Bool (and (not s5) (not s5.next) (d34 x0 s3 s3.next)))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool)) Bool (and s5 s5.next (d39 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s3.next s4.next)))
(define-fun d44 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s5 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s5) s5.next (d35 s3) (d36 s3.next s4.next)))
(define-fun d45 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool)) Bool (or (d42 x0 s3 s5 s3.next s5.next) (d43 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s3.next s4.next s5.next) (d44 x0 x1 x2 x3 x4 x5 x6 x7 s3 s5 s3.next s4.next s5.next)))
(define-fun d46 ((s3 Bool) (s4 Bool) (s5 Bool)) Bool (and s5 (d40 s3 s4)))
(define-fun d47 ((s3 Bool)) Bool (not s3))
(define-fun d48 ((x0 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not s3) (not s3.next)))
(define-fun d49 ((s3 Bool)) Bool (not s3))
(define-fun d50 ((s3 Bool) (s5 Bool) (s6 Bool)) Bool (and (not s6) (d41 s3 s5)))
(define-fun d51 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not s6) (not s6.next) (d45 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s3.next s4.next s5.next)))
(define-fun d52 ((x0 Bool) (s3 Bool) (s6 Bool) (s3.next Bool) (s6.next Bool)) Bool (and s6 s6.next (d48 x0 s3 s3.next)))
(define-fun d53 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s3.next Bool) (s6.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s6) s6.next (d46 s3 s4 s5) (d47 s3.next)))
(define-fun d54 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d51 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s3.next s4.next s5.next s6.next) (d52 x0 s3 s6 s3.next s6.next) (d53 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s3.next s6.next)))
(define-fun d55 ((s3 Bool) (s6 Bool)) Bool (and s6 (d49 s3)))
(define-fun d56 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s5 Bool) (s6 Bool)) Bool (and (d28 s0 s1 s2) (d50 s3 s5 s6)))
(define-fun d57 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (or (d31 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next))))
(define-fun d58 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d54 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s3.next s4.next s5.next s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next))))
(define-fun d59 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (d57 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (d58 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s3.next s4.next s5.next s6.next)))
(define-fun d60 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool)) Bool (and (d32 s0 s1 s2) (d55 s3 s6)))
(define-fun d61 ((s7 Bool)) Bool (not s7))
(define-fun d62 ((x0 Bool) (s7 Bool) (s7.next Bool)) Bool (and (not x0) (not s7) (not s7.next)))
(define-fun d63 ((s7 Bool)) Bool (not s7))
(define-fun d64 ((s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (not s7) s8 (not s9) s10))
(define-fun d65 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) x7 s7 (not s8) (not s9) (not s10) (not s7.next) (not s8.next) s9.next s10.next))
(define-fun d66 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) x7 s7 (not s8) (not s9) s10 (not s7.next) (not s8.next) (not s9.next) (not s10.next)))
(define-fun d67 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) (not s7) s8 s9 s10 (not s7.next) s8.next s9.next (not s10.next)))
(define-fun d68 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) (not s7) s8 s9 (not s10) (not s7.next) (not s8.next) (not s9.next) s10.next))
(define-fun d69 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) x6 x7 (not s7) (not s8) s9 (not s10) (not s7.next) s8.next (not s9.next) (not s10.next)))
(define-fun d70 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 (not x7) (not s7) s8 (not s9) s10 s7.next (not s8.next) (not s9.next) s10.next))
(define-fun d71 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 (not x7) (not s7) s8 (not s9) (not s10) s7.next (not s8.next) (not s9.next) (not s10.next)))
(define-fun d72 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) (not x6) (not x7) (not s7) (not s8) (not s9) (not s10) (not s7.next) s8.next s9.next s10.next))
(define-fun d73 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 x7 (not s7) (not s8) (not s9) s10 (not s7.next) (not s8.next) s9.next (not s10.next)))
(define-fun d74 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (or (d65 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s7.next s8.next s9.next s10.next) (d66 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s7.next s8.next s9.next s10.next) (d67 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s7.next s8.next s9.next s10.next) (d68 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s7.next s8.next s9.next s10.next) (d69 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s7.next s8.next s9.next s10.next) (d70 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s7.next s8.next s9.next s10.next) (d71 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s7.next s8.next s9.next s10.next) (d72 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s7.next s8.next s9.next s10.next) (d73 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s7.next s8.next s9.next s10.next)))
(define-fun d75 ((s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (not s7) (not s8) s9 s10))
(define-fun d76 ((s7 Bool) (s11 Bool)) Bool (and (not s11) (d61 s7)))
(define-fun d77 ((x0 Bool) (s7 Bool) (s11 Bool) (s7.next Bool) (s11.next Bool)) Bool (and (not s11) (not s11.next) (d62 x0 s7 s7.next)))
(define-fun d78 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and s11 s11.next (d74 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s7.next s8.next s9.next s10.next)))
(define-fun d79 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s11 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s11) s11.next (d63 s7) (d64 s7.next s8.next s9.next s10.next)))
(define-fun d80 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (or (d77 x0 s7 s11 s7.next s11.next) (d78 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s11 s7.next s8.next s9.next s10.next s11.next) (d79 x0 x1 x2 x3 x4 x5 x6 x7 s7 s11 s7.next s8.next s9.next s10.next s11.next)))
(define-fun d81 ((s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and s11 (d75 s7 s8 s9 s10)))
(define-fun d82 ((s7 Bool)) Bool (not s7))
(define-fun d83 ((x0 Bool) (s7 Bool) (s7.next Bool)) Bool (and (not x0) (not s7) (not s7.next)))
(define-fun d84 ((s7 Bool)) Bool (not s7))
(define-fun d85 ((s7 Bool) (s11 Bool) (s12 Bool)) Bool (and (not s12) (d76 s7 s11)))
(define-fun d86 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not s12) (not s12.next) (d80 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s11 s7.next s8.next s9.next s10.next s11.next)))
(define-fun d87 ((x0 Bool) (s7 Bool) (s12 Bool) (s7.next Bool) (s12.next Bool)) Bool (and s12 s12.next (d83 x0 s7 s7.next)))
(define-fun d88 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s7.next Bool) (s12.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s12) s12.next (d81 s7 s8 s9 s10 s11) (d82 s7.next)))
(define-fun d89 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d86 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s11 s12 s7.next s8.next s9.next s10.next s11.next s12.next) (d87 x0 s7 s12 s7.next s12.next) (d88 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s11 s12 s7.next s12.next)))
(define-fun d90 ((s7 Bool) (s12 Bool)) Bool (and s12 (d84 s7)))
(define-fun d91 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s11 Bool) (s12 Bool)) Bool (and (d56 s0 s1 s2 s3 s5 s6) (d85 s7 s11 s12)))
(define-fun d92 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d59 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s0.next s1.next s2.next s3.next s4.next s5.next s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next))))
(define-fun d93 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d89 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s11 s12 s7.next s8.next s9.next s10.next s11.next s12.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next))))
(define-fun d94 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (and (d92 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s0.next s1.next s2.next s3.next s4.next s5.next s6.next) (d93 x0 x1 x2 x3 x4 x5 x6 x7 s7 s8 s9 s10 s11 s12 s7.next s8.next s9.next s10.next s11.next s12.next)))
(define-fun d95 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool) (s7 Bool) (s12 Bool)) Bool (and (d60 s0 s1 s2 s3 s6) (d90 s7 s12)))
(define-fun d96 ((s13 Bool)) Bool (not s13))
(define-fun d97 ((x0 Bool) (s13 Bool) (s13.next Bool)) Bool (and (not x0) (not s13) (not s13.next)))
(define-fun d98 ((s13 Bool)) Bool (not s13))
(define-fun d99 ((s14 Bool)) Bool (not s14))
(define-fun d100 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s14 Bool) (s14.next Bool)) Bool (and (not x0) x1 x2 x3 x4 (not x5) (not x6) (not x7) (not s14) s14.next))
(define-fun d101 ((s14 Bool)) Bool s14)
(define-fun d102 ((s13 Bool) (s14 Bool)) Bool (and (d96 s13) (d99 s14)))
(define-fun d103 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s13 Bool) (s13.next Bool)) Bool (or (d97 x0 s13 s13.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s13 s13.next))))
(define-fun d104 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s14 Bool) (s14.next Bool)) Bool (or (d100 x0 x1 x2 x3 x4 x5 x6 x7 s14 s14.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s14 s14.next))))
(define-fun d105 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s13 Bool) (s14 Bool) (s13.next Bool) (s14.next Bool)) Bool (and (d103 x0 x1 x2 x3 x4 x5 x6 x7 s13 s13.next) (d104 x0 x1 x2 x3 x4 x5 x6 x7 s14 s14.next)))
(define-fun d106 ((s13 Bool) (s14 Bool)) Bool (and (d98 s13) (d101 s14)))
(define-fun d107 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool)) Bool (and (d91 s0 s1 s2 s3 s5 s6 s7 s11 s12) (d102 s13 s14)))
(define-fun d108 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d94 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next))))
(define-fun d109 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s13 Bool) (s14 Bool) (s13.next Bool) (s14.next Bool)) Bool (or (d105 x0 x1 x2 x3 x4 x5 x6 x7 s13 s14 s13.next s14.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s13 s13.next) (= s14 s14.next))))
(define-fun d110 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool)) Bool (and (d108 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next) (d109 x0 x1 x2 x3 x4 x5 x6 x7 s13 s14 s13.next s14.next)))
(define-fun d111 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool) (s7 Bool) (s12 Bool) (s13 Bool) (s14 Bool)) Bool (and (d95 s0 s1 s2 s3 s6 s7 s12) (d106 s13 s14)))
;
(define-fun d112 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s6 Bool) (s7 Bool) (s12 Bool) (s13 Bool) (s14 Bool)) Bool (and (d111 s0 s1 s2 s3 s6 s7 s12 s13 s14)))
(define-fun d113 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool)) Bool (and (d107 s0 s1 s2 s3 s5 s6 s7 s11 s12 s13 s14)))
;
(define-fun I () Bool (! (d113 s0 s1 s2 s3 s5 s6 s7 s11 s12 s13 s14) :init true))
(define-fun T () Bool (! (d110 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next) :trans true))
(define-fun O () Bool (! (not (d112 s0 s1 s2 s3 s6 s7 s12 s13 s14)) :invar-property 0))
