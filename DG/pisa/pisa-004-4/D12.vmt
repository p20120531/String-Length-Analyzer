(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
(declare-fun s13 () Bool)
(declare-fun s13.next () Bool)
(declare-fun s14 () Bool)
(declare-fun s14.next () Bool)
(declare-fun s15 () Bool)
(declare-fun s15.next () Bool)
(declare-fun s16 () Bool)
(declare-fun s16.next () Bool)
(declare-fun n0 () Int)
(declare-fun n0.next () Int)
(declare-fun n1 () Int)
(declare-fun n1.next () Int)
(declare-fun n2 () Int)
(declare-fun n2.next () Int)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! s0 :next s0.next))
(define-fun nxt9 () Bool (! s1 :next s1.next))
(define-fun nxt10 () Bool (! s2 :next s2.next))
(define-fun nxt11 () Bool (! s3 :next s3.next))
(define-fun nxt12 () Bool (! s4 :next s4.next))
(define-fun nxt13 () Bool (! s5 :next s5.next))
(define-fun nxt14 () Bool (! s6 :next s6.next))
(define-fun nxt15 () Bool (! s7 :next s7.next))
(define-fun nxt16 () Bool (! s8 :next s8.next))
(define-fun nxt17 () Bool (! s9 :next s9.next))
(define-fun nxt18 () Bool (! s10 :next s10.next))
(define-fun nxt19 () Bool (! s11 :next s11.next))
(define-fun nxt20 () Bool (! s12 :next s12.next))
(define-fun nxt21 () Bool (! s13 :next s13.next))
(define-fun nxt22 () Bool (! s14 :next s14.next))
(define-fun nxt23 () Bool (! s15 :next s15.next))
(define-fun nxt24 () Bool (! s16 :next s16.next))
(define-fun nxt25 () Bool (! n0 :next n0.next))
(define-fun nxt26 () Bool (! n1 :next n1.next))
(define-fun nxt27 () Bool (! n2 :next n2.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s1 Bool)) Bool (not s1))
(define-fun d4 ((x0 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x7) (not s1) (not s1.next)))
(define-fun d5 ((x0 Bool) (x6 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x6) (not s1) (not s1.next)))
(define-fun d6 ((x0 Bool) (x5 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x5) (not s1) (not s1.next)))
(define-fun d7 ((x0 Bool) (x4 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x4) (not s1) (not s1.next)))
(define-fun d8 ((x0 Bool) (x3 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) x3 (not s1) (not s1.next)))
(define-fun d9 ((x0 Bool) (x2 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x2) (not s1) (not s1.next)))
(define-fun d10 ((x0 Bool) (x1 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) x1 (not s1) (not s1.next)))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d4 x0 x7 s1 s1.next) (d5 x0 x6 s1 s1.next) (d6 x0 x5 s1 s1.next) (d7 x0 x4 s1 s1.next) (d8 x0 x3 s1 s1.next) (d9 x0 x2 s1 s1.next) (d10 x0 x1 s1 s1.next)))
(define-fun d12 ((s1 Bool)) Bool (not s1))
(define-fun d13 ((s0 Bool) (s1 Bool)) Bool (and (d0 s0) (d3 s1)))
(define-fun d14 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d1 x0 s0 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d15 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d11 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next))))
(define-fun d16 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (d14 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d15 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d17 ((s0 Bool) (s1 Bool)) Bool (and (d2 s0) (d12 s1)))
(define-fun d18 ((s2 Bool)) Bool (not s2))
(define-fun d19 ((x0 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not s2) (not s2.next)))
(define-fun d20 ((s2 Bool)) Bool (not s2))
(define-fun d21 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n0.next (+ n0 1))))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n0.next n0)))
(define-fun d23 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (n0 Int) (s2.next Bool) (n0.next Int)) Bool (and (d19 x0 s2 s2.next) (or (d21 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next) (d22 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next))))
(define-fun d24 ((s2 Bool)) Bool (not s2))
(define-fun d25 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 (not s2) s2.next))
(define-fun d26 ((s2 Bool)) Bool s2)
(define-fun d27 ((s2 Bool)) Bool (not s2))
(define-fun d28 ((x0 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not s2) (not s2.next)))
(define-fun d29 ((s2 Bool)) Bool (not s2))
(define-fun d30 ((s3 Bool)) Bool (not s3))
(define-fun d31 ((x0 Bool) (x7 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x7) (not s3) (not s3.next)))
(define-fun d32 ((x0 Bool) (x6 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x6) (not s3) (not s3.next)))
(define-fun d33 ((x0 Bool) (x5 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x5) (not s3) (not s3.next)))
(define-fun d34 ((x0 Bool) (x4 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x4) (not s3) (not s3.next)))
(define-fun d35 ((x0 Bool) (x3 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) x3 (not s3) (not s3.next)))
(define-fun d36 ((x0 Bool) (x2 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x2) (not s3) (not s3.next)))
(define-fun d37 ((x0 Bool) (x1 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) x1 (not s3) (not s3.next)))
(define-fun d38 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s3.next Bool)) Bool (or (d31 x0 x7 s3 s3.next) (d32 x0 x6 s3 s3.next) (d33 x0 x5 s3 s3.next) (d34 x0 x4 s3 s3.next) (d35 x0 x3 s3 s3.next) (d36 x0 x2 s3 s3.next) (d37 x0 x1 s3 s3.next)))
(define-fun d39 ((s3 Bool)) Bool (not s3))
(define-fun d40 ((s2 Bool) (s3 Bool)) Bool (and (d27 s2) (d30 s3)))
(define-fun d41 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d28 x0 s2 s2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next))))
(define-fun d42 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s3.next Bool)) Bool (or (d38 x0 x1 x2 x3 x4 x5 x6 x7 s3 s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s3 s3.next))))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (d41 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next) (d42 x0 x1 x2 x3 x4 x5 x6 x7 s3 s3.next)))
(define-fun d44 ((s2 Bool) (s3 Bool)) Bool (and (d29 s2) (d39 s3)))
(define-fun d45 ((s2 Bool) (s4 Bool)) Bool (and (not s4) (d24 s2)))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s4 Bool) (s2.next Bool) (s4.next Bool)) Bool (and (not s4) (not s4.next) (d25 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and s4 s4.next (d43 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next)))
(define-fun d48 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s4 Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s4) s4.next (d26 s2) (d40 s2.next s3.next)))
(define-fun d49 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (or (d46 x0 x1 x2 x3 x4 x5 x6 x7 s2 s4 s2.next s4.next) (d47 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s4 s2.next s3.next s4.next) (d48 x0 x1 x2 x3 x4 x5 x6 x7 s2 s4 s2.next s3.next s4.next)))
(define-fun d50 ((s2 Bool) (s3 Bool) (s4 Bool)) Bool (and s4 (d44 s2 s3)))
(define-fun d51 ((s2 Bool) (s5 Bool)) Bool (and (not s5) (d18 s2)))
(define-fun d52 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s5 Bool) (n0 Int) (s2.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (not s5) (not s5.next) (d23 x0 x1 x2 x3 x4 x5 x6 x7 s2 n0 s2.next n0.next)))
(define-fun d53 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and s5 s5.next (d49 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s4 s2.next s3.next s4.next) (= n0 n0.next)))
(define-fun d54 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s5 Bool) (n0 Int) (s2.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s5) s5.next (d20 s2) (d45 s2.next s4.next) (= n0 n0.next)))
(define-fun d55 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (or (d52 x0 x1 x2 x3 x4 x5 x6 x7 s2 s5 n0 s2.next s5.next n0.next) (d53 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s4 s5 n0 s2.next s3.next s4.next s5.next n0.next) (d54 x0 x1 x2 x3 x4 x5 x6 x7 s2 s5 n0 s2.next s4.next s5.next n0.next)))
(define-fun d56 ((s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and s5 (d50 s2 s3 s4)))
(define-fun d57 ((s0 Bool) (s1 Bool) (s2 Bool) (s5 Bool)) Bool (and (d13 s0 s1) (d51 s2 s5)))
(define-fun d58 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (or (d16 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next))))
(define-fun d59 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (or (d55 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s4 s5 n0 s2.next s3.next s4.next s5.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= n0 n0.next))))
(define-fun d60 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (d58 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (d59 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s4 s5 n0 s2.next s3.next s4.next s5.next n0.next)))
(define-fun d61 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and (d17 s0 s1) (d56 s2 s3 s4 s5)))
(define-fun d62 ((s6 Bool)) Bool (not s6))
(define-fun d63 ((x0 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not s6) (not s6.next)))
(define-fun d64 ((s6 Bool)) Bool (not s6))
(define-fun d65 ((s6 Bool)) Bool (not s6))
(define-fun d66 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 (not s6) s6.next))
(define-fun d67 ((s6 Bool)) Bool s6)
(define-fun d68 ((s6 Bool) (s7 Bool)) Bool (and (not s7) (d62 s6)))
(define-fun d69 ((x0 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not s7) (not s7.next) (d63 x0 s6 s6.next)))
(define-fun d70 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and s7 s7.next (d66 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next)))
(define-fun d71 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s7) s7.next (d64 s6) (d65 s6.next)))
(define-fun d72 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d69 x0 s6 s7 s6.next s7.next) (d70 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next) (d71 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next)))
(define-fun d73 ((s6 Bool) (s7 Bool)) Bool (and s7 (d67 s6)))
(define-fun d74 ((s6 Bool)) Bool (not s6))
(define-fun d75 ((x0 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not s6) (not s6.next)))
(define-fun d76 ((s6 Bool)) Bool (not s6))
(define-fun d77 ((s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (not s8) (d68 s6 s7)))
(define-fun d78 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (and (not s8) (not s8.next) (d72 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next)))
(define-fun d79 ((x0 Bool) (s6 Bool) (s8 Bool) (s6.next Bool) (s8.next Bool)) Bool (and s8 s8.next (d75 x0 s6 s6.next)))
(define-fun d80 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s6.next Bool) (s8.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s8) s8.next (d73 s6 s7) (d74 s6.next)))
(define-fun d81 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (or (d78 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s6.next s7.next s8.next) (d79 x0 s6 s8 s6.next s8.next) (d80 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s6.next s8.next)))
(define-fun d82 ((s6 Bool) (s8 Bool)) Bool (and s8 (d76 s6)))
(define-fun d83 ((s0 Bool) (s1 Bool) (s2 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (d57 s0 s1 s2 s5) (d77 s6 s7 s8)))
(define-fun d84 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (or (d60 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= n0 n0.next))))
(define-fun d85 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (or (d81 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s6.next s7.next s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next))))
(define-fun d86 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int)) Bool (and (d84 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (d85 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s6.next s7.next s8.next)))
(define-fun d87 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s8 Bool)) Bool (and (d61 s0 s1 s2 s3 s4 s5) (d82 s6 s8)))
(define-fun d88 ((s9 Bool)) Bool (not s9))
(define-fun d89 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not s9) (not s9.next)))
(define-fun d90 ((s9 Bool)) Bool (not s9))
(define-fun d91 ((s0 Bool) (s1 Bool) (s2 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d83 s0 s1 s2 s5 s6 s7 s8) (d88 s9)))
(define-fun d92 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int)) Bool (or (d86 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= n0 n0.next))))
(define-fun d93 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s9.next Bool)) Bool (or (d89 x0 s9 s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s9 s9.next))))
(define-fun d94 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int)) Bool (and (d92 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next) (d93 x0 x1 x2 x3 x4 x5 x6 x7 s9 s9.next)))
(define-fun d95 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s8 Bool) (s9 Bool)) Bool (and (d87 s0 s1 s2 s3 s4 s5 s6 s8) (d90 s9)))
(define-fun d96 ((s10 Bool)) Bool (not s10))
(define-fun d97 ((x0 Bool) (s10 Bool) (s10.next Bool)) Bool (and (not x0) (not s10) (not s10.next)))
(define-fun d98 ((s10 Bool)) Bool (not s10))
(define-fun d99 ((s0 Bool) (s1 Bool) (s2 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d91 s0 s1 s2 s5 s6 s7 s8 s9) (d96 s10)))
(define-fun d100 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int)) Bool (or (d94 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= n0 n0.next))))
(define-fun d101 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s10 Bool) (s10.next Bool)) Bool (or (d97 x0 s10 s10.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s10 s10.next))))
(define-fun d102 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int)) Bool (and (d100 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next) (d101 x0 x1 x2 x3 x4 x5 x6 x7 s10 s10.next)))
(define-fun d103 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d95 s0 s1 s2 s3 s4 s5 s6 s8 s9) (d98 s10)))
(define-fun d104 ((s11 Bool)) Bool (not s11))
(define-fun d105 ((x0 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not s11) (not s11.next)))
(define-fun d106 ((s11 Bool)) Bool (not s11))
(define-fun d107 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n2 Int) (n2.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n2.next (+ n2 1))))
(define-fun d108 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n2 Int) (n2.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n2.next n2)))
(define-fun d109 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (n2 Int) (s11.next Bool) (n2.next Int)) Bool (and (d105 x0 s11 s11.next) (or (d107 x0 x1 x2 x3 x4 x5 x6 x7 n2 n2.next) (d108 x0 x1 x2 x3 x4 x5 x6 x7 n2 n2.next))))
(define-fun d110 ((s11 Bool)) Bool (not s11))
(define-fun d111 ((x0 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not s11) (not s11.next)))
(define-fun d112 ((s11 Bool)) Bool (not s11))
(define-fun d113 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n1.next (+ n1 1))))
(define-fun d114 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n1.next n1)))
(define-fun d115 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (n1 Int) (s11.next Bool) (n1.next Int)) Bool (and (d111 x0 s11 s11.next) (or (d113 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next) (d114 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next))))
(define-fun d116 ((s11 Bool)) Bool (not s11))
(define-fun d117 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 (not x7) (not s11) s11.next))
(define-fun d118 ((s11 Bool)) Bool s11)
(define-fun d119 ((s11 Bool) (s12 Bool)) Bool (and (not s12) (d110 s11)))
(define-fun d120 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (n1 Int) (s11.next Bool) (s12.next Bool) (n1.next Int)) Bool (and (not s12) (not s12.next) (d115 x0 x1 x2 x3 x4 x5 x6 x7 s11 n1 s11.next n1.next)))
(define-fun d121 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (n1 Int) (s11.next Bool) (s12.next Bool) (n1.next Int)) Bool (and s12 s12.next (d117 x0 x1 x2 x3 x4 x5 x6 x7 s11 s11.next) (= n1 n1.next)))
(define-fun d122 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (n1 Int) (s11.next Bool) (s12.next Bool) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s12) s12.next (d112 s11) (d116 s11.next) (= n1 n1.next)))
(define-fun d123 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (n1 Int) (s11.next Bool) (s12.next Bool) (n1.next Int)) Bool (or (d120 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 n1 s11.next s12.next n1.next) (d121 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 n1 s11.next s12.next n1.next) (d122 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 n1 s11.next s12.next n1.next)))
(define-fun d124 ((s11 Bool) (s12 Bool)) Bool (and s12 (d118 s11)))
(define-fun d125 ((s13 Bool)) Bool (not s13))
(define-fun d126 ((x0 Bool) (x6 Bool) (s13 Bool) (s13.next Bool)) Bool (and (not x0) (not x6) (not s13) (not s13.next)))
(define-fun d127 ((x0 Bool) (x5 Bool) (s13 Bool) (s13.next Bool)) Bool (and (not x0) (not x5) (not s13) (not s13.next)))
(define-fun d128 ((x0 Bool) (x4 Bool) (s13 Bool) (s13.next Bool)) Bool (and (not x0) (not x4) (not s13) (not s13.next)))
(define-fun d129 ((x0 Bool) (x3 Bool) (s13 Bool) (s13.next Bool)) Bool (and (not x0) x3 (not s13) (not s13.next)))
(define-fun d130 ((x0 Bool) (x7 Bool) (s13 Bool) (s13.next Bool)) Bool (and (not x0) x7 (not s13) (not s13.next)))
(define-fun d131 ((x0 Bool) (x2 Bool) (s13 Bool) (s13.next Bool)) Bool (and (not x0) (not x2) (not s13) (not s13.next)))
(define-fun d132 ((x0 Bool) (x1 Bool) (s13 Bool) (s13.next Bool)) Bool (and (not x0) x1 (not s13) (not s13.next)))
(define-fun d133 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s13 Bool) (s13.next Bool)) Bool (or (d126 x0 x6 s13 s13.next) (d127 x0 x5 s13 s13.next) (d128 x0 x4 s13 s13.next) (d129 x0 x3 s13 s13.next) (d130 x0 x7 s13 s13.next) (d131 x0 x2 s13 s13.next) (d132 x0 x1 s13 s13.next)))
(define-fun d134 ((s13 Bool)) Bool (not s13))
(define-fun d135 ((s13 Bool)) Bool (not s13))
(define-fun d136 ((x0 Bool) (s13 Bool) (s13.next Bool)) Bool (and (not x0) (not s13) s13.next))
(define-fun d137 ((s13 Bool)) Bool s13)
(define-fun d138 ((s13 Bool) (s14 Bool)) Bool (and (not s14) (d125 s13)))
(define-fun d139 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s13 Bool) (s14 Bool) (s13.next Bool) (s14.next Bool)) Bool (and (not s14) (not s14.next) (d133 x0 x1 x2 x3 x4 x5 x6 x7 s13 s13.next)))
(define-fun d140 ((x0 Bool) (s13 Bool) (s14 Bool) (s13.next Bool) (s14.next Bool)) Bool (and s14 s14.next (d136 x0 s13 s13.next)))
(define-fun d141 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s13 Bool) (s14 Bool) (s13.next Bool) (s14.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s14) s14.next (d134 s13) (d135 s13.next)))
(define-fun d142 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s13 Bool) (s14 Bool) (s13.next Bool) (s14.next Bool)) Bool (or (d139 x0 x1 x2 x3 x4 x5 x6 x7 s13 s14 s13.next s14.next) (d140 x0 s13 s14 s13.next s14.next) (d141 x0 x1 x2 x3 x4 x5 x6 x7 s13 s14 s13.next s14.next)))
(define-fun d143 ((s13 Bool) (s14 Bool)) Bool (and s14 (d137 s13)))
(define-fun d144 ((s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool)) Bool (and (d119 s11 s12) (d138 s13 s14)))
(define-fun d145 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (n1 Int) (s11.next Bool) (s12.next Bool) (n1.next Int)) Bool (or (d123 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 n1 s11.next s12.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s11 s11.next) (= s12 s12.next) (= n1 n1.next))))
(define-fun d146 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s13 Bool) (s14 Bool) (s13.next Bool) (s14.next Bool)) Bool (or (d142 x0 x1 x2 x3 x4 x5 x6 x7 s13 s14 s13.next s14.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s13 s13.next) (= s14 s14.next))))
(define-fun d147 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (n1 Int) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (n1.next Int)) Bool (and (d145 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 n1 s11.next s12.next n1.next) (d146 x0 x1 x2 x3 x4 x5 x6 x7 s13 s14 s13.next s14.next)))
(define-fun d148 ((s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool)) Bool (and (d124 s11 s12) (d143 s13 s14)))
(define-fun d149 ((s11 Bool) (s15 Bool)) Bool (and (not s15) (d104 s11)))
(define-fun d150 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s15 Bool) (n1 Int) (n2 Int) (s11.next Bool) (s15.next Bool) (n1.next Int) (n2.next Int)) Bool (and (not s15) (not s15.next) (d109 x0 x1 x2 x3 x4 x5 x6 x7 s11 n2 s11.next n2.next) (= n1 n1.next)))
(define-fun d151 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (n1 Int) (n2 Int) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n1.next Int) (n2.next Int)) Bool (and s15 s15.next (d147 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s13 s14 n1 s11.next s12.next s13.next s14.next n1.next) (= n2 n2.next)))
(define-fun d152 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s15 Bool) (n1 Int) (n2 Int) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n1.next Int) (n2.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s15) s15.next (d106 s11) (d144 s11.next s12.next s13.next s14.next) (= n1 n1.next) (= n2 n2.next)))
(define-fun d153 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (n1 Int) (n2 Int) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n1.next Int) (n2.next Int)) Bool (or (d150 x0 x1 x2 x3 x4 x5 x6 x7 s11 s15 n1 n2 s11.next s15.next n1.next n2.next) (d151 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s13 s14 s15 n1 n2 s11.next s12.next s13.next s14.next s15.next n1.next n2.next) (d152 x0 x1 x2 x3 x4 x5 x6 x7 s11 s15 n1 n2 s11.next s12.next s13.next s14.next s15.next n1.next n2.next)))
(define-fun d154 ((s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool)) Bool (and s15 (d148 s11 s12 s13 s14)))
(define-fun d155 ((s0 Bool) (s1 Bool) (s2 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s15 Bool)) Bool (and (d99 s0 s1 s2 s5 s6 s7 s8 s9 s10) (d149 s11 s15)))
(define-fun d156 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int)) Bool (or (d102 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= n0 n0.next))))
(define-fun d157 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (n1 Int) (n2 Int) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n1.next Int) (n2.next Int)) Bool (or (d153 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s13 s14 s15 n1 n2 s11.next s12.next s13.next s14.next s15.next n1.next n2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= s14 s14.next) (= s15 s15.next) (= n1 n1.next) (= n2 n2.next))))
(define-fun d158 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (d156 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next) (d157 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s13 s14 s15 n1 n2 s11.next s12.next s13.next s14.next s15.next n1.next n2.next)))
(define-fun d159 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool)) Bool (and (d103 s0 s1 s2 s3 s4 s5 s6 s8 s9 s10) (d154 s11 s12 s13 s14 s15)))
(define-fun d160 ((s16 Bool)) Bool (not s16))
(define-fun d161 ((x0 Bool) (s16 Bool) (s16.next Bool)) Bool (and (not x0) (not s16) (not s16.next)))
(define-fun d162 ((s16 Bool)) Bool (not s16))
(define-fun d163 ((s0 Bool) (s1 Bool) (s2 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s15 Bool) (s16 Bool)) Bool (and (d155 s0 s1 s2 s5 s6 s7 s8 s9 s10 s11 s15) (d160 s16)))
(define-fun d164 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (or (d158 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next n0.next n1.next n2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= s14 s14.next) (= s15 s15.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next))))
(define-fun d165 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s16 Bool) (s16.next Bool)) Bool (or (d161 x0 s16 s16.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s16 s16.next))))
(define-fun d166 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (d164 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next n0.next n1.next n2.next) (d165 x0 x1 x2 x3 x4 x5 x6 x7 s16 s16.next)))
(define-fun d167 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool)) Bool (and (d159 s0 s1 s2 s3 s4 s5 s6 s8 s9 s10 s11 s12 s13 s14 s15) (d162 s16)))
;
;
(define-fun I () Bool (! (d163 s0 s1 s2 s5 s6 s7 s8 s9 s10 s11 s15 s16) :init true))
(define-fun T () Bool (! (d166 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next s16.next n0.next n1.next n2.next) :trans true))
(define-fun O () Bool (! (not (d167 s0 s1 s2 s3 s4 s5 s6 s8 s9 s10 s11 s12 s13 s14 s15 s16)) :invar-property 0))
