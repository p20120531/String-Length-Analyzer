(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun y24 () Bool)
(declare-fun y24.next () Bool)
(declare-fun y25 () Bool)
(declare-fun y25.next () Bool)
(declare-fun y26 () Bool)
(declare-fun y26.next () Bool)
(declare-fun y27 () Bool)
(declare-fun y27.next () Bool)
(declare-fun y28 () Bool)
(declare-fun y28.next () Bool)
(declare-fun y29 () Bool)
(declare-fun y29.next () Bool)
(declare-fun y30 () Bool)
(declare-fun y30.next () Bool)
(declare-fun y31 () Bool)
(declare-fun y31.next () Bool)
(declare-fun y32 () Bool)
(declare-fun y32.next () Bool)
(declare-fun y33 () Bool)
(declare-fun y33.next () Bool)
(declare-fun y34 () Bool)
(declare-fun y34.next () Bool)
(declare-fun y35 () Bool)
(declare-fun y35.next () Bool)
(declare-fun y36 () Bool)
(declare-fun y36.next () Bool)
(declare-fun y37 () Bool)
(declare-fun y37.next () Bool)
(declare-fun y38 () Bool)
(declare-fun y38.next () Bool)
(declare-fun y39 () Bool)
(declare-fun y39.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun n0 () Int)
(declare-fun n0.next () Int)
(declare-fun n1 () Int)
(declare-fun n1.next () Int)
(declare-fun n2 () Int)
(declare-fun n2.next () Int)
(declare-fun n3 () Int)
(declare-fun n3.next () Int)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! y24 :next y24.next))
(define-fun nxt9 () Bool (! y25 :next y25.next))
(define-fun nxt10 () Bool (! y26 :next y26.next))
(define-fun nxt11 () Bool (! y27 :next y27.next))
(define-fun nxt12 () Bool (! y28 :next y28.next))
(define-fun nxt13 () Bool (! y29 :next y29.next))
(define-fun nxt14 () Bool (! y30 :next y30.next))
(define-fun nxt15 () Bool (! y31 :next y31.next))
(define-fun nxt16 () Bool (! y32 :next y32.next))
(define-fun nxt17 () Bool (! y33 :next y33.next))
(define-fun nxt18 () Bool (! y34 :next y34.next))
(define-fun nxt19 () Bool (! y35 :next y35.next))
(define-fun nxt20 () Bool (! y36 :next y36.next))
(define-fun nxt21 () Bool (! y37 :next y37.next))
(define-fun nxt22 () Bool (! y38 :next y38.next))
(define-fun nxt23 () Bool (! y39 :next y39.next))
(define-fun nxt24 () Bool (! s0 :next s0.next))
(define-fun nxt25 () Bool (! s1 :next s1.next))
(define-fun nxt26 () Bool (! s2 :next s2.next))
(define-fun nxt27 () Bool (! s3 :next s3.next))
(define-fun nxt28 () Bool (! s4 :next s4.next))
(define-fun nxt29 () Bool (! s5 :next s5.next))
(define-fun nxt30 () Bool (! s6 :next s6.next))
(define-fun nxt31 () Bool (! s7 :next s7.next))
(define-fun nxt32 () Bool (! s8 :next s8.next))
(define-fun nxt33 () Bool (! s9 :next s9.next))
(define-fun nxt34 () Bool (! s10 :next s10.next))
(define-fun nxt35 () Bool (! s11 :next s11.next))
(define-fun nxt36 () Bool (! n0 :next n0.next))
(define-fun nxt37 () Bool (! n1 :next n1.next))
(define-fun nxt38 () Bool (! n2 :next n2.next))
(define-fun nxt39 () Bool (! n3 :next n3.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n0.next (+ n0 1))))
(define-fun d4 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n0.next n0)))
(define-fun d5 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (n0 Int) (s0.next Bool) (n0.next Int)) Bool (and (d1 x0 s0 s0.next) (or (d3 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next) (d4 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next))))
(define-fun d6 ((s1 Bool)) Bool (not s1))
(define-fun d7 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d8 ((s1 Bool)) Bool (not s1))
(define-fun d9 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n1.next (+ n1 1))))
(define-fun d10 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n1.next n1)))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (n1 Int) (s1.next Bool) (n1.next Int)) Bool (and (d7 x0 s1 s1.next) (or (d9 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next) (d10 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next))))
(define-fun d12 ((s1 Bool)) Bool (not s1))
(define-fun d13 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 (not s1) s1.next))
(define-fun d14 ((s1 Bool)) Bool s1)
(define-fun d15 ((s1 Bool)) Bool (not s1))
(define-fun d16 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d17 ((s1 Bool)) Bool (not s1))
(define-fun d18 ((s2 Bool)) Bool (not s2))
(define-fun d19 ((x0 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x7) (not s2) (not s2.next)))
(define-fun d20 ((x0 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x6) (not s2) (not s2.next)))
(define-fun d21 ((x0 Bool) (x5 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x5) (not s2) (not s2.next)))
(define-fun d22 ((x0 Bool) (x4 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x4) (not s2) (not s2.next)))
(define-fun d23 ((x0 Bool) (x3 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x3 (not s2) (not s2.next)))
(define-fun d24 ((x0 Bool) (x2 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x2) (not s2) (not s2.next)))
(define-fun d25 ((x0 Bool) (x1 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not s2) (not s2.next)))
(define-fun d26 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d19 x0 x7 s2 s2.next) (d20 x0 x6 s2 s2.next) (d21 x0 x5 s2 s2.next) (d22 x0 x4 s2 s2.next) (d23 x0 x3 s2 s2.next) (d24 x0 x2 s2 s2.next) (d25 x0 x1 s2 s2.next)))
(define-fun d27 ((s2 Bool)) Bool (not s2))
(define-fun d28 ((s1 Bool) (s2 Bool)) Bool (and (d15 s1) (d18 s2)))
(define-fun d29 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d16 x0 s1 s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next))))
(define-fun d30 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d26 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next))))
(define-fun d31 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (d29 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (d30 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d32 ((s1 Bool) (s2 Bool)) Bool (and (d17 s1) (d27 s2)))
(define-fun d33 ((s1 Bool) (s3 Bool)) Bool (and (not s3) (d12 s1)))
(define-fun d34 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s3 Bool) (s1.next Bool) (s3.next Bool)) Bool (and (not s3) (not s3.next) (d13 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d35 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and s3 s3.next (d31 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d36 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s3) s3.next (d14 s1) (d28 s1.next s2.next)))
(define-fun d37 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d34 x0 x1 x2 x3 x4 x5 x6 x7 s1 s3 s1.next s3.next) (d35 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (d36 x0 x1 x2 x3 x4 x5 x6 x7 s1 s3 s1.next s2.next s3.next)))
(define-fun d38 ((s1 Bool) (s2 Bool) (s3 Bool)) Bool (and s3 (d32 s1 s2)))
(define-fun d39 ((s1 Bool) (s4 Bool)) Bool (and (not s4) (d6 s1)))
(define-fun d40 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s4 Bool) (n1 Int) (s1.next Bool) (s4.next Bool) (n1.next Int)) Bool (and (not s4) (not s4.next) (d11 x0 x1 x2 x3 x4 x5 x6 x7 s1 n1 s1.next n1.next)))
(define-fun d41 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n1.next Int)) Bool (and s4 s4.next (d37 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (= n1 n1.next)))
(define-fun d42 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s4 Bool) (n1 Int) (s1.next Bool) (s3.next Bool) (s4.next Bool) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s4) s4.next (d8 s1) (d33 s1.next s3.next) (= n1 n1.next)))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n1.next Int)) Bool (or (d40 x0 x1 x2 x3 x4 x5 x6 x7 s1 s4 n1 s1.next s4.next n1.next) (d41 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 n1 s1.next s2.next s3.next s4.next n1.next) (d42 x0 x1 x2 x3 x4 x5 x6 x7 s1 s4 n1 s1.next s3.next s4.next n1.next)))
(define-fun d44 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and s4 (d38 s1 s2 s3)))
(define-fun d45 ((s0 Bool) (s1 Bool) (s4 Bool)) Bool (and (d0 s0) (d39 s1 s4)))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (n0 Int) (s0.next Bool) (n0.next Int)) Bool (or (d5 x0 x1 x2 x3 x4 x5 x6 x7 s0 n0 s0.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= n0 n0.next))))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n1.next Int)) Bool (or (d43 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 n1 s1.next s2.next s3.next s4.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= n1 n1.next))))
(define-fun d48 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n0.next Int) (n1.next Int)) Bool (and (d46 x0 x1 x2 x3 x4 x5 x6 x7 s0 n0 s0.next n0.next) (d47 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 n1 s1.next s2.next s3.next s4.next n1.next)))
(define-fun d49 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and (d2 s0) (d44 s1 s2 s3 s4)))
(define-fun d50 ((s5 Bool)) Bool (not s5))
(define-fun d51 ((x0 Bool) (s5 Bool) (s5.next Bool)) Bool (and (not x0) (not s5) (not s5.next)))
(define-fun d52 ((s5 Bool)) Bool (not s5))
(define-fun d53 ((s5 Bool)) Bool (not s5))
(define-fun d54 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s5.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 (not s5) s5.next))
(define-fun d55 ((s5 Bool)) Bool s5)
(define-fun d56 ((s5 Bool) (s6 Bool)) Bool (and (not s6) (d50 s5)))
(define-fun d57 ((x0 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not s6) (not s6.next) (d51 x0 s5 s5.next)))
(define-fun d58 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and s6 s6.next (d54 x0 x1 x2 x3 x4 x5 x6 x7 s5 s5.next)))
(define-fun d59 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s6) s6.next (d52 s5) (d53 s5.next)))
(define-fun d60 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d57 x0 s5 s6 s5.next s6.next) (d58 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next) (d59 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next)))
(define-fun d61 ((s5 Bool) (s6 Bool)) Bool (and s6 (d55 s5)))
(define-fun d62 ((s5 Bool)) Bool (not s5))
(define-fun d63 ((x0 Bool) (s5 Bool) (s5.next Bool)) Bool (and (not x0) (not s5) (not s5.next)))
(define-fun d64 ((s5 Bool)) Bool (not s5))
(define-fun d65 ((s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s7) (d56 s5 s6)))
(define-fun d66 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not s7) (not s7.next) (d60 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next)))
(define-fun d67 ((x0 Bool) (s5 Bool) (s7 Bool) (s5.next Bool) (s7.next Bool)) Bool (and s7 s7.next (d63 x0 s5 s5.next)))
(define-fun d68 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s7.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s7) s7.next (d61 s5 s6) (d62 s5.next)))
(define-fun d69 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d66 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next) (d67 x0 s5 s7 s5.next s7.next) (d68 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s7.next)))
(define-fun d70 ((s5 Bool) (s7 Bool)) Bool (and s7 (d64 s5)))
(define-fun d71 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (d45 s0 s1 s4) (d65 s5 s6 s7)))
(define-fun d72 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n0.next Int) (n1.next Int)) Bool (or (d48 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 n0 n1 s0.next s1.next s2.next s3.next s4.next n0.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= n0 n0.next) (= n1 n1.next))))
(define-fun d73 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d69 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next))))
(define-fun d74 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int) (n1.next Int)) Bool (and (d72 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 n0 n1 s0.next s1.next s2.next s3.next s4.next n0.next n1.next) (d73 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next)))
(define-fun d75 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool)) Bool (and (d49 s0 s1 s2 s3 s4) (d70 s5 s7)))
(define-fun d76 ((s8 Bool)) Bool (not s8))
(define-fun d77 ((x0 Bool) (s8 Bool) (s8.next Bool)) Bool (and (not x0) (not s8) (not s8.next)))
(define-fun d78 ((s8 Bool)) Bool (not s8))
(define-fun d79 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (d71 s0 s1 s4 s5 s6 s7) (d76 s8)))
(define-fun d80 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int) (n1.next Int)) Bool (or (d74 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= n0 n0.next) (= n1 n1.next))))
(define-fun d81 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s8.next Bool)) Bool (or (d77 x0 s8 s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8 s8.next))))
(define-fun d82 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int)) Bool (and (d80 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next n1.next) (d81 x0 x1 x2 x3 x4 x5 x6 x7 s8 s8.next)))
(define-fun d83 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool)) Bool (and (d75 s0 s1 s2 s3 s4 s5 s7) (d78 s8)))
(define-fun d84 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (not s9) (d79 s0 s1 s4 s5 s6 s7 s8)))
(define-fun d85 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int)) Bool (or (d82 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= n0 n0.next) (= n1 n1.next))))
(define-fun d86 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n3 Int) (n3.next Int)) Bool (or (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n3.next (+ n3 1))) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n3.next n3))))
(define-fun d87 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (and (not s9) (not s9.next) (d85 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next n1.next) (d86 x0 x1 x2 x3 x4 x5 x6 x7 n3 n3.next)))
(define-fun d88 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (and (not s9) s9.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= n0 n0.next) (= n1 n1.next) (= n3.next n3)))
(define-fun d89 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (and s9 s9.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d82 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next n1.next) (= n3.next n3)))
(define-fun d90 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (or (d87 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (d88 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (d89 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next)))
(define-fun d91 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and s9 (d83 s0 s1 s2 s3 s4 s5 s7 s8)))
(define-fun d92 ((y32 Bool) (y33 Bool) (y34 Bool) (y35 Bool) (y36 Bool) (y37 Bool) (y38 Bool) (y39 Bool)) Bool (and y32 (not y33) (not y34) (not y35) (not y36) (not y37) (not y38) (not y39)))
(define-fun d93 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (or (d90 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= n0 n0.next) (= n1 n1.next) (= n3 n3.next))))
(define-fun d94 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (not s10) (d84 s0 s1 s4 s5 s6 s7 s8 s9)))
(define-fun d95 ((y32 Bool) (y33 Bool) (y34 Bool) (y35 Bool) (y36 Bool) (y37 Bool) (y38 Bool) (y39 Bool) (n2 Int) (n2.next Int)) Bool (or (and (not (d92 y32 y33 y34 y35 y36 y37 y38 y39)) (= n2.next (+ 1 n2))) (and (d92 y32 y33 y34 y35 y36 y37 y38 y39) (= n2.next n2))))
(define-fun d96 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (y32 Bool) (y33 Bool) (y34 Bool) (y35 Bool) (y36 Bool) (y37 Bool) (y38 Bool) (y39 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and (not s10) (not s10.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d93 y32 y33 y34 y35 y36 y37 y38 y39 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (d95 y32 y33 y34 y35 y36 y37 y38 y39 n2 n2.next)))
(define-fun d97 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and (not s10) s10.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= n0 n0.next) (= n1 n1.next) (= n3 n3.next) (= n2.next n2)))
(define-fun d98 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and s10 s10.next (d90 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (= n2.next n2)))
(define-fun d99 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (y32 Bool) (y33 Bool) (y34 Bool) (y35 Bool) (y36 Bool) (y37 Bool) (y38 Bool) (y39 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (or (d96 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 y32 y33 y34 y35 y36 y37 y38 y39 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (d97 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (d98 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next)))
(define-fun d100 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and s10 (d91 s0 s1 s2 s3 s4 s5 s7 s8 s9)))
(define-fun d101 ((s11 Bool)) Bool (not s11))
(define-fun d102 ((x0 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not s11) (not s11.next)))
(define-fun d103 ((s11 Bool)) Bool (not s11))
(define-fun d104 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (d94 s0 s1 s4 s5 s6 s7 s8 s9 s10) (d101 s11)))
(define-fun d105 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (y32 Bool) (y33 Bool) (y34 Bool) (y35 Bool) (y36 Bool) (y37 Bool) (y38 Bool) (y39 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (or (d99 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 y32 y33 y34 y35 y36 y37 y38 y39 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next) (= n3 n3.next))))
(define-fun d106 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s11.next Bool)) Bool (or (d102 x0 s11 s11.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s11 s11.next))))
(define-fun d107 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y24 Bool) (y25 Bool) (y26 Bool) (y27 Bool) (y28 Bool) (y29 Bool) (y30 Bool) (y31 Bool) (y32 Bool) (y33 Bool) (y34 Bool) (y35 Bool) (y36 Bool) (y37 Bool) (y38 Bool) (y39 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and (d105 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 y32 y33 y34 y35 y36 y37 y38 y39 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (d106 x0 x1 x2 x3 x4 x5 x6 x7 s11 s11.next)))
(define-fun d108 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (d100 s0 s1 s2 s3 s4 s5 s7 s8 s9 s10) (d103 s11)))
;
;
(define-fun I () Bool (! (d104 s0 s1 s4 s5 s6 s7 s8 s9 s10 s11) :init true))
(define-fun T () Bool (! (d107 x0 x1 x2 x3 x4 x5 x6 x7 y24 y25 y26 y27 y28 y29 y30 y31 y32 y33 y34 y35 y36 y37 y38 y39 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next n1.next n2.next n3.next) :trans true))
(define-fun O () Bool (! (not (d108 s0 s1 s2 s3 s4 s5 s7 s8 s9 s10 s11)) :invar-property 0))
