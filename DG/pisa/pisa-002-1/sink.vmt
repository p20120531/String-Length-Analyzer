(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
(declare-fun s13 () Bool)
(declare-fun s13.next () Bool)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! s0 :next s0.next))
(define-fun nxt9 () Bool (! s1 :next s1.next))
(define-fun nxt10 () Bool (! s2 :next s2.next))
(define-fun nxt11 () Bool (! s3 :next s3.next))
(define-fun nxt12 () Bool (! s4 :next s4.next))
(define-fun nxt13 () Bool (! s5 :next s5.next))
(define-fun nxt14 () Bool (! s6 :next s6.next))
(define-fun nxt15 () Bool (! s7 :next s7.next))
(define-fun nxt16 () Bool (! s8 :next s8.next))
(define-fun nxt17 () Bool (! s9 :next s9.next))
(define-fun nxt18 () Bool (! s10 :next s10.next))
(define-fun nxt19 () Bool (! s11 :next s11.next))
(define-fun nxt20 () Bool (! s12 :next s12.next))
(define-fun nxt21 () Bool (! s13 :next s13.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s1 Bool)) Bool (not s1))
(define-fun d4 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d5 ((s1 Bool)) Bool (not s1))
(define-fun d6 ((s1 Bool)) Bool (not s1))
(define-fun d7 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) (not x7) (not s1) s1.next))
(define-fun d8 ((s1 Bool)) Bool s1)
(define-fun d9 ((s1 Bool) (s2 Bool)) Bool (and (not s2) (d3 s1)))
(define-fun d10 ((x0 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not s2) (not s2.next) (d4 x0 s1 s1.next)))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and s2 s2.next (d7 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d12 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s2) s2.next (d5 s1) (d6 s1.next)))
(define-fun d13 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (or (d10 x0 s1 s2 s1.next s2.next) (d11 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next) (d12 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d14 ((s1 Bool) (s2 Bool)) Bool (and s2 (d8 s1)))
(define-fun d15 ((s1 Bool)) Bool (not s1))
(define-fun d16 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d17 ((s1 Bool)) Bool (not s1))
(define-fun d18 ((s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (not s3) (d9 s1 s2)))
(define-fun d19 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not s3) (not s3.next) (d13 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d20 ((x0 Bool) (s1 Bool) (s3 Bool) (s1.next Bool) (s3.next Bool)) Bool (and s3 s3.next (d16 x0 s1 s1.next)))
(define-fun d21 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s3.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s3) s3.next (d14 s1 s2) (d15 s1.next)))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d19 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (d20 x0 s1 s3 s1.next s3.next) (d21 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s3.next)))
(define-fun d23 ((s1 Bool) (s3 Bool)) Bool (and s3 (d17 s1)))
(define-fun d24 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (d0 s0) (d18 s1 s2 s3)))
(define-fun d25 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d1 x0 s0 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d26 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d22 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next))))
(define-fun d27 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (d25 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d26 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next)))
(define-fun d28 ((s0 Bool) (s1 Bool) (s3 Bool)) Bool (and (d2 s0) (d23 s1 s3)))
(define-fun d29 ((s4 Bool)) Bool (not s4))
(define-fun d30 ((x0 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not s4) (not s4.next)))
(define-fun d31 ((s4 Bool)) Bool (not s4))
(define-fun d32 ((s4 Bool) (s5 Bool)) Bool (and (not s4) s5))
(define-fun d33 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) x6 x7 s4 (not s5) (not s4.next) (not s5.next)))
(define-fun d34 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 x7 (not s4) s5 s4.next (not s5.next)))
(define-fun d35 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (or (d33 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (d34 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next)))
(define-fun d36 ((s4 Bool) (s5 Bool)) Bool (and (not s4) (not s5)))
(define-fun d37 ((s4 Bool) (s6 Bool)) Bool (and (not s6) (d29 s4)))
(define-fun d38 ((x0 Bool) (s4 Bool) (s6 Bool) (s4.next Bool) (s6.next Bool)) Bool (and (not s6) (not s6.next) (d30 x0 s4 s4.next)))
(define-fun d39 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and s6 s6.next (d35 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next)))
(define-fun d40 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s6) s6.next (d31 s4) (d32 s4.next s5.next)))
(define-fun d41 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d38 x0 s4 s6 s4.next s6.next) (d39 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next) (d40 x0 x1 x2 x3 x4 x5 x6 x7 s4 s6 s4.next s5.next s6.next)))
(define-fun d42 ((s4 Bool) (s5 Bool) (s6 Bool)) Bool (and s6 (d36 s4 s5)))
(define-fun d43 ((s4 Bool)) Bool (not s4))
(define-fun d44 ((x0 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not s4) (not s4.next)))
(define-fun d45 ((s4 Bool)) Bool (not s4))
(define-fun d46 ((s4 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s7) (d37 s4 s6)))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not s7) (not s7.next) (d41 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next)))
(define-fun d48 ((x0 Bool) (s4 Bool) (s7 Bool) (s4.next Bool) (s7.next Bool)) Bool (and s7 s7.next (d44 x0 s4 s4.next)))
(define-fun d49 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s4.next Bool) (s7.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s7) s7.next (d42 s4 s5 s6) (d43 s4.next)))
(define-fun d50 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d47 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s4.next s5.next s6.next s7.next) (d48 x0 s4 s7 s4.next s7.next) (d49 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s4.next s7.next)))
(define-fun d51 ((s4 Bool) (s7 Bool)) Bool (and s7 (d45 s4)))
(define-fun d52 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s6 Bool) (s7 Bool)) Bool (and (d24 s0 s1 s2 s3) (d46 s4 s6 s7)))
(define-fun d53 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d27 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next))))
(define-fun d54 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d50 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s4.next s5.next s6.next s7.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next))))
(define-fun d55 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (d53 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d54 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s4.next s5.next s6.next s7.next)))
(define-fun d56 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s7 Bool)) Bool (and (d28 s0 s1 s3) (d51 s4 s7)))
(define-fun d57 ((s8 Bool)) Bool (not s8))
(define-fun d58 ((x0 Bool) (s8 Bool) (s8.next Bool)) Bool (and (not x0) (not s8) (not s8.next)))
(define-fun d59 ((s8 Bool)) Bool (not s8))
(define-fun d60 ((s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (not s8) s9 (not s10) s11))
(define-fun d61 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) x7 s8 (not s9) (not s10) (not s11) (not s8.next) (not s9.next) s10.next s11.next))
(define-fun d62 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) x7 s8 (not s9) (not s10) s11 (not s8.next) (not s9.next) (not s10.next) (not s11.next)))
(define-fun d63 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) (not s8) s9 s10 s11 (not s8.next) s9.next s10.next (not s11.next)))
(define-fun d64 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) (not s8) s9 s10 (not s11) (not s8.next) (not s9.next) (not s10.next) s11.next))
(define-fun d65 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) x6 x7 (not s8) (not s9) s10 (not s11) (not s8.next) s9.next (not s10.next) (not s11.next)))
(define-fun d66 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 (not x7) (not s8) s9 (not s10) s11 s8.next (not s9.next) (not s10.next) s11.next))
(define-fun d67 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 (not x7) (not s8) s9 (not s10) (not s11) s8.next (not s9.next) (not s10.next) (not s11.next)))
(define-fun d68 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) (not x6) (not x7) (not s8) (not s9) (not s10) (not s11) (not s8.next) s9.next s10.next s11.next))
(define-fun d69 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 x7 (not s8) (not s9) (not s10) s11 (not s8.next) (not s9.next) s10.next (not s11.next)))
(define-fun d70 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (or (d61 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d62 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d63 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d64 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d65 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d66 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d67 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d68 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next) (d69 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next)))
(define-fun d71 ((s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (not s8) (not s9) s10 s11))
(define-fun d72 ((s8 Bool) (s12 Bool)) Bool (and (not s12) (d57 s8)))
(define-fun d73 ((x0 Bool) (s8 Bool) (s12 Bool) (s8.next Bool) (s12.next Bool)) Bool (and (not s12) (not s12.next) (d58 x0 s8 s8.next)))
(define-fun d74 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (and s12 s12.next (d70 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s8.next s9.next s10.next s11.next)))
(define-fun d75 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s12 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s12) s12.next (d59 s8) (d60 s8.next s9.next s10.next s11.next)))
(define-fun d76 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d73 x0 s8 s12 s8.next s12.next) (d74 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s12 s8.next s9.next s10.next s11.next s12.next) (d75 x0 x1 x2 x3 x4 x5 x6 x7 s8 s12 s8.next s9.next s10.next s11.next s12.next)))
(define-fun d77 ((s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool)) Bool (and s12 (d71 s8 s9 s10 s11)))
(define-fun d78 ((s8 Bool)) Bool (not s8))
(define-fun d79 ((x0 Bool) (s8 Bool) (s8.next Bool)) Bool (and (not x0) (not s8) (not s8.next)))
(define-fun d80 ((s8 Bool)) Bool (not s8))
(define-fun d81 ((s8 Bool) (s12 Bool) (s13 Bool)) Bool (and (not s13) (d72 s8 s12)))
(define-fun d82 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool)) Bool (and (not s13) (not s13.next) (d76 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s12 s8.next s9.next s10.next s11.next s12.next)))
(define-fun d83 ((x0 Bool) (s8 Bool) (s13 Bool) (s8.next Bool) (s13.next Bool)) Bool (and s13 s13.next (d79 x0 s8 s8.next)))
(define-fun d84 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s8.next Bool) (s13.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s13) s13.next (d77 s8 s9 s10 s11 s12) (d78 s8.next)))
(define-fun d85 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool)) Bool (or (d82 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s12 s13 s8.next s9.next s10.next s11.next s12.next s13.next) (d83 x0 s8 s13 s8.next s13.next) (d84 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s12 s13 s8.next s13.next)))
(define-fun d86 ((s8 Bool) (s13 Bool)) Bool (and s13 (d80 s8)))
(define-fun d87 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s12 Bool) (s13 Bool)) Bool (and (d52 s0 s1 s2 s3 s4 s6 s7) (d81 s8 s12 s13)))
(define-fun d88 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d55 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next))))
(define-fun d89 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool)) Bool (or (d85 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s12 s13 s8.next s9.next s10.next s11.next s12.next s13.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next))))
(define-fun d90 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool)) Bool (and (d88 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next) (d89 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s11 s12 s13 s8.next s9.next s10.next s11.next s12.next s13.next)))
(define-fun d91 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s7 Bool) (s8 Bool) (s13 Bool)) Bool (and (d56 s0 s1 s3 s4 s7) (d86 s8 s13)))
;
(define-fun d92 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s7 Bool) (s8 Bool) (s13 Bool)) Bool (and (d91 s0 s1 s3 s4 s7 s8 s13)))
(define-fun d93 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s12 Bool) (s13 Bool)) Bool (and (d87 s0 s1 s2 s3 s4 s6 s7 s8 s12 s13)))
;
(define-fun I () Bool (! (d93 s0 s1 s2 s3 s4 s6 s7 s8 s12 s13) :init true))
(define-fun T () Bool (! (d90 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next) :trans true))
(define-fun O () Bool (! (not (d92 s0 s1 s3 s4 s7 s8 s13)) :invar-property 0))
