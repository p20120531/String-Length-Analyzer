(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun y72 () Bool)
(declare-fun y72.next () Bool)
(declare-fun y73 () Bool)
(declare-fun y73.next () Bool)
(declare-fun y74 () Bool)
(declare-fun y74.next () Bool)
(declare-fun y75 () Bool)
(declare-fun y75.next () Bool)
(declare-fun y76 () Bool)
(declare-fun y76.next () Bool)
(declare-fun y77 () Bool)
(declare-fun y77.next () Bool)
(declare-fun y78 () Bool)
(declare-fun y78.next () Bool)
(declare-fun y79 () Bool)
(declare-fun y79.next () Bool)
(declare-fun y80 () Bool)
(declare-fun y80.next () Bool)
(declare-fun y81 () Bool)
(declare-fun y81.next () Bool)
(declare-fun y82 () Bool)
(declare-fun y82.next () Bool)
(declare-fun y83 () Bool)
(declare-fun y83.next () Bool)
(declare-fun y84 () Bool)
(declare-fun y84.next () Bool)
(declare-fun y85 () Bool)
(declare-fun y85.next () Bool)
(declare-fun y86 () Bool)
(declare-fun y86.next () Bool)
(declare-fun y87 () Bool)
(declare-fun y87.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
(declare-fun s13 () Bool)
(declare-fun s13.next () Bool)
(declare-fun s14 () Bool)
(declare-fun s14.next () Bool)
(declare-fun s15 () Bool)
(declare-fun s15.next () Bool)
(declare-fun s16 () Bool)
(declare-fun s16.next () Bool)
(declare-fun s17 () Bool)
(declare-fun s17.next () Bool)
(declare-fun s18 () Bool)
(declare-fun s18.next () Bool)
(declare-fun s19 () Bool)
(declare-fun s19.next () Bool)
(declare-fun s20 () Bool)
(declare-fun s20.next () Bool)
(declare-fun s21 () Bool)
(declare-fun s21.next () Bool)
(declare-fun n0 () Int)
(declare-fun n0.next () Int)
(declare-fun n1 () Int)
(declare-fun n1.next () Int)
(declare-fun n2 () Int)
(declare-fun n2.next () Int)
(declare-fun n3 () Int)
(declare-fun n3.next () Int)
(declare-fun n4 () Int)
(declare-fun n4.next () Int)
(declare-fun n5 () Int)
(declare-fun n5.next () Int)
(declare-fun K0 () Int)
(declare-fun K0.next () Int)
(declare-fun K1 () Int)
(declare-fun K1.next () Int)
(declare-fun K2 () Int)
(declare-fun K2.next () Int)
(declare-fun K3 () Int)
(declare-fun K3.next () Int)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! y72 :next y72.next))
(define-fun nxt9 () Bool (! y73 :next y73.next))
(define-fun nxt10 () Bool (! y74 :next y74.next))
(define-fun nxt11 () Bool (! y75 :next y75.next))
(define-fun nxt12 () Bool (! y76 :next y76.next))
(define-fun nxt13 () Bool (! y77 :next y77.next))
(define-fun nxt14 () Bool (! y78 :next y78.next))
(define-fun nxt15 () Bool (! y79 :next y79.next))
(define-fun nxt16 () Bool (! y80 :next y80.next))
(define-fun nxt17 () Bool (! y81 :next y81.next))
(define-fun nxt18 () Bool (! y82 :next y82.next))
(define-fun nxt19 () Bool (! y83 :next y83.next))
(define-fun nxt20 () Bool (! y84 :next y84.next))
(define-fun nxt21 () Bool (! y85 :next y85.next))
(define-fun nxt22 () Bool (! y86 :next y86.next))
(define-fun nxt23 () Bool (! y87 :next y87.next))
(define-fun nxt24 () Bool (! s0 :next s0.next))
(define-fun nxt25 () Bool (! s1 :next s1.next))
(define-fun nxt26 () Bool (! s2 :next s2.next))
(define-fun nxt27 () Bool (! s3 :next s3.next))
(define-fun nxt28 () Bool (! s4 :next s4.next))
(define-fun nxt29 () Bool (! s5 :next s5.next))
(define-fun nxt30 () Bool (! s6 :next s6.next))
(define-fun nxt31 () Bool (! s7 :next s7.next))
(define-fun nxt32 () Bool (! s8 :next s8.next))
(define-fun nxt33 () Bool (! s9 :next s9.next))
(define-fun nxt34 () Bool (! s10 :next s10.next))
(define-fun nxt35 () Bool (! s11 :next s11.next))
(define-fun nxt36 () Bool (! s12 :next s12.next))
(define-fun nxt37 () Bool (! s13 :next s13.next))
(define-fun nxt38 () Bool (! s14 :next s14.next))
(define-fun nxt39 () Bool (! s15 :next s15.next))
(define-fun nxt40 () Bool (! s16 :next s16.next))
(define-fun nxt41 () Bool (! s17 :next s17.next))
(define-fun nxt42 () Bool (! s18 :next s18.next))
(define-fun nxt43 () Bool (! s19 :next s19.next))
(define-fun nxt44 () Bool (! s20 :next s20.next))
(define-fun nxt45 () Bool (! s21 :next s21.next))
(define-fun nxt46 () Bool (! n0 :next n0.next))
(define-fun nxt47 () Bool (! n1 :next n1.next))
(define-fun nxt48 () Bool (! n2 :next n2.next))
(define-fun nxt49 () Bool (! n3 :next n3.next))
(define-fun nxt50 () Bool (! n4 :next n4.next))
(define-fun nxt51 () Bool (! n5 :next n5.next))
(define-fun nxt52 () Bool (! K0 :next K0.next))
(define-fun nxt53 () Bool (! K1 :next K1.next))
(define-fun nxt54 () Bool (! K2 :next K2.next))
(define-fun nxt55 () Bool (! K3 :next K3.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n0.next (+ n0 1))))
(define-fun d4 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n0.next n0)))
(define-fun d5 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (n0 Int) (s0.next Bool) (n0.next Int)) Bool (and (d1 x0 s0 s0.next) (or (d3 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next) (d4 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next))))
(define-fun d6 ((s1 Bool)) Bool (not s1))
(define-fun d7 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d8 ((s1 Bool)) Bool (not s1))
(define-fun d9 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n1.next (+ n1 1))))
(define-fun d10 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n1.next n1)))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (n1 Int) (s1.next Bool) (n1.next Int)) Bool (and (d7 x0 s1 s1.next) (or (d9 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next) (d10 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next))))
(define-fun d12 ((s1 Bool)) Bool (not s1))
(define-fun d13 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 (not s1) s1.next))
(define-fun d14 ((s1 Bool)) Bool s1)
(define-fun d15 ((s1 Bool)) Bool (not s1))
(define-fun d16 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d17 ((s1 Bool)) Bool (not s1))
(define-fun d18 ((s2 Bool)) Bool (not s2))
(define-fun d19 ((x0 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x7) (not s2) (not s2.next)))
(define-fun d20 ((x0 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x6) (not s2) (not s2.next)))
(define-fun d21 ((x0 Bool) (x5 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x5) (not s2) (not s2.next)))
(define-fun d22 ((x0 Bool) (x4 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x4) (not s2) (not s2.next)))
(define-fun d23 ((x0 Bool) (x3 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x3 (not s2) (not s2.next)))
(define-fun d24 ((x0 Bool) (x2 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x2) (not s2) (not s2.next)))
(define-fun d25 ((x0 Bool) (x1 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not s2) (not s2.next)))
(define-fun d26 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d19 x0 x7 s2 s2.next) (d20 x0 x6 s2 s2.next) (d21 x0 x5 s2 s2.next) (d22 x0 x4 s2 s2.next) (d23 x0 x3 s2 s2.next) (d24 x0 x2 s2 s2.next) (d25 x0 x1 s2 s2.next)))
(define-fun d27 ((s2 Bool)) Bool (not s2))
(define-fun d28 ((s1 Bool) (s2 Bool)) Bool (and (d15 s1) (d18 s2)))
(define-fun d29 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d16 x0 s1 s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next))))
(define-fun d30 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d26 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next))))
(define-fun d31 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (d29 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (d30 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d32 ((s1 Bool) (s2 Bool)) Bool (and (d17 s1) (d27 s2)))
(define-fun d33 ((s1 Bool) (s3 Bool)) Bool (and (not s3) (d12 s1)))
(define-fun d34 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s3 Bool) (s1.next Bool) (s3.next Bool)) Bool (and (not s3) (not s3.next) (d13 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d35 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and s3 s3.next (d31 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d36 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s3) s3.next (d14 s1) (d28 s1.next s2.next)))
(define-fun d37 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d34 x0 x1 x2 x3 x4 x5 x6 x7 s1 s3 s1.next s3.next) (d35 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (d36 x0 x1 x2 x3 x4 x5 x6 x7 s1 s3 s1.next s2.next s3.next)))
(define-fun d38 ((s1 Bool) (s2 Bool) (s3 Bool)) Bool (and s3 (d32 s1 s2)))
(define-fun d39 ((s1 Bool) (s4 Bool)) Bool (and (not s4) (d6 s1)))
(define-fun d40 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s4 Bool) (n1 Int) (s1.next Bool) (s4.next Bool) (n1.next Int)) Bool (and (not s4) (not s4.next) (d11 x0 x1 x2 x3 x4 x5 x6 x7 s1 n1 s1.next n1.next)))
(define-fun d41 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n1.next Int)) Bool (and s4 s4.next (d37 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (= n1 n1.next)))
(define-fun d42 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s4 Bool) (n1 Int) (s1.next Bool) (s3.next Bool) (s4.next Bool) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s4) s4.next (d8 s1) (d33 s1.next s3.next) (= n1 n1.next)))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n1.next Int)) Bool (or (d40 x0 x1 x2 x3 x4 x5 x6 x7 s1 s4 n1 s1.next s4.next n1.next) (d41 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 n1 s1.next s2.next s3.next s4.next n1.next) (d42 x0 x1 x2 x3 x4 x5 x6 x7 s1 s4 n1 s1.next s3.next s4.next n1.next)))
(define-fun d44 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and s4 (d38 s1 s2 s3)))
(define-fun d45 ((s0 Bool) (s1 Bool) (s4 Bool)) Bool (and (d0 s0) (d39 s1 s4)))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (n0 Int) (s0.next Bool) (n0.next Int)) Bool (or (d5 x0 x1 x2 x3 x4 x5 x6 x7 s0 n0 s0.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= n0 n0.next))))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n1.next Int)) Bool (or (d43 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 n1 s1.next s2.next s3.next s4.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= n1 n1.next))))
(define-fun d48 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n0.next Int) (n1.next Int)) Bool (and (d46 x0 x1 x2 x3 x4 x5 x6 x7 s0 n0 s0.next n0.next) (d47 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 n1 s1.next s2.next s3.next s4.next n1.next)))
(define-fun d49 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and (d2 s0) (d44 s1 s2 s3 s4)))
(define-fun d50 ((s5 Bool)) Bool (not s5))
(define-fun d51 ((x0 Bool) (s5 Bool) (s5.next Bool)) Bool (and (not x0) (not s5) (not s5.next)))
(define-fun d52 ((s5 Bool)) Bool (not s5))
(define-fun d53 ((s5 Bool)) Bool (not s5))
(define-fun d54 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s5.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 (not s5) s5.next))
(define-fun d55 ((s5 Bool)) Bool s5)
(define-fun d56 ((s5 Bool) (s6 Bool)) Bool (and (not s6) (d50 s5)))
(define-fun d57 ((x0 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not s6) (not s6.next) (d51 x0 s5 s5.next)))
(define-fun d58 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and s6 s6.next (d54 x0 x1 x2 x3 x4 x5 x6 x7 s5 s5.next)))
(define-fun d59 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s6) s6.next (d52 s5) (d53 s5.next)))
(define-fun d60 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d57 x0 s5 s6 s5.next s6.next) (d58 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next) (d59 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next)))
(define-fun d61 ((s5 Bool) (s6 Bool)) Bool (and s6 (d55 s5)))
(define-fun d62 ((s5 Bool)) Bool (not s5))
(define-fun d63 ((x0 Bool) (s5 Bool) (s5.next Bool)) Bool (and (not x0) (not s5) (not s5.next)))
(define-fun d64 ((s5 Bool)) Bool (not s5))
(define-fun d65 ((s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s7) (d56 s5 s6)))
(define-fun d66 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not s7) (not s7.next) (d60 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next)))
(define-fun d67 ((x0 Bool) (s5 Bool) (s7 Bool) (s5.next Bool) (s7.next Bool)) Bool (and s7 s7.next (d63 x0 s5 s5.next)))
(define-fun d68 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s7.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s7) s7.next (d61 s5 s6) (d62 s5.next)))
(define-fun d69 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d66 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next) (d67 x0 s5 s7 s5.next s7.next) (d68 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s7.next)))
(define-fun d70 ((s5 Bool) (s7 Bool)) Bool (and s7 (d64 s5)))
(define-fun d71 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (d45 s0 s1 s4) (d65 s5 s6 s7)))
(define-fun d72 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n0.next Int) (n1.next Int)) Bool (or (d48 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 n0 n1 s0.next s1.next s2.next s3.next s4.next n0.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= n0 n0.next) (= n1 n1.next))))
(define-fun d73 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d69 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next))))
(define-fun d74 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int) (n1.next Int)) Bool (and (d72 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 n0 n1 s0.next s1.next s2.next s3.next s4.next n0.next n1.next) (d73 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next)))
(define-fun d75 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool)) Bool (and (d49 s0 s1 s2 s3 s4) (d70 s5 s7)))
(define-fun d76 ((s8 Bool)) Bool (not s8))
(define-fun d77 ((x0 Bool) (s8 Bool) (s8.next Bool)) Bool (and (not x0) (not s8) (not s8.next)))
(define-fun d78 ((s8 Bool)) Bool (not s8))
(define-fun d79 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (d71 s0 s1 s4 s5 s6 s7) (d76 s8)))
(define-fun d80 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int) (n1.next Int)) Bool (or (d74 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= n0 n0.next) (= n1 n1.next))))
(define-fun d81 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s8.next Bool)) Bool (or (d77 x0 s8 s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8 s8.next))))
(define-fun d82 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int)) Bool (and (d80 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next n1.next) (d81 x0 x1 x2 x3 x4 x5 x6 x7 s8 s8.next)))
(define-fun d83 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool)) Bool (and (d75 s0 s1 s2 s3 s4 s5 s7) (d78 s8)))
(define-fun d84 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (not s9) (d79 s0 s1 s4 s5 s6 s7 s8)))
(define-fun d85 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int)) Bool (or (d82 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= n0 n0.next) (= n1 n1.next))))
(define-fun d86 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n3 Int) (n3.next Int)) Bool (or (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n3.next (+ n3 1))) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n3.next n3))))
(define-fun d87 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (and (not s9) (not s9.next) (d85 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next n1.next) (d86 x0 x1 x2 x3 x4 x5 x6 x7 n3 n3.next)))
(define-fun d88 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (and (not s9) s9.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= n0 n0.next) (= n1 n1.next) (= n3.next n3)))
(define-fun d89 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (and s9 s9.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d82 y72 y73 y74 y75 y76 y77 y78 y79 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next n1.next) (= n3.next n3)))
(define-fun d90 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (or (d87 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (d88 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (d89 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next)))
(define-fun d91 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and s9 (d83 s0 s1 s2 s3 s4 s5 s7 s8)))
(define-fun d92 ((y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool)) Bool (and y80 (not y81) (not y82) (not y83) (not y84) (not y85) (not y86) (not y87)))
(define-fun d93 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (or (d90 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= n0 n0.next) (= n1 n1.next) (= n3 n3.next))))
(define-fun d94 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (not s10) (d84 s0 s1 s4 s5 s6 s7 s8 s9)))
(define-fun d95 ((y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool) (n2 Int) (n2.next Int)) Bool (or (and (not (d92 y80 y81 y82 y83 y84 y85 y86 y87)) (= n2.next (+ 1 n2))) (and (d92 y80 y81 y82 y83 y84 y85 y86 y87) (= n2.next n2))))
(define-fun d96 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and (not s10) (not s10.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d93 y80 y81 y82 y83 y84 y85 y86 y87 y72 y73 y74 y75 y76 y77 y78 y79 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (d95 y80 y81 y82 y83 y84 y85 y86 y87 n2 n2.next)))
(define-fun d97 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and (not s10) s10.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= n0 n0.next) (= n1 n1.next) (= n3 n3.next) (= n2.next n2)))
(define-fun d98 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and s10 s10.next (d90 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (= n2.next n2)))
(define-fun d99 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (or (d96 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 y80 y81 y82 y83 y84 y85 y86 y87 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (d97 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (d98 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next)))
(define-fun d100 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and s10 (d91 s0 s1 s2 s3 s4 s5 s7 s8 s9)))
(define-fun d101 ((s11 Bool)) Bool (not s11))
(define-fun d102 ((x0 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not s11) (not s11.next)))
(define-fun d103 ((s11 Bool)) Bool (not s11))
(define-fun d104 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (d94 s0 s1 s4 s5 s6 s7 s8 s9 s10) (d101 s11)))
(define-fun d105 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (or (d99 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 y80 y81 y82 y83 y84 y85 y86 y87 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next) (= n3 n3.next))))
(define-fun d106 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s11.next Bool)) Bool (or (d102 x0 s11 s11.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s11 s11.next))))
(define-fun d107 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and (d105 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 y80 y81 y82 y83 y84 y85 y86 y87 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (d106 x0 x1 x2 x3 x4 x5 x6 x7 s11 s11.next)))
(define-fun d108 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (d100 s0 s1 s2 s3 s4 s5 s7 s8 s9 s10) (d103 s11)))
(define-fun d109 ((s12 Bool)) Bool (not s12))
(define-fun d110 ((x0 Bool) (s12 Bool) (s12.next Bool)) Bool (and (not x0) (not s12) (not s12.next)))
(define-fun d111 ((s12 Bool)) Bool (not s12))
(define-fun d112 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n5 Int) (n5.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n5.next (+ n5 1))))
(define-fun d113 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n5 Int) (n5.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n5.next n5)))
(define-fun d114 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (n5 Int) (s12.next Bool) (n5.next Int)) Bool (and (d110 x0 s12 s12.next) (or (d112 x0 x1 x2 x3 x4 x5 x6 x7 n5 n5.next) (d113 x0 x1 x2 x3 x4 x5 x6 x7 n5 n5.next))))
(define-fun d115 ((s12 Bool)) Bool (not s12))
(define-fun d116 ((x0 Bool) (s12 Bool) (s12.next Bool)) Bool (and (not x0) (not s12) (not s12.next)))
(define-fun d117 ((s12 Bool)) Bool (not s12))
(define-fun d118 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n4 Int) (n4.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n4.next (+ n4 1))))
(define-fun d119 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n4 Int) (n4.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n4.next n4)))
(define-fun d120 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (n4 Int) (s12.next Bool) (n4.next Int)) Bool (and (d116 x0 s12 s12.next) (or (d118 x0 x1 x2 x3 x4 x5 x6 x7 n4 n4.next) (d119 x0 x1 x2 x3 x4 x5 x6 x7 n4 n4.next))))
(define-fun d121 ((s12 Bool)) Bool (not s12))
(define-fun d122 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s12.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 (not x7) (not s12) s12.next))
(define-fun d123 ((s12 Bool)) Bool s12)
(define-fun d124 ((s12 Bool) (s13 Bool)) Bool (and (not s13) (d115 s12)))
(define-fun d125 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (n4 Int) (s12.next Bool) (s13.next Bool) (n4.next Int)) Bool (and (not s13) (not s13.next) (d120 x0 x1 x2 x3 x4 x5 x6 x7 s12 n4 s12.next n4.next)))
(define-fun d126 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (n4 Int) (s12.next Bool) (s13.next Bool) (n4.next Int)) Bool (and s13 s13.next (d122 x0 x1 x2 x3 x4 x5 x6 x7 s12 s12.next) (= n4 n4.next)))
(define-fun d127 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (n4 Int) (s12.next Bool) (s13.next Bool) (n4.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s13) s13.next (d117 s12) (d121 s12.next) (= n4 n4.next)))
(define-fun d128 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (n4 Int) (s12.next Bool) (s13.next Bool) (n4.next Int)) Bool (or (d125 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 n4 s12.next s13.next n4.next) (d126 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 n4 s12.next s13.next n4.next) (d127 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 n4 s12.next s13.next n4.next)))
(define-fun d129 ((s12 Bool) (s13 Bool)) Bool (and s13 (d123 s12)))
(define-fun d130 ((s14 Bool)) Bool (not s14))
(define-fun d131 ((x0 Bool) (x6 Bool) (s14 Bool) (s14.next Bool)) Bool (and (not x0) (not x6) (not s14) (not s14.next)))
(define-fun d132 ((x0 Bool) (x5 Bool) (s14 Bool) (s14.next Bool)) Bool (and (not x0) (not x5) (not s14) (not s14.next)))
(define-fun d133 ((x0 Bool) (x4 Bool) (s14 Bool) (s14.next Bool)) Bool (and (not x0) (not x4) (not s14) (not s14.next)))
(define-fun d134 ((x0 Bool) (x3 Bool) (s14 Bool) (s14.next Bool)) Bool (and (not x0) x3 (not s14) (not s14.next)))
(define-fun d135 ((x0 Bool) (x7 Bool) (s14 Bool) (s14.next Bool)) Bool (and (not x0) x7 (not s14) (not s14.next)))
(define-fun d136 ((x0 Bool) (x2 Bool) (s14 Bool) (s14.next Bool)) Bool (and (not x0) (not x2) (not s14) (not s14.next)))
(define-fun d137 ((x0 Bool) (x1 Bool) (s14 Bool) (s14.next Bool)) Bool (and (not x0) x1 (not s14) (not s14.next)))
(define-fun d138 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s14 Bool) (s14.next Bool)) Bool (or (d131 x0 x6 s14 s14.next) (d132 x0 x5 s14 s14.next) (d133 x0 x4 s14 s14.next) (d134 x0 x3 s14 s14.next) (d135 x0 x7 s14 s14.next) (d136 x0 x2 s14 s14.next) (d137 x0 x1 s14 s14.next)))
(define-fun d139 ((s14 Bool)) Bool (not s14))
(define-fun d140 ((s14 Bool)) Bool (not s14))
(define-fun d141 ((x0 Bool) (s14 Bool) (s14.next Bool)) Bool (and (not x0) (not s14) s14.next))
(define-fun d142 ((s14 Bool)) Bool s14)
(define-fun d143 ((s14 Bool) (s15 Bool)) Bool (and (not s15) (d130 s14)))
(define-fun d144 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s14 Bool) (s15 Bool) (s14.next Bool) (s15.next Bool)) Bool (and (not s15) (not s15.next) (d138 x0 x1 x2 x3 x4 x5 x6 x7 s14 s14.next)))
(define-fun d145 ((x0 Bool) (s14 Bool) (s15 Bool) (s14.next Bool) (s15.next Bool)) Bool (and s15 s15.next (d141 x0 s14 s14.next)))
(define-fun d146 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s14 Bool) (s15 Bool) (s14.next Bool) (s15.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s15) s15.next (d139 s14) (d140 s14.next)))
(define-fun d147 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s14 Bool) (s15 Bool) (s14.next Bool) (s15.next Bool)) Bool (or (d144 x0 x1 x2 x3 x4 x5 x6 x7 s14 s15 s14.next s15.next) (d145 x0 s14 s15 s14.next s15.next) (d146 x0 x1 x2 x3 x4 x5 x6 x7 s14 s15 s14.next s15.next)))
(define-fun d148 ((s14 Bool) (s15 Bool)) Bool (and s15 (d142 s14)))
(define-fun d149 ((s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool)) Bool (and (d124 s12 s13) (d143 s14 s15)))
(define-fun d150 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (n4 Int) (s12.next Bool) (s13.next Bool) (n4.next Int)) Bool (or (d128 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 n4 s12.next s13.next n4.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s12 s12.next) (= s13 s13.next) (= n4 n4.next))))
(define-fun d151 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s14 Bool) (s15 Bool) (s14.next Bool) (s15.next Bool)) Bool (or (d147 x0 x1 x2 x3 x4 x5 x6 x7 s14 s15 s14.next s15.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s14 s14.next) (= s15 s15.next))))
(define-fun d152 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (n4 Int) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n4.next Int)) Bool (and (d150 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 n4 s12.next s13.next n4.next) (d151 x0 x1 x2 x3 x4 x5 x6 x7 s14 s15 s14.next s15.next)))
(define-fun d153 ((s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool)) Bool (and (d129 s12 s13) (d148 s14 s15)))
(define-fun d154 ((s12 Bool) (s16 Bool)) Bool (and (not s16) (d109 s12)))
(define-fun d155 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s16 Bool) (n4 Int) (n5 Int) (s12.next Bool) (s16.next Bool) (n4.next Int) (n5.next Int)) Bool (and (not s16) (not s16.next) (d114 x0 x1 x2 x3 x4 x5 x6 x7 s12 n5 s12.next n5.next) (= n4 n4.next)))
(define-fun d156 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (n4 Int) (n5 Int) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (n4.next Int) (n5.next Int)) Bool (and s16 s16.next (d152 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 s14 s15 n4 s12.next s13.next s14.next s15.next n4.next) (= n5 n5.next)))
(define-fun d157 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s16 Bool) (n4 Int) (n5 Int) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (n4.next Int) (n5.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s16) s16.next (d111 s12) (d149 s12.next s13.next s14.next s15.next) (= n4 n4.next) (= n5 n5.next)))
(define-fun d158 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (n4 Int) (n5 Int) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (n4.next Int) (n5.next Int)) Bool (or (d155 x0 x1 x2 x3 x4 x5 x6 x7 s12 s16 n4 n5 s12.next s16.next n4.next n5.next) (d156 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 s14 s15 s16 n4 n5 s12.next s13.next s14.next s15.next s16.next n4.next n5.next) (d157 x0 x1 x2 x3 x4 x5 x6 x7 s12 s16 n4 n5 s12.next s13.next s14.next s15.next s16.next n4.next n5.next)))
(define-fun d159 ((s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool)) Bool (and s16 (d153 s12 s13 s14 s15)))
(define-fun d160 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s16 Bool)) Bool (and (d104 s0 s1 s4 s5 s6 s7 s8 s9 s10 s11) (d154 s12 s16)))
(define-fun d161 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (or (d107 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 y80 y81 y82 y83 y84 y85 y86 y87 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next n1.next n2.next n3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next) (= n3 n3.next))))
(define-fun d162 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (n4 Int) (n5 Int) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (n4.next Int) (n5.next Int)) Bool (or (d158 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 s14 s15 s16 n4 n5 s12.next s13.next s14.next s15.next s16.next n4.next n5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s12 s12.next) (= s13 s13.next) (= s14 s14.next) (= s15 s15.next) (= s16 s16.next) (= n4 n4.next) (= n5 n5.next))))
(define-fun d163 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (n4 Int) (n5 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int) (n4.next Int) (n5.next Int)) Bool (and (d161 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 y80 y81 y82 y83 y84 y85 y86 y87 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next n1.next n2.next n3.next) (d162 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 s14 s15 s16 n4 n5 s12.next s13.next s14.next s15.next s16.next n4.next n5.next)))
(define-fun d164 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool)) Bool (and (d108 s0 s1 s2 s3 s4 s5 s7 s8 s9 s10 s11) (d159 s12 s13 s14 s15 s16)))
(define-fun d165 ((s17 Bool)) Bool (not s17))
(define-fun d166 ((x0 Bool) (s17 Bool) (s17.next Bool)) Bool (and (not x0) (not s17) (not s17.next)))
(define-fun d167 ((s17 Bool)) Bool (not s17))
(define-fun d168 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s16 Bool) (s17 Bool)) Bool (and (d160 s0 s1 s4 s5 s6 s7 s8 s9 s10 s11 s12 s16) (d165 s17)))
(define-fun d169 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (n4 Int) (n5 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int) (n4.next Int) (n5.next Int)) Bool (or (d163 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 y80 y81 y82 y83 y84 y85 y86 y87 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 n0 n1 n2 n3 n4 n5 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next s16.next n0.next n1.next n2.next n3.next n4.next n5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= s14 s14.next) (= s15 s15.next) (= s16 s16.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next) (= n3 n3.next) (= n4 n4.next) (= n5 n5.next))))
(define-fun d170 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s17.next Bool)) Bool (or (d166 x0 s17 s17.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s17 s17.next))))
(define-fun d171 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (s17 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (n4 Int) (n5 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (s17.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int) (n4.next Int) (n5.next Int)) Bool (and (d169 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 y80 y81 y82 y83 y84 y85 y86 y87 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 n0 n1 n2 n3 n4 n5 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next s16.next n0.next n1.next n2.next n3.next n4.next n5.next) (d170 x0 x1 x2 x3 x4 x5 x6 x7 s17 s17.next)))
(define-fun d172 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (s17 Bool)) Bool (and (d164 s0 s1 s2 s3 s4 s5 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16) (d167 s17)))
(define-fun d173 ((s18 Bool)) Bool (not s18))
(define-fun d174 ((x0 Bool) (s18 Bool) (s18.next Bool)) Bool (and (not x0) (not s18) (not s18.next)))
(define-fun d175 ((s18 Bool)) Bool (not s18))
(define-fun d176 ((s18 Bool) (s19 Bool)) Bool (and (not s18) s19))
(define-fun d177 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s18 Bool) (s19 Bool) (s18.next Bool) (s19.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 (not x7) s18 s19 (not s18.next) (not s19.next)))
(define-fun d178 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s18 Bool) (s19 Bool) (s18.next Bool) (s19.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 (not s18) (not s19) s18.next (not s19.next)))
(define-fun d179 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s18 Bool) (s19 Bool) (s18.next Bool) (s19.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 (not x7) (not s18) s19 s18.next s19.next))
(define-fun d180 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s18 Bool) (s19 Bool) (s18.next Bool) (s19.next Bool)) Bool (or (d177 x0 x1 x2 x3 x4 x5 x6 x7 s18 s19 s18.next s19.next) (d178 x0 x1 x2 x3 x4 x5 x6 x7 s18 s19 s18.next s19.next) (d179 x0 x1 x2 x3 x4 x5 x6 x7 s18 s19 s18.next s19.next)))
(define-fun d181 ((s18 Bool) (s19 Bool)) Bool (and s18 (not s19)))
(define-fun d182 ((s18 Bool) (s20 Bool)) Bool (and (not s20) (d173 s18)))
(define-fun d183 ((x0 Bool) (s18 Bool) (s20 Bool) (s18.next Bool) (s20.next Bool)) Bool (and (not s20) (not s20.next) (d174 x0 s18 s18.next)))
(define-fun d184 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (s18.next Bool) (s19.next Bool) (s20.next Bool)) Bool (and s20 s20.next (d180 x0 x1 x2 x3 x4 x5 x6 x7 s18 s19 s18.next s19.next)))
(define-fun d185 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s18 Bool) (s20 Bool) (s18.next Bool) (s19.next Bool) (s20.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s20) s20.next (d175 s18) (d176 s18.next s19.next)))
(define-fun d186 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (s18.next Bool) (s19.next Bool) (s20.next Bool)) Bool (or (d183 x0 s18 s20 s18.next s20.next) (d184 x0 x1 x2 x3 x4 x5 x6 x7 s18 s19 s20 s18.next s19.next s20.next) (d185 x0 x1 x2 x3 x4 x5 x6 x7 s18 s20 s18.next s19.next s20.next)))
(define-fun d187 ((s18 Bool) (s19 Bool) (s20 Bool)) Bool (and s20 (d181 s18 s19)))
(define-fun d188 ((s18 Bool)) Bool (not s18))
(define-fun d189 ((x0 Bool) (s18 Bool) (s18.next Bool)) Bool (and (not x0) (not s18) (not s18.next)))
(define-fun d190 ((s18 Bool)) Bool (not s18))
(define-fun d191 ((s18 Bool) (s20 Bool) (s21 Bool)) Bool (and (not s21) (d182 s18 s20)))
(define-fun d192 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (s21 Bool) (s18.next Bool) (s19.next Bool) (s20.next Bool) (s21.next Bool)) Bool (and (not s21) (not s21.next) (d186 x0 x1 x2 x3 x4 x5 x6 x7 s18 s19 s20 s18.next s19.next s20.next)))
(define-fun d193 ((x0 Bool) (s18 Bool) (s21 Bool) (s18.next Bool) (s21.next Bool)) Bool (and s21 s21.next (d189 x0 s18 s18.next)))
(define-fun d194 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (s21 Bool) (s18.next Bool) (s21.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s21) s21.next (d187 s18 s19 s20) (d188 s18.next)))
(define-fun d195 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (s21 Bool) (s18.next Bool) (s19.next Bool) (s20.next Bool) (s21.next Bool)) Bool (or (d192 x0 x1 x2 x3 x4 x5 x6 x7 s18 s19 s20 s21 s18.next s19.next s20.next s21.next) (d193 x0 s18 s21 s18.next s21.next) (d194 x0 x1 x2 x3 x4 x5 x6 x7 s18 s19 s20 s21 s18.next s21.next)))
(define-fun d196 ((s18 Bool) (s21 Bool)) Bool (and s21 (d190 s18)))
(define-fun d197 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s16 Bool) (s17 Bool) (s18 Bool) (s20 Bool) (s21 Bool)) Bool (and (d168 s0 s1 s4 s5 s6 s7 s8 s9 s10 s11 s12 s16 s17) (d191 s18 s20 s21)))
(define-fun d198 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (s17 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (n4 Int) (n5 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (s17.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int) (n4.next Int) (n5.next Int)) Bool (or (d171 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 y80 y81 y82 y83 y84 y85 y86 y87 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 n0 n1 n2 n3 n4 n5 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next s16.next s17.next n0.next n1.next n2.next n3.next n4.next n5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= s14 s14.next) (= s15 s15.next) (= s16 s16.next) (= s17 s17.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next) (= n3 n3.next) (= n4 n4.next) (= n5 n5.next))))
(define-fun d199 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (s21 Bool) (s18.next Bool) (s19.next Bool) (s20.next Bool) (s21.next Bool)) Bool (or (d195 x0 x1 x2 x3 x4 x5 x6 x7 s18 s19 s20 s21 s18.next s19.next s20.next s21.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s18 s18.next) (= s19 s19.next) (= s20 s20.next) (= s21 s21.next))))
(define-fun d200 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y72 Bool) (y73 Bool) (y74 Bool) (y75 Bool) (y76 Bool) (y77 Bool) (y78 Bool) (y79 Bool) (y80 Bool) (y81 Bool) (y82 Bool) (y83 Bool) (y84 Bool) (y85 Bool) (y86 Bool) (y87 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (s17 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (s21 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (n4 Int) (n5 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (s17.next Bool) (s18.next Bool) (s19.next Bool) (s20.next Bool) (s21.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int) (n4.next Int) (n5.next Int)) Bool (and (d198 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 y80 y81 y82 y83 y84 y85 y86 y87 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 n0 n1 n2 n3 n4 n5 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next s16.next s17.next n0.next n1.next n2.next n3.next n4.next n5.next) (d199 x0 x1 x2 x3 x4 x5 x6 x7 s18 s19 s20 s21 s18.next s19.next s20.next s21.next)))
(define-fun d201 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (s17 Bool) (s18 Bool) (s21 Bool)) Bool (and (d172 s0 s1 s2 s3 s4 s5 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17) (d196 s18 s21)))
;
(define-fun d202 ((n1 Int) (K0 Int)) Bool (= K1 n1))
(define-fun d203 ((K0 Int)) Bool (not (= K1 (- 0 1))))
(define-fun d204 ((n0 Int) (K0 Int)) Bool (= K0 n0))
(define-fun d205 ((K0 Int)) Bool (= K2 (- K0 K1)))
(define-fun d206 ((n2 Int) (K0 Int)) Bool (= n2 K1))
(define-fun d207 ((n3 Int) (K0 Int)) Bool (= n3 (+ K1 K2)))
(define-fun d208 ((n4 Int) (n5 Int) (K0 Int)) Bool (= K3 (+ n4 n5)))
(define-fun d209 ((n5 Int)) Bool (= 0 n5))
(define-fun d210 ((K0 Int)) Bool (= K3 (- 0 1)))
(define-fun d211 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (s17 Bool) (s18 Bool) (s21 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (n4 Int) (n5 Int) (K0 Int)) Bool (and (d201 s0 s1 s2 s3 s4 s5 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s21) (d202 n1 K0) (d203 K0) (d204 n0 K0) (d205 K0) (d206 n2 K0) (d207 n3 K0) (d208 n4 n5 K0) (d209 n5) (d210 K0)))
(define-fun d212 ((s0 Bool) (s1 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s16 Bool) (s17 Bool) (s18 Bool) (s20 Bool) (s21 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (n4 Int) (n5 Int)) Bool (and (d197 s0 s1 s4 s5 s6 s7 s8 s9 s10 s11 s12 s16 s17 s18 s20 s21) (= 0 n0) (= 0 n1) (= 0 n2) (= 0 n3) (= 0 n4) (= 0 n5)))
;
(define-fun I () Bool (! (d212 s0 s1 s4 s5 s6 s7 s8 s9 s10 s11 s12 s16 s17 s18 s20 s21 n0 n1 n2 n3 n4 n5) :init true))
(define-fun T () Bool (! (d200 x0 x1 x2 x3 x4 x5 x6 x7 y72 y73 y74 y75 y76 y77 y78 y79 y80 y81 y82 y83 y84 y85 y86 y87 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 n0 n1 n2 n3 n4 n5 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next s16.next s17.next s18.next s19.next s20.next s21.next n0.next n1.next n2.next n3.next n4.next n5.next) :trans true))
(define-fun O () Bool (! (not (d211 s0 s1 s2 s3 s4 s5 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s21 n0 n1 n2 n3 n4 n5 K0)) :invar-property 0))
