(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! s0 :next s0.next))
(define-fun nxt9 () Bool (! s1 :next s1.next))
(define-fun nxt10 () Bool (! s2 :next s2.next))
(define-fun nxt11 () Bool (! s3 :next s3.next))
(define-fun nxt12 () Bool (! s4 :next s4.next))
(define-fun nxt13 () Bool (! s5 :next s5.next))
(define-fun nxt14 () Bool (! s6 :next s6.next))
(define-fun nxt15 () Bool (! s7 :next s7.next))
(define-fun nxt16 () Bool (! s8 :next s8.next))
(define-fun nxt17 () Bool (! s9 :next s9.next))
(define-fun nxt18 () Bool (! s10 :next s10.next))
(define-fun nxt19 () Bool (! s11 :next s11.next))
(define-fun nxt20 () Bool (! s12 :next s12.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s1 Bool)) Bool (not s1))
(define-fun d4 ((x0 Bool) (x5 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x5) (not s1) (not s1.next)))
(define-fun d5 ((x0 Bool) (x4 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x4) (not s1) (not s1.next)))
(define-fun d6 ((x0 Bool) (x3 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x3) (not s1) (not s1.next)))
(define-fun d7 ((x0 Bool) (x6 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) x6 (not s1) (not s1.next)))
(define-fun d8 ((x0 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) x7 (not s1) (not s1.next)))
(define-fun d9 ((x0 Bool) (x2 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x2) (not s1) (not s1.next)))
(define-fun d10 ((x0 Bool) (x1 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) x1 (not s1) (not s1.next)))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d4 x0 x5 s1 s1.next) (d5 x0 x4 s1 s1.next) (d6 x0 x3 s1 s1.next) (d7 x0 x6 s1 s1.next) (d8 x0 x7 s1 s1.next) (d9 x0 x2 s1 s1.next) (d10 x0 x1 s1 s1.next)))
(define-fun d12 ((s1 Bool)) Bool (not s1))
(define-fun d13 ((s0 Bool) (s1 Bool)) Bool (and (d0 s0) (d3 s1)))
(define-fun d14 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d1 x0 s0 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d15 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d11 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next))))
(define-fun d16 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (d14 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d15 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d17 ((s0 Bool) (s1 Bool)) Bool (and (d2 s0) (d12 s1)))
(define-fun d18 ((s2 Bool)) Bool (not s2))
(define-fun d19 ((x0 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x6) (not s2) (not s2.next)))
(define-fun d20 ((x0 Bool) (x5 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x5) (not s2) (not s2.next)))
(define-fun d21 ((x0 Bool) (x4 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x4) (not s2) (not s2.next)))
(define-fun d22 ((x0 Bool) (x3 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x3) (not s2) (not s2.next)))
(define-fun d23 ((x0 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x7 (not s2) (not s2.next)))
(define-fun d24 ((x0 Bool) (x2 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x2) (not s2) (not s2.next)))
(define-fun d25 ((x0 Bool) (x1 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not s2) (not s2.next)))
(define-fun d26 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d19 x0 x6 s2 s2.next) (d20 x0 x5 s2 s2.next) (d21 x0 x4 s2 s2.next) (d22 x0 x3 s2 s2.next) (d23 x0 x7 s2 s2.next) (d24 x0 x2 s2 s2.next) (d25 x0 x1 s2 s2.next)))
(define-fun d27 ((s2 Bool)) Bool (not s2))
(define-fun d28 ((s0 Bool) (s1 Bool) (s2 Bool)) Bool (and (d13 s0 s1) (d18 s2)))
(define-fun d29 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (or (d16 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next))))
(define-fun d30 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d26 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next))))
(define-fun d31 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (d29 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (d30 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d32 ((s0 Bool) (s1 Bool) (s2 Bool)) Bool (and (d17 s0 s1) (d27 s2)))
(define-fun d33 ((s3 Bool)) Bool (not s3))
(define-fun d34 ((x0 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not s3) (not s3.next)))
(define-fun d35 ((s3 Bool)) Bool (not s3))
(define-fun d36 ((s3 Bool)) Bool (not s3))
(define-fun d37 ((x0 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not s3) (not s3.next)))
(define-fun d38 ((s3 Bool)) Bool (not s3))
(define-fun d39 ((s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (not s4) (not s5) s6))
(define-fun d40 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) (not x7) (not s4) (not s5) s6 s4.next (not s5.next) (not s6.next)))
(define-fun d41 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) x6 x7 (not s4) (not s5) (not s6) (not s4.next) s5.next s6.next))
(define-fun d42 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 x7 s4 (not s5) (not s6) (not s4.next) (not s5.next) (not s6.next)))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 (not x7) (not s4) s5 s6 (not s4.next) s5.next (not s6.next)))
(define-fun d44 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d40 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next) (d41 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next) (d42 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next) (d43 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next)))
(define-fun d45 ((s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (not s4) s5 (not s6)))
(define-fun d46 ((s4 Bool) (s5 Bool)) Bool (and (not s4) s5))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) x7 (not s4) s5 s4.next s5.next))
(define-fun d48 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) (not x6) (not x7) s4 s5 (not s4.next) (not s5.next)))
(define-fun d49 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) (not s4) (not s5) s4.next (not s5.next)))
(define-fun d50 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (or (d47 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (d48 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (d49 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next)))
(define-fun d51 ((s4 Bool) (s5 Bool)) Bool (and s4 (not s5)))
(define-fun d52 ((s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s7) (d39 s4 s5 s6)))
(define-fun d53 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not s7) (not s7.next) (d44 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next)))
(define-fun d54 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s4.next Bool) (s5.next Bool) (s7.next Bool)) Bool (and s7 s7.next (d50 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next)))
(define-fun d55 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s4.next Bool) (s5.next Bool) (s7.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s7) s7.next (d45 s4 s5 s6) (d46 s4.next s5.next)))
(define-fun d56 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d53 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s4.next s5.next s6.next s7.next) (d54 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s7 s4.next s5.next s7.next) (d55 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s4.next s5.next s7.next)))
(define-fun d57 ((s4 Bool) (s5 Bool) (s7 Bool)) Bool (and s7 (d51 s4 s5)))
(define-fun d58 ((s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (d36 s3) (d52 s4 s5 s6 s7)))
(define-fun d59 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s3.next Bool)) Bool (or (d37 x0 s3 s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s3 s3.next))))
(define-fun d60 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d56 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s4.next s5.next s6.next s7.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next))))
(define-fun d61 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (d59 x0 x1 x2 x3 x4 x5 x6 x7 s3 s3.next) (d60 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s4.next s5.next s6.next s7.next)))
(define-fun d62 ((s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool)) Bool (and (d38 s3) (d57 s4 s5 s7)))
(define-fun d63 ((s3 Bool) (s8 Bool)) Bool (and (not s8) (d33 s3)))
(define-fun d64 ((x0 Bool) (s3 Bool) (s8 Bool) (s3.next Bool) (s8.next Bool)) Bool (and (not s8) (not s8.next) (d34 x0 s3 s3.next)))
(define-fun d65 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (and s8 s8.next (d61 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s7 s3.next s4.next s5.next s6.next s7.next)))
(define-fun d66 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s8 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s8) s8.next (d35 s3) (d58 s3.next s4.next s5.next s6.next s7.next)))
(define-fun d67 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (or (d64 x0 s3 s8 s3.next s8.next) (d65 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s7 s8 s3.next s4.next s5.next s6.next s7.next s8.next) (d66 x0 x1 x2 x3 x4 x5 x6 x7 s3 s8 s3.next s4.next s5.next s6.next s7.next s8.next)))
(define-fun d68 ((s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool)) Bool (and s8 (d62 s3 s4 s5 s7)))
(define-fun d69 ((s3 Bool)) Bool (not s3))
(define-fun d70 ((x0 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not s3) (not s3.next)))
(define-fun d71 ((s3 Bool)) Bool (not s3))
(define-fun d72 ((s3 Bool) (s8 Bool) (s9 Bool)) Bool (and (not s9) (d63 s3 s8)))
(define-fun d73 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not s9) (not s9.next) (d67 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s7 s8 s3.next s4.next s5.next s6.next s7.next s8.next)))
(define-fun d74 ((x0 Bool) (s3 Bool) (s9 Bool) (s3.next Bool) (s9.next Bool)) Bool (and s9 s9.next (d70 x0 s3 s3.next)))
(define-fun d75 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s3.next Bool) (s9.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s9) s9.next (d68 s3 s4 s5 s7 s8) (d69 s3.next)))
(define-fun d76 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d73 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s7 s8 s9 s3.next s4.next s5.next s6.next s7.next s8.next s9.next) (d74 x0 s3 s9 s3.next s9.next) (d75 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s7 s8 s9 s3.next s9.next)))
(define-fun d77 ((s3 Bool) (s9 Bool)) Bool (and s9 (d71 s3)))
(define-fun d78 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s8 Bool) (s9 Bool)) Bool (and (d28 s0 s1 s2) (d72 s3 s8 s9)))
(define-fun d79 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (or (d31 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next))))
(define-fun d80 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d76 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s7 s8 s9 s3.next s4.next s5.next s6.next s7.next s8.next s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next))))
(define-fun d81 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (d79 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (d80 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s7 s8 s9 s3.next s4.next s5.next s6.next s7.next s8.next s9.next)))
(define-fun d82 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s9 Bool)) Bool (and (d32 s0 s1 s2) (d77 s3 s9)))
(define-fun d83 ((s10 Bool)) Bool (not s10))
(define-fun d84 ((x0 Bool) (s10 Bool) (s10.next Bool)) Bool (and (not x0) (not s10) (not s10.next)))
(define-fun d85 ((s10 Bool)) Bool (not s10))
(define-fun d86 ((s11 Bool) (s12 Bool)) Bool (and (not s11) (not s12)))
(define-fun d87 ((x0 Bool) (x1 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not x0) (not x1) (not s12) s11.next (not s12.next)))
(define-fun d88 ((x0 Bool) (x2 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not x0) (not x2) (not s12) s11.next (not s12.next)))
(define-fun d89 ((x0 Bool) (x3 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not x0) (not x3) (not s12) s11.next (not s12.next)))
(define-fun d90 ((x0 Bool) (x4 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not x0) (not x4) (not s12) s11.next (not s12.next)))
(define-fun d91 ((x0 Bool) (x5 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not x0) x5 (not s12) s11.next (not s12.next)))
(define-fun d92 ((x0 Bool) (x6 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not x0) x6 (not s12) s11.next (not s12.next)))
(define-fun d93 ((x0 Bool) (x7 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not x0) x7 (not s12) s11.next (not s12.next)))
(define-fun d94 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not x0) x1 x2 x3 x4 (not x5) (not x6) (not x7) (not s11) (not s12) (not s11.next) s12.next))
(define-fun d95 ((x0 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not x0) s11 (not s12) s11.next (not s12.next)))
(define-fun d96 ((x0 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not x0) (not s11) s12 s11.next (not s12.next)))
(define-fun d97 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d87 x0 x1 s12 s11.next s12.next) (d88 x0 x2 s12 s11.next s12.next) (d89 x0 x3 s12 s11.next s12.next) (d90 x0 x4 s12 s11.next s12.next) (d91 x0 x5 s12 s11.next s12.next) (d92 x0 x6 s12 s11.next s12.next) (d93 x0 x7 s12 s11.next s12.next) (d94 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s11.next s12.next) (d95 x0 s11 s12 s11.next s12.next) (d96 x0 s11 s12 s11.next s12.next)))
(define-fun d98 ((s12 Bool)) Bool (not s12))
(define-fun d99 ((s10 Bool) (s11 Bool) (s12 Bool)) Bool (and (d83 s10) (d86 s11 s12)))
(define-fun d100 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s10 Bool) (s10.next Bool)) Bool (or (d84 x0 s10 s10.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s10 s10.next))))
(define-fun d101 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d97 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s11.next s12.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s11 s11.next) (= s12 s12.next))))
(define-fun d102 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (and (d100 x0 x1 x2 x3 x4 x5 x6 x7 s10 s10.next) (d101 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s11.next s12.next)))
(define-fun d103 ((s10 Bool) (s12 Bool)) Bool (and (d85 s10) (d98 s12)))
(define-fun d104 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool)) Bool (and (d78 s0 s1 s2 s3 s8 s9) (d99 s10 s11 s12)))
(define-fun d105 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d81 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next))))
(define-fun d106 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d102 x0 x1 x2 x3 x4 x5 x6 x7 s10 s11 s12 s10.next s11.next s12.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next))))
(define-fun d107 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (and (d105 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next) (d106 x0 x1 x2 x3 x4 x5 x6 x7 s10 s11 s12 s10.next s11.next s12.next)))
(define-fun d108 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s9 Bool) (s10 Bool) (s12 Bool)) Bool (and (d82 s0 s1 s2 s3 s9) (d103 s10 s12)))
;
(define-fun d109 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s9 Bool) (s10 Bool) (s12 Bool)) Bool (and (d108 s0 s1 s2 s3 s9 s10 s12)))
(define-fun d110 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool)) Bool (and (d104 s0 s1 s2 s3 s8 s9 s10 s11 s12)))
;
(define-fun I () Bool (! (d110 s0 s1 s2 s3 s8 s9 s10 s11 s12) :init true))
(define-fun T () Bool (! (d107 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next) :trans true))
(define-fun O () Bool (! (not (d109 s0 s1 s2 s3 s9 s10 s12)) :invar-property 0))
