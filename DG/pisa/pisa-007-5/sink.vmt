(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun y40 () Bool)
(declare-fun y40.next () Bool)
(declare-fun y41 () Bool)
(declare-fun y41.next () Bool)
(declare-fun y42 () Bool)
(declare-fun y42.next () Bool)
(declare-fun y43 () Bool)
(declare-fun y43.next () Bool)
(declare-fun y44 () Bool)
(declare-fun y44.next () Bool)
(declare-fun y45 () Bool)
(declare-fun y45.next () Bool)
(declare-fun y46 () Bool)
(declare-fun y46.next () Bool)
(declare-fun y47 () Bool)
(declare-fun y47.next () Bool)
(declare-fun y48 () Bool)
(declare-fun y48.next () Bool)
(declare-fun y49 () Bool)
(declare-fun y49.next () Bool)
(declare-fun y50 () Bool)
(declare-fun y50.next () Bool)
(declare-fun y51 () Bool)
(declare-fun y51.next () Bool)
(declare-fun y52 () Bool)
(declare-fun y52.next () Bool)
(declare-fun y53 () Bool)
(declare-fun y53.next () Bool)
(declare-fun y54 () Bool)
(declare-fun y54.next () Bool)
(declare-fun y55 () Bool)
(declare-fun y55.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
(declare-fun s13 () Bool)
(declare-fun s13.next () Bool)
(declare-fun s14 () Bool)
(declare-fun s14.next () Bool)
(declare-fun s15 () Bool)
(declare-fun s15.next () Bool)
(declare-fun s16 () Bool)
(declare-fun s16.next () Bool)
(declare-fun s17 () Bool)
(declare-fun s17.next () Bool)
(declare-fun s18 () Bool)
(declare-fun s18.next () Bool)
(declare-fun s19 () Bool)
(declare-fun s19.next () Bool)
(declare-fun s20 () Bool)
(declare-fun s20.next () Bool)
(declare-fun n4 () Int)
(declare-fun n4.next () Int)
(declare-fun n5 () Int)
(declare-fun n5.next () Int)
(declare-fun n6 () Int)
(declare-fun n6.next () Int)
(declare-fun n7 () Int)
(declare-fun n7.next () Int)
(declare-fun n8 () Int)
(declare-fun n8.next () Int)
(declare-fun n9 () Int)
(declare-fun n9.next () Int)
(declare-fun K0 () Int)
(declare-fun K0.next () Int)
(declare-fun K1 () Int)
(declare-fun K1.next () Int)
(declare-fun K2 () Int)
(declare-fun K2.next () Int)
(declare-fun K3 () Int)
(declare-fun K3.next () Int)
(declare-fun K4 () Int)
(declare-fun K4.next () Int)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! y40 :next y40.next))
(define-fun nxt9 () Bool (! y41 :next y41.next))
(define-fun nxt10 () Bool (! y42 :next y42.next))
(define-fun nxt11 () Bool (! y43 :next y43.next))
(define-fun nxt12 () Bool (! y44 :next y44.next))
(define-fun nxt13 () Bool (! y45 :next y45.next))
(define-fun nxt14 () Bool (! y46 :next y46.next))
(define-fun nxt15 () Bool (! y47 :next y47.next))
(define-fun nxt16 () Bool (! y48 :next y48.next))
(define-fun nxt17 () Bool (! y49 :next y49.next))
(define-fun nxt18 () Bool (! y50 :next y50.next))
(define-fun nxt19 () Bool (! y51 :next y51.next))
(define-fun nxt20 () Bool (! y52 :next y52.next))
(define-fun nxt21 () Bool (! y53 :next y53.next))
(define-fun nxt22 () Bool (! y54 :next y54.next))
(define-fun nxt23 () Bool (! y55 :next y55.next))
(define-fun nxt24 () Bool (! s0 :next s0.next))
(define-fun nxt25 () Bool (! s1 :next s1.next))
(define-fun nxt26 () Bool (! s2 :next s2.next))
(define-fun nxt27 () Bool (! s3 :next s3.next))
(define-fun nxt28 () Bool (! s4 :next s4.next))
(define-fun nxt29 () Bool (! s5 :next s5.next))
(define-fun nxt30 () Bool (! s6 :next s6.next))
(define-fun nxt31 () Bool (! s7 :next s7.next))
(define-fun nxt32 () Bool (! s8 :next s8.next))
(define-fun nxt33 () Bool (! s9 :next s9.next))
(define-fun nxt34 () Bool (! s10 :next s10.next))
(define-fun nxt35 () Bool (! s11 :next s11.next))
(define-fun nxt36 () Bool (! s12 :next s12.next))
(define-fun nxt37 () Bool (! s13 :next s13.next))
(define-fun nxt38 () Bool (! s14 :next s14.next))
(define-fun nxt39 () Bool (! s15 :next s15.next))
(define-fun nxt40 () Bool (! s16 :next s16.next))
(define-fun nxt41 () Bool (! s17 :next s17.next))
(define-fun nxt42 () Bool (! s18 :next s18.next))
(define-fun nxt43 () Bool (! s19 :next s19.next))
(define-fun nxt44 () Bool (! s20 :next s20.next))
(define-fun nxt45 () Bool (! n4 :next n4.next))
(define-fun nxt46 () Bool (! n5 :next n5.next))
(define-fun nxt47 () Bool (! n6 :next n6.next))
(define-fun nxt48 () Bool (! n7 :next n7.next))
(define-fun nxt49 () Bool (! n8 :next n8.next))
(define-fun nxt50 () Bool (! n9 :next n9.next))
(define-fun nxt51 () Bool (! K0 :next K0.next))
(define-fun nxt52 () Bool (! K1 :next K1.next))
(define-fun nxt53 () Bool (! K2 :next K2.next))
(define-fun nxt54 () Bool (! K3 :next K3.next))
(define-fun nxt55 () Bool (! K4 :next K4.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s1 Bool)) Bool (not s1))
(define-fun d4 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d5 ((s1 Bool)) Bool (not s1))
(define-fun d6 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n9 Int) (n9.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n9.next (+ n9 1))))
(define-fun d7 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n9 Int) (n9.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n9.next n9)))
(define-fun d8 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (n9 Int) (s1.next Bool) (n9.next Int)) Bool (and (d4 x0 s1 s1.next) (or (d6 x0 x1 x2 x3 x4 x5 x6 x7 n9 n9.next) (d7 x0 x1 x2 x3 x4 x5 x6 x7 n9 n9.next))))
(define-fun d9 ((s1 Bool)) Bool (not s1))
(define-fun d10 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d11 ((s1 Bool)) Bool (not s1))
(define-fun d12 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n8 Int) (n8.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n8.next (+ n8 1))))
(define-fun d13 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n8 Int) (n8.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n8.next n8)))
(define-fun d14 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (n8 Int) (s1.next Bool) (n8.next Int)) Bool (and (d10 x0 s1 s1.next) (or (d12 x0 x1 x2 x3 x4 x5 x6 x7 n8 n8.next) (d13 x0 x1 x2 x3 x4 x5 x6 x7 n8 n8.next))))
(define-fun d15 ((s1 Bool)) Bool (not s1))
(define-fun d16 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 (not s1) s1.next))
(define-fun d17 ((s1 Bool)) Bool s1)
(define-fun d18 ((s1 Bool) (s2 Bool)) Bool (and (not s2) (d9 s1)))
(define-fun d19 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (n8 Int) (s1.next Bool) (s2.next Bool) (n8.next Int)) Bool (and (not s2) (not s2.next) (d14 x0 x1 x2 x3 x4 x5 x6 x7 s1 n8 s1.next n8.next)))
(define-fun d20 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (n8 Int) (s1.next Bool) (s2.next Bool) (n8.next Int)) Bool (and s2 s2.next (d16 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (= n8 n8.next)))
(define-fun d21 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (n8 Int) (s1.next Bool) (s2.next Bool) (n8.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s2) s2.next (d11 s1) (d15 s1.next) (= n8 n8.next)))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (n8 Int) (s1.next Bool) (s2.next Bool) (n8.next Int)) Bool (or (d19 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 n8 s1.next s2.next n8.next) (d20 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 n8 s1.next s2.next n8.next) (d21 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 n8 s1.next s2.next n8.next)))
(define-fun d23 ((s1 Bool) (s2 Bool)) Bool (and s2 (d17 s1)))
(define-fun d24 ((s3 Bool)) Bool (not s3))
(define-fun d25 ((x0 Bool) (x7 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x7) (not s3) (not s3.next)))
(define-fun d26 ((x0 Bool) (x6 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x6) (not s3) (not s3.next)))
(define-fun d27 ((x0 Bool) (x5 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x5) (not s3) (not s3.next)))
(define-fun d28 ((x0 Bool) (x4 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x4) (not s3) (not s3.next)))
(define-fun d29 ((x0 Bool) (x3 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) x3 (not s3) (not s3.next)))
(define-fun d30 ((x0 Bool) (x2 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x2) (not s3) (not s3.next)))
(define-fun d31 ((x0 Bool) (x1 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) x1 (not s3) (not s3.next)))
(define-fun d32 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s3.next Bool)) Bool (or (d25 x0 x7 s3 s3.next) (d26 x0 x6 s3 s3.next) (d27 x0 x5 s3 s3.next) (d28 x0 x4 s3 s3.next) (d29 x0 x3 s3 s3.next) (d30 x0 x2 s3 s3.next) (d31 x0 x1 s3 s3.next)))
(define-fun d33 ((s3 Bool)) Bool (not s3))
(define-fun d34 ((s3 Bool)) Bool (not s3))
(define-fun d35 ((x0 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not s3) s3.next))
(define-fun d36 ((s3 Bool)) Bool s3)
(define-fun d37 ((s3 Bool) (s4 Bool)) Bool (and (not s4) (d24 s3)))
(define-fun d38 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not s4) (not s4.next) (d32 x0 x1 x2 x3 x4 x5 x6 x7 s3 s3.next)))
(define-fun d39 ((x0 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (and s4 s4.next (d35 x0 s3 s3.next)))
(define-fun d40 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s4) s4.next (d33 s3) (d34 s3.next)))
(define-fun d41 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (or (d38 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s3.next s4.next) (d39 x0 s3 s4 s3.next s4.next) (d40 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s3.next s4.next)))
(define-fun d42 ((s3 Bool) (s4 Bool)) Bool (and s4 (d36 s3)))
(define-fun d43 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and (d18 s1 s2) (d37 s3 s4)))
(define-fun d44 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (n8 Int) (s1.next Bool) (s2.next Bool) (n8.next Int)) Bool (or (d22 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 n8 s1.next s2.next n8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= n8 n8.next))))
(define-fun d45 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (or (d41 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s3.next s4.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s3 s3.next) (= s4 s4.next))))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n8 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n8.next Int)) Bool (and (d44 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 n8 s1.next s2.next n8.next) (d45 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s3.next s4.next)))
(define-fun d47 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and (d23 s1 s2) (d42 s3 s4)))
(define-fun d48 ((s1 Bool) (s5 Bool)) Bool (and (not s5) (d3 s1)))
(define-fun d49 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s5 Bool) (n8 Int) (n9 Int) (s1.next Bool) (s5.next Bool) (n8.next Int) (n9.next Int)) Bool (and (not s5) (not s5.next) (d8 x0 x1 x2 x3 x4 x5 x6 x7 s1 n9 s1.next n9.next) (= n8 n8.next)))
(define-fun d50 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n8 Int) (n9 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n8.next Int) (n9.next Int)) Bool (and s5 s5.next (d46 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 n8 s1.next s2.next s3.next s4.next n8.next) (= n9 n9.next)))
(define-fun d51 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s5 Bool) (n8 Int) (n9 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n8.next Int) (n9.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s5) s5.next (d5 s1) (d43 s1.next s2.next s3.next s4.next) (= n8 n8.next) (= n9 n9.next)))
(define-fun d52 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n8 Int) (n9 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n8.next Int) (n9.next Int)) Bool (or (d49 x0 x1 x2 x3 x4 x5 x6 x7 s1 s5 n8 n9 s1.next s5.next n8.next n9.next) (d50 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s5 n8 n9 s1.next s2.next s3.next s4.next s5.next n8.next n9.next) (d51 x0 x1 x2 x3 x4 x5 x6 x7 s1 s5 n8 n9 s1.next s2.next s3.next s4.next s5.next n8.next n9.next)))
(define-fun d53 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and s5 (d47 s1 s2 s3 s4)))
(define-fun d54 ((s0 Bool) (s1 Bool) (s5 Bool)) Bool (and (d0 s0) (d48 s1 s5)))
(define-fun d55 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d1 x0 s0 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d56 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n8 Int) (n9 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n8.next Int) (n9.next Int)) Bool (or (d52 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s5 n8 n9 s1.next s2.next s3.next s4.next s5.next n8.next n9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= n8 n8.next) (= n9 n9.next))))
(define-fun d57 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n8.next Int) (n9.next Int)) Bool (and (d55 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d56 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s5 n8 n9 s1.next s2.next s3.next s4.next s5.next n8.next n9.next)))
(define-fun d58 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and (d2 s0) (d53 s1 s2 s3 s4 s5)))
(define-fun d59 ((s6 Bool)) Bool (not s6))
(define-fun d60 ((x0 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x7) (not s6) (not s6.next)))
(define-fun d61 ((x0 Bool) (x6 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x6) (not s6) (not s6.next)))
(define-fun d62 ((x0 Bool) (x5 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x5) (not s6) (not s6.next)))
(define-fun d63 ((x0 Bool) (x4 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x4) (not s6) (not s6.next)))
(define-fun d64 ((x0 Bool) (x3 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) x3 (not s6) (not s6.next)))
(define-fun d65 ((x0 Bool) (x2 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x2) (not s6) (not s6.next)))
(define-fun d66 ((x0 Bool) (x1 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) x1 (not s6) (not s6.next)))
(define-fun d67 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (or (d60 x0 x7 s6 s6.next) (d61 x0 x6 s6 s6.next) (d62 x0 x5 s6 s6.next) (d63 x0 x4 s6 s6.next) (d64 x0 x3 s6 s6.next) (d65 x0 x2 s6 s6.next) (d66 x0 x1 s6 s6.next)))
(define-fun d68 ((s6 Bool)) Bool (not s6))
(define-fun d69 ((s0 Bool) (s1 Bool) (s5 Bool) (s6 Bool)) Bool (and (d54 s0 s1 s5) (d59 s6)))
(define-fun d70 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n8.next Int) (n9.next Int)) Bool (or (d57 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next n8.next n9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= n8 n8.next) (= n9 n9.next))))
(define-fun d71 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (or (d67 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next))))
(define-fun d72 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n8.next Int) (n9.next Int)) Bool (and (d70 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next n8.next n9.next) (d71 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next)))
(define-fun d73 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (d58 s0 s1 s2 s3 s4 s5) (d68 s6)))
(define-fun d74 ((s7 Bool)) Bool (not s7))
(define-fun d75 ((x0 Bool) (s7 Bool) (s7.next Bool)) Bool (and (not x0) (not s7) (not s7.next)))
(define-fun d76 ((s7 Bool)) Bool (not s7))
(define-fun d77 ((s0 Bool) (s1 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (d69 s0 s1 s5 s6) (d74 s7)))
(define-fun d78 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n8.next Int) (n9.next Int)) Bool (or (d72 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n8.next n9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= n8 n8.next) (= n9 n9.next))))
(define-fun d79 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s7.next Bool)) Bool (or (d75 x0 s7 s7.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s7 s7.next))))
(define-fun d80 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n8.next Int) (n9.next Int)) Bool (and (d78 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n8.next n9.next) (d79 x0 x1 x2 x3 x4 x5 x6 x7 s7 s7.next)))
(define-fun d81 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (d73 s0 s1 s2 s3 s4 s5 s6) (d76 s7)))
(define-fun d82 ((s8 Bool)) Bool (not s8))
(define-fun d83 ((x0 Bool) (s8 Bool) (s8.next Bool)) Bool (and (not x0) (not s8) (not s8.next)))
(define-fun d84 ((s8 Bool)) Bool (not s8))
(define-fun d85 ((s0 Bool) (s1 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (d77 s0 s1 s5 s6 s7) (d82 s8)))
(define-fun d86 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n8.next Int) (n9.next Int)) Bool (or (d80 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n8.next n9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= n8 n8.next) (= n9 n9.next))))
(define-fun d87 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s8.next Bool)) Bool (or (d83 x0 s8 s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8 s8.next))))
(define-fun d88 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n8.next Int) (n9.next Int)) Bool (and (d86 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n8.next n9.next) (d87 x0 x1 x2 x3 x4 x5 x6 x7 s8 s8.next)))
(define-fun d89 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (d81 s0 s1 s2 s3 s4 s5 s6 s7) (d84 s8)))
(define-fun d90 ((s9 Bool)) Bool (not s9))
(define-fun d91 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not s9) (not s9.next)))
(define-fun d92 ((s9 Bool)) Bool (not s9))
(define-fun d93 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n5 Int) (n5.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n5.next (+ n5 1))))
(define-fun d94 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n5 Int) (n5.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n5.next n5)))
(define-fun d95 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (n5 Int) (s9.next Bool) (n5.next Int)) Bool (and (d91 x0 s9 s9.next) (or (d93 x0 x1 x2 x3 x4 x5 x6 x7 n5 n5.next) (d94 x0 x1 x2 x3 x4 x5 x6 x7 n5 n5.next))))
(define-fun d96 ((s9 Bool)) Bool (not s9))
(define-fun d97 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not s9) (not s9.next)))
(define-fun d98 ((s9 Bool)) Bool (not s9))
(define-fun d99 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n4 Int) (n4.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n4.next (+ n4 1))))
(define-fun d100 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n4 Int) (n4.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n4.next n4)))
(define-fun d101 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (n4 Int) (s9.next Bool) (n4.next Int)) Bool (and (d97 x0 s9 s9.next) (or (d99 x0 x1 x2 x3 x4 x5 x6 x7 n4 n4.next) (d100 x0 x1 x2 x3 x4 x5 x6 x7 n4 n4.next))))
(define-fun d102 ((s9 Bool)) Bool (not s9))
(define-fun d103 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 (not x7) (not s9) s9.next))
(define-fun d104 ((s9 Bool)) Bool s9)
(define-fun d105 ((s9 Bool) (s10 Bool)) Bool (and (not s10) (d96 s9)))
(define-fun d106 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (n4 Int) (s9.next Bool) (s10.next Bool) (n4.next Int)) Bool (and (not s10) (not s10.next) (d101 x0 x1 x2 x3 x4 x5 x6 x7 s9 n4 s9.next n4.next)))
(define-fun d107 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (n4 Int) (s9.next Bool) (s10.next Bool) (n4.next Int)) Bool (and s10 s10.next (d103 x0 x1 x2 x3 x4 x5 x6 x7 s9 s9.next) (= n4 n4.next)))
(define-fun d108 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (n4 Int) (s9.next Bool) (s10.next Bool) (n4.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s10) s10.next (d98 s9) (d102 s9.next) (= n4 n4.next)))
(define-fun d109 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (n4 Int) (s9.next Bool) (s10.next Bool) (n4.next Int)) Bool (or (d106 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 n4 s9.next s10.next n4.next) (d107 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 n4 s9.next s10.next n4.next) (d108 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 n4 s9.next s10.next n4.next)))
(define-fun d110 ((s9 Bool) (s10 Bool)) Bool (and s10 (d104 s9)))
(define-fun d111 ((s11 Bool)) Bool (not s11))
(define-fun d112 ((x0 Bool) (x6 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not x6) (not s11) (not s11.next)))
(define-fun d113 ((x0 Bool) (x5 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not x5) (not s11) (not s11.next)))
(define-fun d114 ((x0 Bool) (x4 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not x4) (not s11) (not s11.next)))
(define-fun d115 ((x0 Bool) (x3 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) x3 (not s11) (not s11.next)))
(define-fun d116 ((x0 Bool) (x7 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) x7 (not s11) (not s11.next)))
(define-fun d117 ((x0 Bool) (x2 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not x2) (not s11) (not s11.next)))
(define-fun d118 ((x0 Bool) (x1 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) x1 (not s11) (not s11.next)))
(define-fun d119 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s11.next Bool)) Bool (or (d112 x0 x6 s11 s11.next) (d113 x0 x5 s11 s11.next) (d114 x0 x4 s11 s11.next) (d115 x0 x3 s11 s11.next) (d116 x0 x7 s11 s11.next) (d117 x0 x2 s11 s11.next) (d118 x0 x1 s11 s11.next)))
(define-fun d120 ((s11 Bool)) Bool (not s11))
(define-fun d121 ((s11 Bool)) Bool (not s11))
(define-fun d122 ((x0 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not s11) s11.next))
(define-fun d123 ((s11 Bool)) Bool s11)
(define-fun d124 ((s11 Bool) (s12 Bool)) Bool (and (not s12) (d111 s11)))
(define-fun d125 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not s12) (not s12.next) (d119 x0 x1 x2 x3 x4 x5 x6 x7 s11 s11.next)))
(define-fun d126 ((x0 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and s12 s12.next (d122 x0 s11 s11.next)))
(define-fun d127 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s12) s12.next (d120 s11) (d121 s11.next)))
(define-fun d128 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d125 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s11.next s12.next) (d126 x0 s11 s12 s11.next s12.next) (d127 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s11.next s12.next)))
(define-fun d129 ((s11 Bool) (s12 Bool)) Bool (and s12 (d123 s11)))
(define-fun d130 ((s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool)) Bool (and (d105 s9 s10) (d124 s11 s12)))
(define-fun d131 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (n4 Int) (s9.next Bool) (s10.next Bool) (n4.next Int)) Bool (or (d109 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 n4 s9.next s10.next n4.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s9 s9.next) (= s10 s10.next) (= n4 n4.next))))
(define-fun d132 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d128 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s11.next s12.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s11 s11.next) (= s12 s12.next))))
(define-fun d133 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (n4 Int) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (n4.next Int)) Bool (and (d131 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 n4 s9.next s10.next n4.next) (d132 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s11.next s12.next)))
(define-fun d134 ((s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool)) Bool (and (d110 s9 s10) (d129 s11 s12)))
(define-fun d135 ((s9 Bool) (s13 Bool)) Bool (and (not s13) (d90 s9)))
(define-fun d136 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s13 Bool) (n4 Int) (n5 Int) (s9.next Bool) (s13.next Bool) (n4.next Int) (n5.next Int)) Bool (and (not s13) (not s13.next) (d95 x0 x1 x2 x3 x4 x5 x6 x7 s9 n5 s9.next n5.next) (= n4 n4.next)))
(define-fun d137 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (n4 Int) (n5 Int) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n4.next Int) (n5.next Int)) Bool (and s13 s13.next (d133 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s11 s12 n4 s9.next s10.next s11.next s12.next n4.next) (= n5 n5.next)))
(define-fun d138 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s13 Bool) (n4 Int) (n5 Int) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n4.next Int) (n5.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s13) s13.next (d92 s9) (d130 s9.next s10.next s11.next s12.next) (= n4 n4.next) (= n5 n5.next)))
(define-fun d139 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (n4 Int) (n5 Int) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n4.next Int) (n5.next Int)) Bool (or (d136 x0 x1 x2 x3 x4 x5 x6 x7 s9 s13 n4 n5 s9.next s13.next n4.next n5.next) (d137 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s11 s12 s13 n4 n5 s9.next s10.next s11.next s12.next s13.next n4.next n5.next) (d138 x0 x1 x2 x3 x4 x5 x6 x7 s9 s13 n4 n5 s9.next s10.next s11.next s12.next s13.next n4.next n5.next)))
(define-fun d140 ((s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool)) Bool (and s13 (d134 s9 s10 s11 s12)))
(define-fun d141 ((s0 Bool) (s1 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s13 Bool)) Bool (and (d85 s0 s1 s5 s6 s7 s8) (d135 s9 s13)))
(define-fun d142 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n8.next Int) (n9.next Int)) Bool (or (d88 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n8.next n9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= n8 n8.next) (= n9 n9.next))))
(define-fun d143 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (n4 Int) (n5 Int) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n4.next Int) (n5.next Int)) Bool (or (d139 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s11 s12 s13 n4 n5 s9.next s10.next s11.next s12.next s13.next n4.next n5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= n4 n4.next) (= n5 n5.next))))
(define-fun d144 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (n4 Int) (n5 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n4.next Int) (n5.next Int) (n8.next Int) (n9.next Int)) Bool (and (d142 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n8.next n9.next) (d143 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s11 s12 s13 n4 n5 s9.next s10.next s11.next s12.next s13.next n4.next n5.next)))
(define-fun d145 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool)) Bool (and (d89 s0 s1 s2 s3 s4 s5 s6 s7 s8) (d140 s9 s10 s11 s12 s13)))
(define-fun d146 ((s0 Bool) (s1 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s13 Bool) (s14 Bool)) Bool (and (not s14) (d141 s0 s1 s5 s6 s7 s8 s9 s13)))
(define-fun d147 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (n4 Int) (n5 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n4.next Int) (n5.next Int) (n8.next Int) (n9.next Int)) Bool (or (d144 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 n4 n5 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next n4.next n5.next n8.next n9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= n4 n4.next) (= n5 n5.next) (= n8 n8.next) (= n9 n9.next))))
(define-fun d148 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n7 Int) (n7.next Int)) Bool (or (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n7.next (+ n7 1))) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n7.next n7))))
(define-fun d149 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (n4 Int) (n5 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (n4.next Int) (n5.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (and (not s14) (not s14.next) (d147 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 n4 n5 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next n4.next n5.next n8.next n9.next) (d148 x0 x1 x2 x3 x4 x5 x6 x7 n7 n7.next)))
(define-fun d150 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (n4 Int) (n5 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (n4.next Int) (n5.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (and (not s14) s14.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= n4 n4.next) (= n5 n5.next) (= n8 n8.next) (= n9 n9.next) (= n7.next n7)))
(define-fun d151 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (n4 Int) (n5 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (n4.next Int) (n5.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (and s14 s14.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d144 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 n4 n5 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next n4.next n5.next n8.next n9.next) (= n7.next n7)))
(define-fun d152 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (n4 Int) (n5 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (n4.next Int) (n5.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (or (d149 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 n4 n5 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next n4.next n5.next n7.next n8.next n9.next) (d150 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 n4 n5 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next n4.next n5.next n7.next n8.next n9.next) (d151 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 n4 n5 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next n4.next n5.next n7.next n8.next n9.next)))
(define-fun d153 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool)) Bool (and s14 (d145 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13)))
(define-fun d154 ((y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool)) Bool (and y48 (not y49) (not y50) (not y51) (not y52) (not y53) (not y54) (not y55)))
(define-fun d155 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (n4 Int) (n5 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (n4.next Int) (n5.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (or (d152 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 n4 n5 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next n4.next n5.next n7.next n8.next n9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= s14 s14.next) (= n4 n4.next) (= n5 n5.next) (= n7 n7.next) (= n8 n8.next) (= n9 n9.next))))
(define-fun d156 ((s0 Bool) (s1 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s13 Bool) (s14 Bool) (s15 Bool)) Bool (and (not s15) (d146 s0 s1 s5 s6 s7 s8 s9 s13 s14)))
(define-fun d157 ((y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (n6 Int) (n6.next Int)) Bool (or (and (not (d154 y48 y49 y50 y51 y52 y53 y54 y55)) (= n6.next (+ 1 n6))) (and (d154 y48 y49 y50 y51 y52 y53 y54 y55) (= n6.next n6))))
(define-fun d158 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (n4 Int) (n5 Int) (n6 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n4.next Int) (n5.next Int) (n6.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (and (not s15) (not s15.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d155 y48 y49 y50 y51 y52 y53 y54 y55 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 n4 n5 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next n4.next n5.next n7.next n8.next n9.next) (d157 y48 y49 y50 y51 y52 y53 y54 y55 n6 n6.next)))
(define-fun d159 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (n4 Int) (n5 Int) (n6 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n4.next Int) (n5.next Int) (n6.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (and (not s15) s15.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= s14 s14.next) (= n4 n4.next) (= n5 n5.next) (= n7 n7.next) (= n8 n8.next) (= n9 n9.next) (= n6.next n6)))
(define-fun d160 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (n4 Int) (n5 Int) (n6 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n4.next Int) (n5.next Int) (n6.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (and s15 s15.next (d152 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 n4 n5 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next n4.next n5.next n7.next n8.next n9.next) (= n6.next n6)))
(define-fun d161 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (n4 Int) (n5 Int) (n6 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n4.next Int) (n5.next Int) (n6.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (or (d158 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 n4 n5 n6 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next n4.next n5.next n6.next n7.next n8.next n9.next) (d159 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 n4 n5 n6 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next n4.next n5.next n6.next n7.next n8.next n9.next) (d160 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 n4 n5 n6 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next n4.next n5.next n6.next n7.next n8.next n9.next)))
(define-fun d162 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool)) Bool (and s15 (d153 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14)))
(define-fun d163 ((s16 Bool)) Bool (not s16))
(define-fun d164 ((x0 Bool) (s16 Bool) (s16.next Bool)) Bool (and (not x0) (not s16) (not s16.next)))
(define-fun d165 ((s16 Bool)) Bool (not s16))
(define-fun d166 ((s0 Bool) (s1 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool)) Bool (and (d156 s0 s1 s5 s6 s7 s8 s9 s13 s14 s15) (d163 s16)))
(define-fun d167 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (n4 Int) (n5 Int) (n6 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (n4.next Int) (n5.next Int) (n6.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (or (d161 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 n4 n5 n6 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next n4.next n5.next n6.next n7.next n8.next n9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= s14 s14.next) (= s15 s15.next) (= n4 n4.next) (= n5 n5.next) (= n6 n6.next) (= n7 n7.next) (= n8 n8.next) (= n9 n9.next))))
(define-fun d168 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s16 Bool) (s16.next Bool)) Bool (or (d164 x0 s16 s16.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s16 s16.next))))
(define-fun d169 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (n4 Int) (n5 Int) (n6 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (n4.next Int) (n5.next Int) (n6.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (and (d167 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 n4 n5 n6 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next n4.next n5.next n6.next n7.next n8.next n9.next) (d168 x0 x1 x2 x3 x4 x5 x6 x7 s16 s16.next)))
(define-fun d170 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool)) Bool (and (d162 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15) (d165 s16)))
(define-fun d171 ((s17 Bool)) Bool (not s17))
(define-fun d172 ((x0 Bool) (s17 Bool) (s17.next Bool)) Bool (and (not x0) (not s17) (not s17.next)))
(define-fun d173 ((s17 Bool)) Bool (not s17))
(define-fun d174 ((s17 Bool) (s18 Bool)) Bool (and (not s17) s18))
(define-fun d175 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s18 Bool) (s17.next Bool) (s18.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 (not x7) s17 s18 (not s17.next) (not s18.next)))
(define-fun d176 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s18 Bool) (s17.next Bool) (s18.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 (not s17) (not s18) s17.next (not s18.next)))
(define-fun d177 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s18 Bool) (s17.next Bool) (s18.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 (not x7) (not s17) s18 s17.next s18.next))
(define-fun d178 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s18 Bool) (s17.next Bool) (s18.next Bool)) Bool (or (d175 x0 x1 x2 x3 x4 x5 x6 x7 s17 s18 s17.next s18.next) (d176 x0 x1 x2 x3 x4 x5 x6 x7 s17 s18 s17.next s18.next) (d177 x0 x1 x2 x3 x4 x5 x6 x7 s17 s18 s17.next s18.next)))
(define-fun d179 ((s17 Bool) (s18 Bool)) Bool (and s17 (not s18)))
(define-fun d180 ((s17 Bool) (s19 Bool)) Bool (and (not s19) (d171 s17)))
(define-fun d181 ((x0 Bool) (s17 Bool) (s19 Bool) (s17.next Bool) (s19.next Bool)) Bool (and (not s19) (not s19.next) (d172 x0 s17 s17.next)))
(define-fun d182 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s18 Bool) (s19 Bool) (s17.next Bool) (s18.next Bool) (s19.next Bool)) Bool (and s19 s19.next (d178 x0 x1 x2 x3 x4 x5 x6 x7 s17 s18 s17.next s18.next)))
(define-fun d183 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s19 Bool) (s17.next Bool) (s18.next Bool) (s19.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s19) s19.next (d173 s17) (d174 s17.next s18.next)))
(define-fun d184 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s18 Bool) (s19 Bool) (s17.next Bool) (s18.next Bool) (s19.next Bool)) Bool (or (d181 x0 s17 s19 s17.next s19.next) (d182 x0 x1 x2 x3 x4 x5 x6 x7 s17 s18 s19 s17.next s18.next s19.next) (d183 x0 x1 x2 x3 x4 x5 x6 x7 s17 s19 s17.next s18.next s19.next)))
(define-fun d185 ((s17 Bool) (s18 Bool) (s19 Bool)) Bool (and s19 (d179 s17 s18)))
(define-fun d186 ((s17 Bool)) Bool (not s17))
(define-fun d187 ((x0 Bool) (s17 Bool) (s17.next Bool)) Bool (and (not x0) (not s17) (not s17.next)))
(define-fun d188 ((s17 Bool)) Bool (not s17))
(define-fun d189 ((s17 Bool) (s19 Bool) (s20 Bool)) Bool (and (not s20) (d180 s17 s19)))
(define-fun d190 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (s17.next Bool) (s18.next Bool) (s19.next Bool) (s20.next Bool)) Bool (and (not s20) (not s20.next) (d184 x0 x1 x2 x3 x4 x5 x6 x7 s17 s18 s19 s17.next s18.next s19.next)))
(define-fun d191 ((x0 Bool) (s17 Bool) (s20 Bool) (s17.next Bool) (s20.next Bool)) Bool (and s20 s20.next (d187 x0 s17 s17.next)))
(define-fun d192 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (s17.next Bool) (s20.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s20) s20.next (d185 s17 s18 s19) (d186 s17.next)))
(define-fun d193 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (s17.next Bool) (s18.next Bool) (s19.next Bool) (s20.next Bool)) Bool (or (d190 x0 x1 x2 x3 x4 x5 x6 x7 s17 s18 s19 s20 s17.next s18.next s19.next s20.next) (d191 x0 s17 s20 s17.next s20.next) (d192 x0 x1 x2 x3 x4 x5 x6 x7 s17 s18 s19 s20 s17.next s20.next)))
(define-fun d194 ((s17 Bool) (s20 Bool)) Bool (and s20 (d188 s17)))
(define-fun d195 ((s0 Bool) (s1 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (s17 Bool) (s19 Bool) (s20 Bool)) Bool (and (d166 s0 s1 s5 s6 s7 s8 s9 s13 s14 s15 s16) (d189 s17 s19 s20)))
(define-fun d196 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (n4 Int) (n5 Int) (n6 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (n4.next Int) (n5.next Int) (n6.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (or (d169 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 n4 n5 n6 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next s16.next n4.next n5.next n6.next n7.next n8.next n9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= s14 s14.next) (= s15 s15.next) (= s16 s16.next) (= n4 n4.next) (= n5 n5.next) (= n6 n6.next) (= n7 n7.next) (= n8 n8.next) (= n9 n9.next))))
(define-fun d197 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s17 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (s17.next Bool) (s18.next Bool) (s19.next Bool) (s20.next Bool)) Bool (or (d193 x0 x1 x2 x3 x4 x5 x6 x7 s17 s18 s19 s20 s17.next s18.next s19.next s20.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s17 s17.next) (= s18 s18.next) (= s19 s19.next) (= s20 s20.next))))
(define-fun d198 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (s17 Bool) (s18 Bool) (s19 Bool) (s20 Bool) (n4 Int) (n5 Int) (n6 Int) (n7 Int) (n8 Int) (n9 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (s15.next Bool) (s16.next Bool) (s17.next Bool) (s18.next Bool) (s19.next Bool) (s20.next Bool) (n4.next Int) (n5.next Int) (n6.next Int) (n7.next Int) (n8.next Int) (n9.next Int)) Bool (and (d196 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 n4 n5 n6 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next s16.next n4.next n5.next n6.next n7.next n8.next n9.next) (d197 x0 x1 x2 x3 x4 x5 x6 x7 s17 s18 s19 s20 s17.next s18.next s19.next s20.next)))
(define-fun d199 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (s17 Bool) (s20 Bool)) Bool (and (d170 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16) (d194 s17 s20)))
;
(define-fun d200 ((n8 Int) (n9 Int) (K0 Int)) Bool (= K1 (+ n8 n9)))
(define-fun d201 ((n9 Int)) Bool (= 0 n9))
(define-fun d202 ((K0 Int)) Bool (= K1 (- 0 1)))
(define-fun d203 ((n4 Int) (n5 Int) (K0 Int)) Bool (= K4 (+ n4 n5)))
(define-fun d204 ((n5 Int)) Bool (= 0 n5))
(define-fun d205 ((K0 Int)) Bool (not (= K4 (- 0 1))))
(define-fun d206 ((n6 Int)) Bool (= n6 0))
(define-fun d207 ((n7 Int) (K0 Int)) Bool (= n7 (+ 0 K4)))
(define-fun d208 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (s17 Bool) (s20 Bool) (n4 Int) (n5 Int) (n6 Int) (n7 Int) (n8 Int) (n9 Int) (K0 Int)) Bool (and (d199 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s20) (d200 n8 n9 K0) (d201 n9) (d202 K0) (d203 n4 n5 K0) (d204 n5) (d205 K0) (d206 n6) (d207 n7 K0)))
(define-fun d209 ((s0 Bool) (s1 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s13 Bool) (s14 Bool) (s15 Bool) (s16 Bool) (s17 Bool) (s19 Bool) (s20 Bool) (n4 Int) (n5 Int) (n6 Int) (n7 Int) (n8 Int) (n9 Int)) Bool (and (d195 s0 s1 s5 s6 s7 s8 s9 s13 s14 s15 s16 s17 s19 s20) (= 0 n4) (= 0 n5) (= 0 n6) (= 0 n7) (= 0 n8) (= 0 n9)))
;
(define-fun I () Bool (! (d209 s0 s1 s5 s6 s7 s8 s9 s13 s14 s15 s16 s17 s19 s20 n4 n5 n6 n7 n8 n9) :init true))
(define-fun T () Bool (! (d198 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 n4 n5 n6 n7 n8 n9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next s15.next s16.next s17.next s18.next s19.next s20.next n4.next n5.next n6.next n7.next n8.next n9.next) :trans true))
(define-fun O () Bool (! (not (d208 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s20 n4 n5 n6 n7 n8 n9 K0)) :invar-property 0))
