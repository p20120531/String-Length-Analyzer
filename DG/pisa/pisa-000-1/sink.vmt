(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun y40 () Bool)
(declare-fun y40.next () Bool)
(declare-fun y41 () Bool)
(declare-fun y41.next () Bool)
(declare-fun y42 () Bool)
(declare-fun y42.next () Bool)
(declare-fun y43 () Bool)
(declare-fun y43.next () Bool)
(declare-fun y44 () Bool)
(declare-fun y44.next () Bool)
(declare-fun y45 () Bool)
(declare-fun y45.next () Bool)
(declare-fun y46 () Bool)
(declare-fun y46.next () Bool)
(declare-fun y47 () Bool)
(declare-fun y47.next () Bool)
(declare-fun y48 () Bool)
(declare-fun y48.next () Bool)
(declare-fun y49 () Bool)
(declare-fun y49.next () Bool)
(declare-fun y50 () Bool)
(declare-fun y50.next () Bool)
(declare-fun y51 () Bool)
(declare-fun y51.next () Bool)
(declare-fun y52 () Bool)
(declare-fun y52.next () Bool)
(declare-fun y53 () Bool)
(declare-fun y53.next () Bool)
(declare-fun y54 () Bool)
(declare-fun y54.next () Bool)
(declare-fun y55 () Bool)
(declare-fun y55.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
(declare-fun s13 () Bool)
(declare-fun s13.next () Bool)
(declare-fun s14 () Bool)
(declare-fun s14.next () Bool)
(declare-fun n0 () Int)
(declare-fun n0.next () Int)
(declare-fun n1 () Int)
(declare-fun n1.next () Int)
(declare-fun n2 () Int)
(declare-fun n2.next () Int)
(declare-fun n3 () Int)
(declare-fun n3.next () Int)
(declare-fun K0 () Int)
(declare-fun K0.next () Int)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! y40 :next y40.next))
(define-fun nxt9 () Bool (! y41 :next y41.next))
(define-fun nxt10 () Bool (! y42 :next y42.next))
(define-fun nxt11 () Bool (! y43 :next y43.next))
(define-fun nxt12 () Bool (! y44 :next y44.next))
(define-fun nxt13 () Bool (! y45 :next y45.next))
(define-fun nxt14 () Bool (! y46 :next y46.next))
(define-fun nxt15 () Bool (! y47 :next y47.next))
(define-fun nxt16 () Bool (! y48 :next y48.next))
(define-fun nxt17 () Bool (! y49 :next y49.next))
(define-fun nxt18 () Bool (! y50 :next y50.next))
(define-fun nxt19 () Bool (! y51 :next y51.next))
(define-fun nxt20 () Bool (! y52 :next y52.next))
(define-fun nxt21 () Bool (! y53 :next y53.next))
(define-fun nxt22 () Bool (! y54 :next y54.next))
(define-fun nxt23 () Bool (! y55 :next y55.next))
(define-fun nxt24 () Bool (! s0 :next s0.next))
(define-fun nxt25 () Bool (! s1 :next s1.next))
(define-fun nxt26 () Bool (! s2 :next s2.next))
(define-fun nxt27 () Bool (! s3 :next s3.next))
(define-fun nxt28 () Bool (! s4 :next s4.next))
(define-fun nxt29 () Bool (! s5 :next s5.next))
(define-fun nxt30 () Bool (! s6 :next s6.next))
(define-fun nxt31 () Bool (! s7 :next s7.next))
(define-fun nxt32 () Bool (! s8 :next s8.next))
(define-fun nxt33 () Bool (! s9 :next s9.next))
(define-fun nxt34 () Bool (! s10 :next s10.next))
(define-fun nxt35 () Bool (! s11 :next s11.next))
(define-fun nxt36 () Bool (! s12 :next s12.next))
(define-fun nxt37 () Bool (! s13 :next s13.next))
(define-fun nxt38 () Bool (! s14 :next s14.next))
(define-fun nxt39 () Bool (! n0 :next n0.next))
(define-fun nxt40 () Bool (! n1 :next n1.next))
(define-fun nxt41 () Bool (! n2 :next n2.next))
(define-fun nxt42 () Bool (! n3 :next n3.next))
(define-fun nxt43 () Bool (! K0 :next K0.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s1 Bool)) Bool (not s1))
(define-fun d4 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d5 ((s1 Bool)) Bool (not s1))
(define-fun d6 ((s1 Bool)) Bool (not s1))
(define-fun d7 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) (not x7) (not s1) s1.next))
(define-fun d8 ((s1 Bool)) Bool s1)
(define-fun d9 ((s1 Bool) (s2 Bool)) Bool (and (not s2) (d3 s1)))
(define-fun d10 ((x0 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not s2) (not s2.next) (d4 x0 s1 s1.next)))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and s2 s2.next (d7 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d12 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s2) s2.next (d5 s1) (d6 s1.next)))
(define-fun d13 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (or (d10 x0 s1 s2 s1.next s2.next) (d11 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next) (d12 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d14 ((s1 Bool) (s2 Bool)) Bool (and s2 (d8 s1)))
(define-fun d15 ((s1 Bool)) Bool (not s1))
(define-fun d16 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d17 ((s1 Bool)) Bool (not s1))
(define-fun d18 ((s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (not s3) (d9 s1 s2)))
(define-fun d19 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not s3) (not s3.next) (d13 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d20 ((x0 Bool) (s1 Bool) (s3 Bool) (s1.next Bool) (s3.next Bool)) Bool (and s3 s3.next (d16 x0 s1 s1.next)))
(define-fun d21 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s3.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s3) s3.next (d14 s1 s2) (d15 s1.next)))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d19 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (d20 x0 s1 s3 s1.next s3.next) (d21 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s3.next)))
(define-fun d23 ((s1 Bool) (s3 Bool)) Bool (and s3 (d17 s1)))
(define-fun d24 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (d0 s0) (d18 s1 s2 s3)))
(define-fun d25 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d1 x0 s0 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d26 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d22 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next))))
(define-fun d27 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (d25 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d26 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next)))
(define-fun d28 ((s0 Bool) (s1 Bool) (s3 Bool)) Bool (and (d2 s0) (d23 s1 s3)))
(define-fun d29 ((s4 Bool)) Bool (not s4))
(define-fun d30 ((x0 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not s4) (not s4.next)))
(define-fun d31 ((s4 Bool)) Bool (not s4))
(define-fun d32 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n1.next (+ n1 1))))
(define-fun d33 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n1.next n1)))
(define-fun d34 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (n1 Int) (s4.next Bool) (n1.next Int)) Bool (and (d30 x0 s4 s4.next) (or (d32 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next) (d33 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next))))
(define-fun d35 ((s4 Bool)) Bool (not s4))
(define-fun d36 ((x0 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not s4) (not s4.next)))
(define-fun d37 ((s4 Bool)) Bool (not s4))
(define-fun d38 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n0.next (+ n0 1))))
(define-fun d39 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n0.next n0)))
(define-fun d40 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (n0 Int) (s4.next Bool) (n0.next Int)) Bool (and (d36 x0 s4 s4.next) (or (d38 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next) (d39 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next))))
(define-fun d41 ((s4 Bool)) Bool (not s4))
(define-fun d42 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) (not x7) (not s4) s4.next))
(define-fun d43 ((s4 Bool)) Bool s4)
(define-fun d44 ((s4 Bool) (s5 Bool)) Bool (and (not s5) (d35 s4)))
(define-fun d45 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (not s5) (not s5.next) (d40 x0 x1 x2 x3 x4 x5 x6 x7 s4 n0 s4.next n0.next)))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and s5 s5.next (d42 x0 x1 x2 x3 x4 x5 x6 x7 s4 s4.next) (= n0 n0.next)))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s5) s5.next (d37 s4) (d41 s4.next) (= n0 n0.next)))
(define-fun d48 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (or (d45 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 n0 s4.next s5.next n0.next) (d46 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 n0 s4.next s5.next n0.next) (d47 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 n0 s4.next s5.next n0.next)))
(define-fun d49 ((s4 Bool) (s5 Bool)) Bool (and s5 (d43 s4)))
(define-fun d50 ((s6 Bool)) Bool (not s6))
(define-fun d51 ((x0 Bool) (x5 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x5) (not s6) (not s6.next)))
(define-fun d52 ((x0 Bool) (x4 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x4) (not s6) (not s6.next)))
(define-fun d53 ((x0 Bool) (x3 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x3) (not s6) (not s6.next)))
(define-fun d54 ((x0 Bool) (x6 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) x6 (not s6) (not s6.next)))
(define-fun d55 ((x0 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) x7 (not s6) (not s6.next)))
(define-fun d56 ((x0 Bool) (x2 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x2) (not s6) (not s6.next)))
(define-fun d57 ((x0 Bool) (x1 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) x1 (not s6) (not s6.next)))
(define-fun d58 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (or (d51 x0 x5 s6 s6.next) (d52 x0 x4 s6 s6.next) (d53 x0 x3 s6 s6.next) (d54 x0 x6 s6 s6.next) (d55 x0 x7 s6 s6.next) (d56 x0 x2 s6 s6.next) (d57 x0 x1 s6 s6.next)))
(define-fun d59 ((s6 Bool)) Bool (not s6))
(define-fun d60 ((s6 Bool)) Bool (not s6))
(define-fun d61 ((x0 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not s6) s6.next))
(define-fun d62 ((s6 Bool)) Bool s6)
(define-fun d63 ((s6 Bool) (s7 Bool)) Bool (and (not s7) (d50 s6)))
(define-fun d64 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not s7) (not s7.next) (d58 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next)))
(define-fun d65 ((x0 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and s7 s7.next (d61 x0 s6 s6.next)))
(define-fun d66 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s7) s7.next (d59 s6) (d60 s6.next)))
(define-fun d67 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d64 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next) (d65 x0 s6 s7 s6.next s7.next) (d66 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next)))
(define-fun d68 ((s6 Bool) (s7 Bool)) Bool (and s7 (d62 s6)))
(define-fun d69 ((s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (d44 s4 s5) (d63 s6 s7)))
(define-fun d70 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (or (d48 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 n0 s4.next s5.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next) (= s5 s5.next) (= n0 n0.next))))
(define-fun d71 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d67 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next) (= s7 s7.next))))
(define-fun d72 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int)) Bool (and (d70 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 n0 s4.next s5.next n0.next) (d71 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next)))
(define-fun d73 ((s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (d49 s4 s5) (d68 s6 s7)))
(define-fun d74 ((s4 Bool) (s8 Bool)) Bool (and (not s8) (d29 s4)))
(define-fun d75 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s8 Bool) (n0 Int) (n1 Int) (s4.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int)) Bool (and (not s8) (not s8.next) (d34 x0 x1 x2 x3 x4 x5 x6 x7 s4 n1 s4.next n1.next) (= n0 n0.next)))
(define-fun d76 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (n1 Int) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int)) Bool (and s8 s8.next (d72 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 n0 s4.next s5.next s6.next s7.next n0.next) (= n1 n1.next)))
(define-fun d77 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s8 Bool) (n0 Int) (n1 Int) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s8) s8.next (d31 s4) (d69 s4.next s5.next s6.next s7.next) (= n0 n0.next) (= n1 n1.next)))
(define-fun d78 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (n1 Int) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int)) Bool (or (d75 x0 x1 x2 x3 x4 x5 x6 x7 s4 s8 n0 n1 s4.next s8.next n0.next n1.next) (d76 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 n0 n1 s4.next s5.next s6.next s7.next s8.next n0.next n1.next) (d77 x0 x1 x2 x3 x4 x5 x6 x7 s4 s8 n0 n1 s4.next s5.next s6.next s7.next s8.next n0.next n1.next)))
(define-fun d79 ((s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and s8 (d73 s4 s5 s6 s7)))
(define-fun d80 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s8 Bool)) Bool (and (d24 s0 s1 s2 s3) (d74 s4 s8)))
(define-fun d81 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d27 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next))))
(define-fun d82 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (n1 Int) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int)) Bool (or (d78 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 n0 n1 s4.next s5.next s6.next s7.next s8.next n0.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= n0 n0.next) (= n1 n1.next))))
(define-fun d83 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int)) Bool (and (d81 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d82 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 n0 n1 s4.next s5.next s6.next s7.next s8.next n0.next n1.next)))
(define-fun d84 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (d28 s0 s1 s3) (d79 s4 s5 s6 s7 s8)))
(define-fun d85 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s8 Bool) (s9 Bool)) Bool (and (not s9) (d80 s0 s1 s2 s3 s4 s8)))
(define-fun d86 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (n1 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int)) Bool (or (d83 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= n0 n0.next) (= n1 n1.next))))
(define-fun d87 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n3 Int) (n3.next Int)) Bool (or (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n3.next (+ n3 1))) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n3.next n3))))
(define-fun d88 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (and (not s9) (not s9.next) (d86 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next n1.next) (d87 x0 x1 x2 x3 x4 x5 x6 x7 n3 n3.next)))
(define-fun d89 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (and (not s9) s9.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= n0 n0.next) (= n1 n1.next) (= n3.next n3)))
(define-fun d90 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (and s9 s9.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d83 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 n1 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next n1.next) (= n3.next n3)))
(define-fun d91 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (or (d88 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (d89 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (d90 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next)))
(define-fun d92 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and s9 (d84 s0 s1 s3 s4 s5 s6 s7 s8)))
(define-fun d93 ((y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool)) Bool (and y48 (not y49) (not y50) (not y51) (not y52) (not y53) (not y54) (not y55)))
(define-fun d94 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n3.next Int)) Bool (or (d91 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= n0 n0.next) (= n1 n1.next) (= n3 n3.next))))
(define-fun d95 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (not s10) (d85 s0 s1 s2 s3 s4 s8 s9)))
(define-fun d96 ((y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (n2 Int) (n2.next Int)) Bool (or (and (not (d93 y48 y49 y50 y51 y52 y53 y54 y55)) (= n2.next (+ 1 n2))) (and (d93 y48 y49 y50 y51 y52 y53 y54 y55) (= n2.next n2))))
(define-fun d97 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and (not s10) (not s10.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d94 y48 y49 y50 y51 y52 y53 y54 y55 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (d96 y48 y49 y50 y51 y52 y53 y54 y55 n2 n2.next)))
(define-fun d98 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and (not s10) s10.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= n0 n0.next) (= n1 n1.next) (= n3 n3.next) (= n2.next n2)))
(define-fun d99 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and s10 s10.next (d91 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n3.next) (= n2.next n2)))
(define-fun d100 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (or (d97 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (d98 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (d99 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next)))
(define-fun d101 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and s10 (d92 s0 s1 s3 s4 s5 s6 s7 s8 s9)))
(define-fun d102 ((s11 Bool)) Bool (not s11))
(define-fun d103 ((x0 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not s11) (not s11.next)))
(define-fun d104 ((s11 Bool)) Bool (not s11))
(define-fun d105 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (d95 s0 s1 s2 s3 s4 s8 s9 s10) (d102 s11)))
(define-fun d106 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (or (d100 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next) (= n3 n3.next))))
(define-fun d107 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s11.next Bool)) Bool (or (d103 x0 s11 s11.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s11 s11.next))))
(define-fun d108 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and (d106 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next n3.next) (d107 x0 x1 x2 x3 x4 x5 x6 x7 s11 s11.next)))
(define-fun d109 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (d101 s0 s1 s3 s4 s5 s6 s7 s8 s9 s10) (d104 s11)))
(define-fun d110 ((s12 Bool)) Bool (not s12))
(define-fun d111 ((x0 Bool) (s12 Bool) (s12.next Bool)) Bool (and (not x0) (not s12) (not s12.next)))
(define-fun d112 ((s12 Bool)) Bool (not s12))
(define-fun d113 ((s12 Bool)) Bool (not s12))
(define-fun d114 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s12.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) (not x7) (not s12) s12.next))
(define-fun d115 ((s12 Bool)) Bool s12)
(define-fun d116 ((s12 Bool) (s13 Bool)) Bool (and (not s13) (d110 s12)))
(define-fun d117 ((x0 Bool) (s12 Bool) (s13 Bool) (s12.next Bool) (s13.next Bool)) Bool (and (not s13) (not s13.next) (d111 x0 s12 s12.next)))
(define-fun d118 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (s12.next Bool) (s13.next Bool)) Bool (and s13 s13.next (d114 x0 x1 x2 x3 x4 x5 x6 x7 s12 s12.next)))
(define-fun d119 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (s12.next Bool) (s13.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s13) s13.next (d112 s12) (d113 s12.next)))
(define-fun d120 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (s12.next Bool) (s13.next Bool)) Bool (or (d117 x0 s12 s13 s12.next s13.next) (d118 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 s12.next s13.next) (d119 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 s12.next s13.next)))
(define-fun d121 ((s12 Bool) (s13 Bool)) Bool (and s13 (d115 s12)))
(define-fun d122 ((s12 Bool)) Bool (not s12))
(define-fun d123 ((x0 Bool) (s12 Bool) (s12.next Bool)) Bool (and (not x0) (not s12) (not s12.next)))
(define-fun d124 ((s12 Bool)) Bool (not s12))
(define-fun d125 ((s12 Bool) (s13 Bool) (s14 Bool)) Bool (and (not s14) (d116 s12 s13)))
(define-fun d126 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool)) Bool (and (not s14) (not s14.next) (d120 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 s12.next s13.next)))
(define-fun d127 ((x0 Bool) (s12 Bool) (s14 Bool) (s12.next Bool) (s14.next Bool)) Bool (and s14 s14.next (d123 x0 s12 s12.next)))
(define-fun d128 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s12.next Bool) (s14.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s14) s14.next (d121 s12 s13) (d122 s12.next)))
(define-fun d129 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool)) Bool (or (d126 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 s14 s12.next s13.next s14.next) (d127 x0 s12 s14 s12.next s14.next) (d128 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 s14 s12.next s14.next)))
(define-fun d130 ((s12 Bool) (s14 Bool)) Bool (and s14 (d124 s12)))
(define-fun d131 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool)) Bool (and (d105 s0 s1 s2 s3 s4 s8 s9 s10 s11) (d125 s12 s13 s14)))
(define-fun d132 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (or (d108 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next n1.next n2.next n3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next) (= n3 n3.next))))
(define-fun d133 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool)) Bool (or (d129 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 s14 s12.next s13.next s14.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s12 s12.next) (= s13 s13.next) (= s14 s14.next))))
(define-fun d134 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y40 Bool) (y41 Bool) (y42 Bool) (y43 Bool) (y44 Bool) (y45 Bool) (y46 Bool) (y47 Bool) (y48 Bool) (y49 Bool) (y50 Bool) (y51 Bool) (y52 Bool) (y53 Bool) (y54 Bool) (y55 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int)) Bool (and (d132 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next n1.next n2.next n3.next) (d133 x0 x1 x2 x3 x4 x5 x6 x7 s12 s13 s14 s12.next s13.next s14.next)))
(define-fun d135 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s14 Bool)) Bool (and (d109 s0 s1 s3 s4 s5 s6 s7 s8 s9 s10 s11) (d130 s12 s14)))
;
(define-fun d136 ((n0 Int) (n1 Int) (K0 Int)) Bool (= K0 (+ n0 n1)))
(define-fun d137 ((n1 Int)) Bool (= 0 n1))
(define-fun d138 ((n2 Int)) Bool (= n2 0))
(define-fun d139 ((n3 Int) (K0 Int)) Bool (= n3 (+ 0 K0)))
(define-fun d140 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s14 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (K0 Int)) Bool (and (d135 s0 s1 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s14) (d136 n0 n1 K0) (d137 n1) (d138 n2) (d139 n3 K0)))
(define-fun d141 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int)) Bool (and (d131 s0 s1 s2 s3 s4 s8 s9 s10 s11 s12 s13 s14) (= 0 n0) (= 0 n1) (= 0 n2) (= 0 n3)))
;
(define-fun I () Bool (! (d141 s0 s1 s2 s3 s4 s8 s9 s10 s11 s12 s13 s14 n0 n1 n2 n3) :init true))
(define-fun T () Bool (! (d134 x0 x1 x2 x3 x4 x5 x6 x7 y40 y41 y42 y43 y44 y45 y46 y47 y48 y49 y50 y51 y52 y53 y54 y55 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 n0 n1 n2 n3 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next n0.next n1.next n2.next n3.next) :trans true))
(define-fun O () Bool (! (not (d140 s0 s1 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s14 n0 n1 n2 n3 K0)) :invar-property 0))
