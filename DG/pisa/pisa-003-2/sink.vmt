(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! s0 :next s0.next))
(define-fun nxt9 () Bool (! s1 :next s1.next))
(define-fun nxt10 () Bool (! s2 :next s2.next))
(define-fun nxt11 () Bool (! s3 :next s3.next))
(define-fun nxt12 () Bool (! s4 :next s4.next))
(define-fun nxt13 () Bool (! s5 :next s5.next))
(define-fun nxt14 () Bool (! s6 :next s6.next))
(define-fun nxt15 () Bool (! s7 :next s7.next))
(define-fun nxt16 () Bool (! s8 :next s8.next))
(define-fun nxt17 () Bool (! s9 :next s9.next))
(define-fun nxt18 () Bool (! s10 :next s10.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s1 Bool)) Bool (not s1))
(define-fun d4 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d5 ((s1 Bool)) Bool (not s1))
(define-fun d6 ((s1 Bool)) Bool (not s1))
(define-fun d7 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 x6 (not x7) (not s1) s1.next))
(define-fun d8 ((s1 Bool)) Bool s1)
(define-fun d9 ((s1 Bool) (s2 Bool)) Bool (and (not s2) (d3 s1)))
(define-fun d10 ((x0 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not s2) (not s2.next) (d4 x0 s1 s1.next)))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and s2 s2.next (d7 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d12 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s2) s2.next (d5 s1) (d6 s1.next)))
(define-fun d13 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (or (d10 x0 s1 s2 s1.next s2.next) (d11 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next) (d12 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d14 ((s1 Bool) (s2 Bool)) Bool (and s2 (d8 s1)))
(define-fun d15 ((s1 Bool)) Bool (not s1))
(define-fun d16 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d17 ((s1 Bool)) Bool (not s1))
(define-fun d18 ((s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (not s3) (d9 s1 s2)))
(define-fun d19 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not s3) (not s3.next) (d13 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d20 ((x0 Bool) (s1 Bool) (s3 Bool) (s1.next Bool) (s3.next Bool)) Bool (and s3 s3.next (d16 x0 s1 s1.next)))
(define-fun d21 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s3.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s3) s3.next (d14 s1 s2) (d15 s1.next)))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d19 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (d20 x0 s1 s3 s1.next s3.next) (d21 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s3.next)))
(define-fun d23 ((s1 Bool) (s3 Bool)) Bool (and s3 (d17 s1)))
(define-fun d24 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (d0 s0) (d18 s1 s2 s3)))
(define-fun d25 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d1 x0 s0 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d26 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d22 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next))))
(define-fun d27 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (d25 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d26 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next)))
(define-fun d28 ((s0 Bool) (s1 Bool) (s3 Bool)) Bool (and (d2 s0) (d23 s1 s3)))
(define-fun d29 ((s4 Bool)) Bool (not s4))
(define-fun d30 ((x0 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not s4) (not s4.next)))
(define-fun d31 ((s4 Bool)) Bool (not s4))
(define-fun d32 ((s4 Bool)) Bool (not s4))
(define-fun d33 ((x0 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not s4) (not s4.next)))
(define-fun d34 ((s4 Bool)) Bool (not s4))
(define-fun d35 ((s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s5) (not s6) s7))
(define-fun d36 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) (not x7) (not s5) (not s6) s7 s5.next (not s6.next) (not s7.next)))
(define-fun d37 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) x6 x7 (not s5) (not s6) (not s7) (not s5.next) s6.next s7.next))
(define-fun d38 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 x7 s5 (not s6) (not s7) (not s5.next) (not s6.next) (not s7.next)))
(define-fun d39 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 (not x7) (not s5) s6 s7 (not s5.next) s6.next (not s7.next)))
(define-fun d40 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d36 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next) (d37 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next) (d38 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next) (d39 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next)))
(define-fun d41 ((s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s5) s6 (not s7)))
(define-fun d42 ((s5 Bool) (s6 Bool)) Bool (and (not s5) s6))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) x7 (not s5) s6 s5.next s6.next))
(define-fun d44 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) (not x6) (not x7) s5 s6 (not s5.next) (not s6.next)))
(define-fun d45 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) (not s5) (not s6) s5.next (not s6.next)))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d43 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next) (d44 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next) (d45 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next)))
(define-fun d47 ((s5 Bool) (s6 Bool)) Bool (and s5 (not s6)))
(define-fun d48 ((s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (not s8) (d35 s5 s6 s7)))
(define-fun d49 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (and (not s8) (not s8.next) (d40 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next)))
(define-fun d50 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s8 Bool) (s5.next Bool) (s6.next Bool) (s8.next Bool)) Bool (and s8 s8.next (d46 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next)))
(define-fun d51 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s5.next Bool) (s6.next Bool) (s8.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s8) s8.next (d41 s5 s6 s7) (d42 s5.next s6.next)))
(define-fun d52 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (or (d49 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s5.next s6.next s7.next s8.next) (d50 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s8 s5.next s6.next s8.next) (d51 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s5.next s6.next s8.next)))
(define-fun d53 ((s5 Bool) (s6 Bool) (s8 Bool)) Bool (and s8 (d47 s5 s6)))
(define-fun d54 ((s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (d32 s4) (d48 s5 s6 s7 s8)))
(define-fun d55 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s4.next Bool)) Bool (or (d33 x0 s4 s4.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next))))
(define-fun d56 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (or (d52 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s5.next s6.next s7.next s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next))))
(define-fun d57 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (and (d55 x0 x1 x2 x3 x4 x5 x6 x7 s4 s4.next) (d56 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s5.next s6.next s7.next s8.next)))
(define-fun d58 ((s4 Bool) (s5 Bool) (s6 Bool) (s8 Bool)) Bool (and (d34 s4) (d53 s5 s6 s8)))
(define-fun d59 ((s4 Bool) (s9 Bool)) Bool (and (not s9) (d29 s4)))
(define-fun d60 ((x0 Bool) (s4 Bool) (s9 Bool) (s4.next Bool) (s9.next Bool)) Bool (and (not s9) (not s9.next) (d30 x0 s4 s4.next)))
(define-fun d61 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and s9 s9.next (d57 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 s4.next s5.next s6.next s7.next s8.next)))
(define-fun d62 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s9 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s9) s9.next (d31 s4) (d54 s4.next s5.next s6.next s7.next s8.next)))
(define-fun d63 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d60 x0 s4 s9 s4.next s9.next) (d61 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 s9 s4.next s5.next s6.next s7.next s8.next s9.next) (d62 x0 x1 x2 x3 x4 x5 x6 x7 s4 s9 s4.next s5.next s6.next s7.next s8.next s9.next)))
(define-fun d64 ((s4 Bool) (s5 Bool) (s6 Bool) (s8 Bool) (s9 Bool)) Bool (and s9 (d58 s4 s5 s6 s8)))
(define-fun d65 ((s4 Bool)) Bool (not s4))
(define-fun d66 ((x0 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not s4) (not s4.next)))
(define-fun d67 ((s4 Bool)) Bool (not s4))
(define-fun d68 ((s4 Bool) (s9 Bool) (s10 Bool)) Bool (and (not s10) (d59 s4 s9)))
(define-fun d69 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not s10) (not s10.next) (d63 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 s9 s4.next s5.next s6.next s7.next s8.next s9.next)))
(define-fun d70 ((x0 Bool) (s4 Bool) (s10 Bool) (s4.next Bool) (s10.next Bool)) Bool (and s10 s10.next (d66 x0 s4 s4.next)))
(define-fun d71 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s4.next Bool) (s10.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s10) s10.next (d64 s4 s5 s6 s8 s9) (d65 s4.next)))
(define-fun d72 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (or (d69 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 s9 s10 s4.next s5.next s6.next s7.next s8.next s9.next s10.next) (d70 x0 s4 s10 s4.next s10.next) (d71 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s8 s9 s10 s4.next s10.next)))
(define-fun d73 ((s4 Bool) (s10 Bool)) Bool (and s10 (d67 s4)))
(define-fun d74 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s9 Bool) (s10 Bool)) Bool (and (d24 s0 s1 s2 s3) (d68 s4 s9 s10)))
(define-fun d75 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d27 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next))))
(define-fun d76 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (or (d72 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 s9 s10 s4.next s5.next s6.next s7.next s8.next s9.next s10.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next))))
(define-fun d77 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (d75 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (d76 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 s9 s10 s4.next s5.next s6.next s7.next s8.next s9.next s10.next)))
(define-fun d78 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s10 Bool)) Bool (and (d28 s0 s1 s3) (d73 s4 s10)))
;
(define-fun d79 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s10 Bool)) Bool (and (d78 s0 s1 s3 s4 s10)))
(define-fun d80 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s9 Bool) (s10 Bool)) Bool (and (d74 s0 s1 s2 s3 s4 s9 s10)))
;
(define-fun I () Bool (! (d80 s0 s1 s2 s3 s4 s9 s10) :init true))
(define-fun T () Bool (! (d77 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next) :trans true))
(define-fun O () Bool (! (not (d79 s0 s1 s3 s4 s10)) :invar-property 0))
