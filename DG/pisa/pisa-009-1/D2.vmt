(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun y8 () Bool)
(declare-fun y8.next () Bool)
(declare-fun y9 () Bool)
(declare-fun y9.next () Bool)
(declare-fun y10 () Bool)
(declare-fun y10.next () Bool)
(declare-fun y11 () Bool)
(declare-fun y11.next () Bool)
(declare-fun y12 () Bool)
(declare-fun y12.next () Bool)
(declare-fun y13 () Bool)
(declare-fun y13.next () Bool)
(declare-fun y14 () Bool)
(declare-fun y14.next () Bool)
(declare-fun y15 () Bool)
(declare-fun y15.next () Bool)
(declare-fun y16 () Bool)
(declare-fun y16.next () Bool)
(declare-fun y17 () Bool)
(declare-fun y17.next () Bool)
(declare-fun y18 () Bool)
(declare-fun y18.next () Bool)
(declare-fun y19 () Bool)
(declare-fun y19.next () Bool)
(declare-fun y20 () Bool)
(declare-fun y20.next () Bool)
(declare-fun y21 () Bool)
(declare-fun y21.next () Bool)
(declare-fun y22 () Bool)
(declare-fun y22.next () Bool)
(declare-fun y23 () Bool)
(declare-fun y23.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
(declare-fun s13 () Bool)
(declare-fun s13.next () Bool)
(declare-fun s14 () Bool)
(declare-fun s14.next () Bool)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! y8 :next y8.next))
(define-fun nxt9 () Bool (! y9 :next y9.next))
(define-fun nxt10 () Bool (! y10 :next y10.next))
(define-fun nxt11 () Bool (! y11 :next y11.next))
(define-fun nxt12 () Bool (! y12 :next y12.next))
(define-fun nxt13 () Bool (! y13 :next y13.next))
(define-fun nxt14 () Bool (! y14 :next y14.next))
(define-fun nxt15 () Bool (! y15 :next y15.next))
(define-fun nxt16 () Bool (! y16 :next y16.next))
(define-fun nxt17 () Bool (! y17 :next y17.next))
(define-fun nxt18 () Bool (! y18 :next y18.next))
(define-fun nxt19 () Bool (! y19 :next y19.next))
(define-fun nxt20 () Bool (! y20 :next y20.next))
(define-fun nxt21 () Bool (! y21 :next y21.next))
(define-fun nxt22 () Bool (! y22 :next y22.next))
(define-fun nxt23 () Bool (! y23 :next y23.next))
(define-fun nxt24 () Bool (! s0 :next s0.next))
(define-fun nxt25 () Bool (! s1 :next s1.next))
(define-fun nxt26 () Bool (! s2 :next s2.next))
(define-fun nxt27 () Bool (! s3 :next s3.next))
(define-fun nxt28 () Bool (! s4 :next s4.next))
(define-fun nxt29 () Bool (! s5 :next s5.next))
(define-fun nxt30 () Bool (! s6 :next s6.next))
(define-fun nxt31 () Bool (! s7 :next s7.next))
(define-fun nxt32 () Bool (! s8 :next s8.next))
(define-fun nxt33 () Bool (! s9 :next s9.next))
(define-fun nxt34 () Bool (! s10 :next s10.next))
(define-fun nxt35 () Bool (! s11 :next s11.next))
(define-fun nxt36 () Bool (! s12 :next s12.next))
(define-fun nxt37 () Bool (! s13 :next s13.next))
(define-fun nxt38 () Bool (! s14 :next s14.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun leftAngle ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) x7))
(define-fun rightAngle ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) x6 (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s0 Bool) (s1 Bool)) Bool (and (not s1) (d0 s0)))
(define-fun d4 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (= s1 s1.next) (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d1 x0 s0 s0.next)))
(define-fun d5 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (and (not s1) s1.next (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (and s1 (not s1.next) (rightAngle x0 x1 x2 x3 x4 x5 x6 x7))))
(define-fun d6 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (= s0 s0.next) (d5 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d7 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (or (d4 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (d6 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next)))
(define-fun d8 ((s0 Bool) (s1 Bool)) Bool (and (not s1) (d2 s0)))
(define-fun d9 ((s2 Bool)) Bool (not s2))
(define-fun d10 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) (not x7) (not s2) s2.next))
(define-fun d11 ((s2 Bool)) Bool s2)
(define-fun d12 ((s2 Bool)) Bool (not s2))
(define-fun d13 ((x0 Bool) (x5 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x5) (not s2) (not s2.next)))
(define-fun d14 ((x0 Bool) (x4 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x4) (not s2) (not s2.next)))
(define-fun d15 ((x0 Bool) (x3 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x3) (not s2) (not s2.next)))
(define-fun d16 ((x0 Bool) (x6 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x6 (not s2) (not s2.next)))
(define-fun d17 ((x0 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x7 (not s2) (not s2.next)))
(define-fun d18 ((x0 Bool) (x2 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not x2) (not s2) (not s2.next)))
(define-fun d19 ((x0 Bool) (x1 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not s2) (not s2.next)))
(define-fun d20 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d13 x0 x5 s2 s2.next) (d14 x0 x4 s2 s2.next) (d15 x0 x3 s2 s2.next) (d16 x0 x6 s2 s2.next) (d17 x0 x7 s2 s2.next) (d18 x0 x2 s2 s2.next) (d19 x0 x1 s2 s2.next)))
(define-fun d21 ((s2 Bool)) Bool (not s2))
(define-fun d22 ((s2 Bool) (s3 Bool)) Bool (and (not s3) (d12 s2)))
(define-fun d23 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not s3) (not s3.next) (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d20 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d24 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and s3 s3.next (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d10 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next)))
(define-fun d25 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not s3) s3.next (leftAngle x0 x1 x2 x3 x4 x5 x6 x7) (d21 s2) (d9 s2.next)))
(define-fun d26 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and s3 (not s3.next) (rightAngle x0 x1 x2 x3 x4 x5 x6 x7) (d11 s2) (d12 s2.next)))
(define-fun d27 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d23 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d24 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d25 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d26 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next)))
(define-fun d28 ((s2 Bool) (s3 Bool)) Bool (and (not s3) (or (d21 s2) (d12 s2))))
(define-fun d29 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (d3 s0 s1) (d22 s2 s3)))
(define-fun d30 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (or (d7 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next))))
(define-fun d31 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d27 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next) (= s3 s3.next))))
(define-fun d32 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (d30 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (d31 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next)))
(define-fun d33 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (d8 s0 s1) (d28 s2 s3)))
(define-fun d34 ((s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (not s4) (not s5) s6))
(define-fun d35 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) x6 x7 (not s4) s5 s6 (not s4.next) s5.next (not s6.next)))
(define-fun d36 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 x5 (not x6) (not x7) s4 (not s5) (not s6) (not s4.next) (not s5.next) (not s6.next)))
(define-fun d37 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) x5 x6 (not x7) (not s4) (not s5) s6 s4.next (not s5.next) (not s6.next)))
(define-fun d38 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) (not s4) (not s5) (not s6) (not s4.next) s5.next s6.next))
(define-fun d39 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d35 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next) (d36 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next) (d37 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next) (d38 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next)))
(define-fun d40 ((s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (not s4) s5 (not s6)))
(define-fun d41 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s7) (d29 s0 s1 s2 s3) (d34 s4 s5 s6)))
(define-fun d42 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not s1) (not s1.next) (d32 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (not s7) (not s7.next) (d34 s4 s5 s6) (d34 s4.next s5.next s6.next)))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not s1) (not s1.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (not s7) s7.next (d34 s4 s5 s6) (d34 s4.next s5.next s6.next)))
(define-fun d44 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not s1) (not s1.next) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) s7 s7.next (d39 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next)))
(define-fun d45 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not s1) s1.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d32 true false false false false false false true s0 s1 s2 s3 s0.next s1.next s2.next s3.next) s7 (not s7.next) (d34 s4.next s5.next s6.next) (d40 s4 s5 s6)))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y8 Bool) (y9 Bool) (y10 Bool) (y11 Bool) (y12 Bool) (y13 Bool) (y14 Bool) (y15 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and s1 s1.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d32 y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (not s7) (not s7.next) (d34 s4 s5 s6) (d34 s4.next s5.next s6.next)))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and s1 (not s1.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d32 true false false false false false true false s0 s1 s2 s3 s0.next s1.next s2.next s3.next) (not s7) (not s7.next) (d34 s4 s5 s6) (d34 s4.next s5.next s6.next)))
(define-fun d48 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y8 Bool) (y9 Bool) (y10 Bool) (y11 Bool) (y12 Bool) (y13 Bool) (y14 Bool) (y15 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d42 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next) (d43 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next) (d44 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next) (d45 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next) (d46 x0 x1 x2 x3 x4 x5 x6 x7 y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next) (d47 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next)))
(define-fun d49 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s7) (d33 s0 s1 s2 s3) (d34 s4 s5 s6)))
(define-fun d50 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (not s8) (d41 s0 s1 s2 s3 s4 s5 s6 s7)))
(define-fun d51 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y8 Bool) (y9 Bool) (y10 Bool) (y11 Bool) (y12 Bool) (y13 Bool) (y14 Bool) (y15 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (and (= s8 s8.next) (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d48 x0 x1 x2 x3 x4 x5 x6 x7 y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next)))
(define-fun d52 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s8.next Bool)) Bool (or (and (not s8) s8.next (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (and s8 (not s8.next) (rightAngle x0 x1 x2 x3 x4 x5 x6 x7))))
(define-fun d53 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (and (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (d52 x0 x1 x2 x3 x4 x5 x6 x7 s8 s8.next)))
(define-fun d54 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y8 Bool) (y9 Bool) (y10 Bool) (y11 Bool) (y12 Bool) (y13 Bool) (y14 Bool) (y15 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (or (d51 x0 x1 x2 x3 x4 x5 x6 x7 y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s8 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next) (d53 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next)))
(define-fun d55 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (not s8) (d49 s0 s1 s2 s3 s4 s5 s6 s7)))
(define-fun d56 ((s9 Bool)) Bool (not s9))
(define-fun d57 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 x6 (not x7) (not s9) s9.next))
(define-fun d58 ((s9 Bool)) Bool s9)
(define-fun d59 ((s9 Bool)) Bool (not s9))
(define-fun d60 ((x0 Bool) (x6 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not x6) (not s9) (not s9.next)))
(define-fun d61 ((x0 Bool) (x5 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not x5) (not s9) (not s9.next)))
(define-fun d62 ((x0 Bool) (x4 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not x4) (not s9) (not s9.next)))
(define-fun d63 ((x0 Bool) (x3 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not x3) (not s9) (not s9.next)))
(define-fun d64 ((x0 Bool) (x7 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) x7 (not s9) (not s9.next)))
(define-fun d65 ((x0 Bool) (x2 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not x2) (not s9) (not s9.next)))
(define-fun d66 ((x0 Bool) (x1 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) x1 (not s9) (not s9.next)))
(define-fun d67 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s9.next Bool)) Bool (or (d60 x0 x6 s9 s9.next) (d61 x0 x5 s9 s9.next) (d62 x0 x4 s9 s9.next) (d63 x0 x3 s9 s9.next) (d64 x0 x7 s9 s9.next) (d65 x0 x2 s9 s9.next) (d66 x0 x1 s9 s9.next)))
(define-fun d68 ((s9 Bool)) Bool (not s9))
(define-fun d69 ((s9 Bool) (s10 Bool)) Bool (and (not s10) (d59 s9)))
(define-fun d70 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not s10) (not s10.next) (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d67 x0 x1 x2 x3 x4 x5 x6 x7 s9 s9.next)))
(define-fun d71 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s9.next Bool) (s10.next Bool)) Bool (and s10 s10.next (not (leftAngle x0 x1 x2 x3 x4 x5 x6 x7)) (not (rightAngle x0 x1 x2 x3 x4 x5 x6 x7)) (d57 x0 x1 x2 x3 x4 x5 x6 x7 s9 s9.next)))
(define-fun d72 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s9.next Bool) (s10.next Bool)) Bool (and (not s10) s10.next (leftAngle x0 x1 x2 x3 x4 x5 x6 x7) (d68 s9) (d56 s9.next)))
(define-fun d73 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s9.next Bool) (s10.next Bool)) Bool (and s10 (not s10.next) (rightAngle x0 x1 x2 x3 x4 x5 x6 x7) (d58 s9) (d59 s9.next)))
(define-fun d74 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s9.next Bool) (s10.next Bool)) Bool (or (d70 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s9.next s10.next) (d71 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s9.next s10.next) (d72 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s9.next s10.next) (d73 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s9.next s10.next)))
(define-fun d75 ((s9 Bool) (s10 Bool)) Bool (and (not s10) (or (d68 s9) (d59 s9))))
(define-fun d76 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d50 s0 s1 s2 s3 s4 s5 s6 s7 s8) (d69 s9 s10)))
(define-fun d77 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y8 Bool) (y9 Bool) (y10 Bool) (y11 Bool) (y12 Bool) (y13 Bool) (y14 Bool) (y15 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (or (d54 x0 x1 x2 x3 x4 x5 x6 x7 y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s8 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next))))
(define-fun d78 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s9.next Bool) (s10.next Bool)) Bool (or (d74 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s9.next s10.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s9 s9.next) (= s10 s10.next))))
(define-fun d79 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y8 Bool) (y9 Bool) (y10 Bool) (y11 Bool) (y12 Bool) (y13 Bool) (y14 Bool) (y15 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (d77 x0 x1 x2 x3 x4 x5 x6 x7 y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s8 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next) (d78 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s9.next s10.next)))
(define-fun d80 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d55 s0 s1 s2 s3 s4 s5 s6 s7 s8) (d75 s9 s10)))
(define-fun d81 ((s11 Bool) (s12 Bool) (s13 Bool)) Bool (and (not s11) (not s12) s13))
(define-fun d82 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) x6 x7 (not s11) s12 s13 (not s11.next) s12.next (not s13.next)))
(define-fun d83 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) x5 (not x6) (not x7) (not s11) (not s12) (not s13) (not s11.next) s12.next s13.next))
(define-fun d84 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) x5 x6 x7 s11 (not s12) (not s13) (not s11.next) (not s12.next) (not s13.next)))
(define-fun d85 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) x5 x6 (not x7) (not s11) (not s12) s13 s11.next (not s12.next) (not s13.next)))
(define-fun d86 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool)) Bool (or (d82 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s13 s11.next s12.next s13.next) (d83 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s13 s11.next s12.next s13.next) (d84 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s13 s11.next s12.next s13.next) (d85 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s13 s11.next s12.next s13.next)))
(define-fun d87 ((s11 Bool) (s12 Bool) (s13 Bool)) Bool (and (not s11) s12 (not s13)))
(define-fun d88 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool)) Bool (and (not s14) (d76 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10) (d81 s11 s12 s13)))
(define-fun d89 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y8 Bool) (y9 Bool) (y10 Bool) (y11 Bool) (y12 Bool) (y13 Bool) (y14 Bool) (y15 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool)) Bool (and (not s8) (not s8.next) (d79 x0 x1 x2 x3 x4 x5 x6 x7 y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next) (not s14) (not s14.next) (d81 s11 s12 s13) (d81 s11.next s12.next s13.next)))
(define-fun d90 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool)) Bool (and (not s8) (not s8.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (not s14) s14.next (d81 s11 s12 s13) (d81 s11.next s12.next s13.next)))
(define-fun d91 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool)) Bool (and (not s8) (not s8.next) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) s14 s14.next (d86 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s13 s11.next s12.next s13.next)))
(define-fun d92 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y8 Bool) (y9 Bool) (y10 Bool) (y11 Bool) (y12 Bool) (y13 Bool) (y14 Bool) (y15 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool)) Bool (and (not s8) s8.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d79 true false false false false false false true y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next) s14 (not s14.next) (d81 s11.next s12.next s13.next) (d87 s11 s12 s13)))
(define-fun d93 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y8 Bool) (y9 Bool) (y10 Bool) (y11 Bool) (y12 Bool) (y13 Bool) (y14 Bool) (y15 Bool) (y16 Bool) (y17 Bool) (y18 Bool) (y19 Bool) (y20 Bool) (y21 Bool) (y22 Bool) (y23 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool)) Bool (and s8 s8.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d79 y16 y17 y18 y19 y20 y21 y22 y23 y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next) (not s14) (not s14.next) (d81 s11 s12 s13) (d81 s11.next s12.next s13.next)))
(define-fun d94 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y8 Bool) (y9 Bool) (y10 Bool) (y11 Bool) (y12 Bool) (y13 Bool) (y14 Bool) (y15 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool)) Bool (and s8 (not s8.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d79 true false false false false false true false y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next) (not s14) (not s14.next) (d81 s11 s12 s13) (d81 s11.next s12.next s13.next)))
(define-fun d95 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y8 Bool) (y9 Bool) (y10 Bool) (y11 Bool) (y12 Bool) (y13 Bool) (y14 Bool) (y15 Bool) (y16 Bool) (y17 Bool) (y18 Bool) (y19 Bool) (y20 Bool) (y21 Bool) (y22 Bool) (y23 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool)) Bool (or (d89 x0 x1 x2 x3 x4 x5 x6 x7 y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next) (d90 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next) (d91 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next) (d92 x0 x1 x2 x3 x4 x5 x6 x7 y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next) (d93 x0 x1 x2 x3 x4 x5 x6 x7 y8 y9 y10 y11 y12 y13 y14 y15 y16 y17 y18 y19 y20 y21 y22 y23 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next) (d94 x0 x1 x2 x3 x4 x5 x6 x7 y8 y9 y10 y11 y12 y13 y14 y15 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next)))
(define-fun d96 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool)) Bool (and (not s14) (d80 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10) (d81 s11 s12 s13)))
;
;
(define-fun I () Bool (! (d88 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14) :init true))
(define-fun T () Bool (! (d95 x0 x1 x2 x3 x4 x5 x6 x7 y8 y9 y10 y11 y12 y13 y14 y15 y16 y17 y18 y19 y20 y21 y22 y23 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next) :trans true))
(define-fun O () Bool (! (not (d96 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14)) :invar-property 0))
