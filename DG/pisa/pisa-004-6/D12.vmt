(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun y56 () Bool)
(declare-fun y56.next () Bool)
(declare-fun y57 () Bool)
(declare-fun y57.next () Bool)
(declare-fun y58 () Bool)
(declare-fun y58.next () Bool)
(declare-fun y59 () Bool)
(declare-fun y59.next () Bool)
(declare-fun y60 () Bool)
(declare-fun y60.next () Bool)
(declare-fun y61 () Bool)
(declare-fun y61.next () Bool)
(declare-fun y62 () Bool)
(declare-fun y62.next () Bool)
(declare-fun y63 () Bool)
(declare-fun y63.next () Bool)
(declare-fun y64 () Bool)
(declare-fun y64.next () Bool)
(declare-fun y65 () Bool)
(declare-fun y65.next () Bool)
(declare-fun y66 () Bool)
(declare-fun y66.next () Bool)
(declare-fun y67 () Bool)
(declare-fun y67.next () Bool)
(declare-fun y68 () Bool)
(declare-fun y68.next () Bool)
(declare-fun y69 () Bool)
(declare-fun y69.next () Bool)
(declare-fun y70 () Bool)
(declare-fun y70.next () Bool)
(declare-fun y71 () Bool)
(declare-fun y71.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
(declare-fun s13 () Bool)
(declare-fun s13.next () Bool)
(declare-fun s14 () Bool)
(declare-fun s14.next () Bool)
(declare-fun n0 () Int)
(declare-fun n0.next () Int)
(declare-fun n1 () Int)
(declare-fun n1.next () Int)
(declare-fun n2 () Int)
(declare-fun n2.next () Int)
(declare-fun n3 () Int)
(declare-fun n3.next () Int)
(declare-fun n4 () Int)
(declare-fun n4.next () Int)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! y56 :next y56.next))
(define-fun nxt9 () Bool (! y57 :next y57.next))
(define-fun nxt10 () Bool (! y58 :next y58.next))
(define-fun nxt11 () Bool (! y59 :next y59.next))
(define-fun nxt12 () Bool (! y60 :next y60.next))
(define-fun nxt13 () Bool (! y61 :next y61.next))
(define-fun nxt14 () Bool (! y62 :next y62.next))
(define-fun nxt15 () Bool (! y63 :next y63.next))
(define-fun nxt16 () Bool (! y64 :next y64.next))
(define-fun nxt17 () Bool (! y65 :next y65.next))
(define-fun nxt18 () Bool (! y66 :next y66.next))
(define-fun nxt19 () Bool (! y67 :next y67.next))
(define-fun nxt20 () Bool (! y68 :next y68.next))
(define-fun nxt21 () Bool (! y69 :next y69.next))
(define-fun nxt22 () Bool (! y70 :next y70.next))
(define-fun nxt23 () Bool (! y71 :next y71.next))
(define-fun nxt24 () Bool (! s0 :next s0.next))
(define-fun nxt25 () Bool (! s1 :next s1.next))
(define-fun nxt26 () Bool (! s2 :next s2.next))
(define-fun nxt27 () Bool (! s3 :next s3.next))
(define-fun nxt28 () Bool (! s4 :next s4.next))
(define-fun nxt29 () Bool (! s5 :next s5.next))
(define-fun nxt30 () Bool (! s6 :next s6.next))
(define-fun nxt31 () Bool (! s7 :next s7.next))
(define-fun nxt32 () Bool (! s8 :next s8.next))
(define-fun nxt33 () Bool (! s9 :next s9.next))
(define-fun nxt34 () Bool (! s10 :next s10.next))
(define-fun nxt35 () Bool (! s11 :next s11.next))
(define-fun nxt36 () Bool (! s12 :next s12.next))
(define-fun nxt37 () Bool (! s13 :next s13.next))
(define-fun nxt38 () Bool (! s14 :next s14.next))
(define-fun nxt39 () Bool (! n0 :next n0.next))
(define-fun nxt40 () Bool (! n1 :next n1.next))
(define-fun nxt41 () Bool (! n2 :next n2.next))
(define-fun nxt42 () Bool (! n3 :next n3.next))
(define-fun nxt43 () Bool (! n4 :next n4.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n0.next (+ n0 1))))
(define-fun d4 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n0.next n0)))
(define-fun d5 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (n0 Int) (s0.next Bool) (n0.next Int)) Bool (and (d1 x0 s0 s0.next) (or (d3 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next) (d4 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next))))
(define-fun d6 ((s1 Bool)) Bool (not s1))
(define-fun d7 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d8 ((s1 Bool)) Bool (not s1))
(define-fun d9 ((s1 Bool)) Bool (not s1))
(define-fun d10 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 x7 (not s1) s1.next))
(define-fun d11 ((s1 Bool)) Bool s1)
(define-fun d12 ((s1 Bool) (s2 Bool)) Bool (and (not s2) (d6 s1)))
(define-fun d13 ((x0 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not s2) (not s2.next) (d7 x0 s1 s1.next)))
(define-fun d14 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and s2 s2.next (d10 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d15 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s2) s2.next (d8 s1) (d9 s1.next)))
(define-fun d16 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (or (d13 x0 s1 s2 s1.next s2.next) (d14 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next) (d15 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d17 ((s1 Bool) (s2 Bool)) Bool (and s2 (d11 s1)))
(define-fun d18 ((s1 Bool)) Bool (not s1))
(define-fun d19 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d20 ((s1 Bool)) Bool (not s1))
(define-fun d21 ((s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (not s3) (d12 s1 s2)))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not s3) (not s3.next) (d16 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d23 ((x0 Bool) (s1 Bool) (s3 Bool) (s1.next Bool) (s3.next Bool)) Bool (and s3 s3.next (d19 x0 s1 s1.next)))
(define-fun d24 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s3.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s3) s3.next (d17 s1 s2) (d18 s1.next)))
(define-fun d25 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d22 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (d23 x0 s1 s3 s1.next s3.next) (d24 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s3.next)))
(define-fun d26 ((s1 Bool) (s3 Bool)) Bool (and s3 (d20 s1)))
(define-fun d27 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool)) Bool (and (d0 s0) (d21 s1 s2 s3)))
(define-fun d28 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (n0 Int) (s0.next Bool) (n0.next Int)) Bool (or (d5 x0 x1 x2 x3 x4 x5 x6 x7 s0 n0 s0.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= n0 n0.next))))
(define-fun d29 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d25 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next))))
(define-fun d30 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (n0.next Int)) Bool (and (d28 x0 x1 x2 x3 x4 x5 x6 x7 s0 n0 s0.next n0.next) (d29 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s1.next s2.next s3.next)))
(define-fun d31 ((s0 Bool) (s1 Bool) (s3 Bool)) Bool (and (d2 s0) (d26 s1 s3)))
(define-fun d32 ((s4 Bool)) Bool (not s4))
(define-fun d33 ((x0 Bool) (x7 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not x7) (not s4) (not s4.next)))
(define-fun d34 ((x0 Bool) (x6 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not x6) (not s4) (not s4.next)))
(define-fun d35 ((x0 Bool) (x5 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not x5) (not s4) (not s4.next)))
(define-fun d36 ((x0 Bool) (x4 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not x4) (not s4) (not s4.next)))
(define-fun d37 ((x0 Bool) (x3 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) x3 (not s4) (not s4.next)))
(define-fun d38 ((x0 Bool) (x2 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not x2) (not s4) (not s4.next)))
(define-fun d39 ((x0 Bool) (x1 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) x1 (not s4) (not s4.next)))
(define-fun d40 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s4.next Bool)) Bool (or (d33 x0 x7 s4 s4.next) (d34 x0 x6 s4 s4.next) (d35 x0 x5 s4 s4.next) (d36 x0 x4 s4 s4.next) (d37 x0 x3 s4 s4.next) (d38 x0 x2 s4 s4.next) (d39 x0 x1 s4 s4.next)))
(define-fun d41 ((s4 Bool)) Bool (not s4))
(define-fun d42 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and (d27 s0 s1 s2 s3) (d32 s4)))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (n0.next Int)) Bool (or (d30 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 n0 s0.next s1.next s2.next s3.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= n0 n0.next))))
(define-fun d44 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s4.next Bool)) Bool (or (d40 x0 x1 x2 x3 x4 x5 x6 x7 s4 s4.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next))))
(define-fun d45 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n0.next Int)) Bool (and (d43 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 n0 s0.next s1.next s2.next s3.next n0.next) (d44 x0 x1 x2 x3 x4 x5 x6 x7 s4 s4.next)))
(define-fun d46 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool)) Bool (and (d31 s0 s1 s3) (d41 s4)))
(define-fun d47 ((s5 Bool)) Bool (not s5))
(define-fun d48 ((x0 Bool) (s5 Bool) (s5.next Bool)) Bool (and (not x0) (not s5) (not s5.next)))
(define-fun d49 ((s5 Bool)) Bool (not s5))
(define-fun d50 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and (d42 s0 s1 s2 s3 s4) (d47 s5)))
(define-fun d51 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n0.next Int)) Bool (or (d45 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 n0 s0.next s1.next s2.next s3.next s4.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= n0 n0.next))))
(define-fun d52 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s5.next Bool)) Bool (or (d48 x0 s5 s5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next))))
(define-fun d53 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (and (d51 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 n0 s0.next s1.next s2.next s3.next s4.next n0.next) (d52 x0 x1 x2 x3 x4 x5 x6 x7 s5 s5.next)))
(define-fun d54 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and (d46 s0 s1 s3 s4) (d49 s5)))
(define-fun d55 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (not s6) (d50 s0 s1 s2 s3 s4 s5)))
(define-fun d56 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int)) Bool (or (d53 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= n0 n0.next))))
(define-fun d57 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n2 Int) (n2.next Int)) Bool (or (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n2.next (+ n2 1))) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n2.next n2))))
(define-fun d58 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (n0 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n0.next Int) (n2.next Int)) Bool (and (not s6) (not s6.next) (d56 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (d57 x0 x1 x2 x3 x4 x5 x6 x7 n2 n2.next)))
(define-fun d59 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (n0 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n0.next Int) (n2.next Int)) Bool (and (not s6) s6.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= n0 n0.next) (= n2.next n2)))
(define-fun d60 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (n0 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n0.next Int) (n2.next Int)) Bool (and s6 s6.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d53 y56 y57 y58 y59 y60 y61 y62 y63 s0 s1 s2 s3 s4 s5 n0 s0.next s1.next s2.next s3.next s4.next s5.next n0.next) (= n2.next n2)))
(define-fun d61 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (n0 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n0.next Int) (n2.next Int)) Bool (or (d58 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 n0 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next n2.next) (d59 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 n0 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next n2.next) (d60 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 s0 s1 s2 s3 s4 s5 s6 n0 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next n2.next)))
(define-fun d62 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and s6 (d54 s0 s1 s3 s4 s5)))
(define-fun d63 ((y64 Bool) (y65 Bool) (y66 Bool) (y67 Bool) (y68 Bool) (y69 Bool) (y70 Bool) (y71 Bool)) Bool (and y64 (not y65) (not y66) (not y67) (not y68) (not y69) (not y70) (not y71)))
(define-fun d64 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (n0 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (n0.next Int) (n2.next Int)) Bool (or (d61 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 s0 s1 s2 s3 s4 s5 s6 n0 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next n2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= n0 n0.next) (= n2 n2.next))))
(define-fun d65 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s7) (d55 s0 s1 s2 s3 s4 s5 s6)))
(define-fun d66 ((y64 Bool) (y65 Bool) (y66 Bool) (y67 Bool) (y68 Bool) (y69 Bool) (y70 Bool) (y71 Bool) (n1 Int) (n1.next Int)) Bool (or (and (not (d63 y64 y65 y66 y67 y68 y69 y70 y71)) (= n1.next (+ 1 n1))) (and (d63 y64 y65 y66 y67 y68 y69 y70 y71) (= n1.next n1))))
(define-fun d67 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (y64 Bool) (y65 Bool) (y66 Bool) (y67 Bool) (y68 Bool) (y69 Bool) (y70 Bool) (y71 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (not s7) (not s7.next) (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (d64 y64 y65 y66 y67 y68 y69 y70 y71 y56 y57 y58 y59 y60 y61 y62 y63 s0 s1 s2 s3 s4 s5 s6 n0 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next n2.next) (d66 y64 y65 y66 y67 y68 y69 y70 y71 n1 n1.next)))
(define-fun d68 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (not s7) s7.next (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= n0 n0.next) (= n2 n2.next) (= n1.next n1)))
(define-fun d69 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and s7 s7.next (d61 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 s0 s1 s2 s3 s4 s5 s6 n0 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next n0.next n2.next) (= n1.next n1)))
(define-fun d70 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (y64 Bool) (y65 Bool) (y66 Bool) (y67 Bool) (y68 Bool) (y69 Bool) (y70 Bool) (y71 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (or (d67 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 y64 y65 y66 y67 y68 y69 y70 y71 s0 s1 s2 s3 s4 s5 s6 s7 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next n1.next n2.next) (d68 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next n1.next n2.next) (d69 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 s0 s1 s2 s3 s4 s5 s6 s7 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next n1.next n2.next)))
(define-fun d71 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and s7 (d62 s0 s1 s3 s4 s5 s6)))
(define-fun d72 ((s8 Bool)) Bool (not s8))
(define-fun d73 ((x0 Bool) (s8 Bool) (s8.next Bool)) Bool (and (not x0) (not s8) (not s8.next)))
(define-fun d74 ((s8 Bool)) Bool (not s8))
(define-fun d75 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (d65 s0 s1 s2 s3 s4 s5 s6 s7) (d72 s8)))
(define-fun d76 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (y64 Bool) (y65 Bool) (y66 Bool) (y67 Bool) (y68 Bool) (y69 Bool) (y70 Bool) (y71 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (or (d70 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 y64 y65 y66 y67 y68 y69 y70 y71 s0 s1 s2 s3 s4 s5 s6 s7 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next n1.next n2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next))))
(define-fun d77 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s8.next Bool)) Bool (or (d73 x0 s8 s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8 s8.next))))
(define-fun d78 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (y64 Bool) (y65 Bool) (y66 Bool) (y67 Bool) (y68 Bool) (y69 Bool) (y70 Bool) (y71 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (d76 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 y64 y65 y66 y67 y68 y69 y70 y71 s0 s1 s2 s3 s4 s5 s6 s7 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next n0.next n1.next n2.next) (d77 x0 x1 x2 x3 x4 x5 x6 x7 s8 s8.next)))
(define-fun d79 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (d71 s0 s1 s3 s4 s5 s6 s7) (d74 s8)))
(define-fun d80 ((s9 Bool)) Bool (not s9))
(define-fun d81 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not s9) (not s9.next)))
(define-fun d82 ((s9 Bool)) Bool (not s9))
(define-fun d83 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n4 Int) (n4.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n4.next (+ n4 1))))
(define-fun d84 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n4 Int) (n4.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n4.next n4)))
(define-fun d85 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (n4 Int) (s9.next Bool) (n4.next Int)) Bool (and (d81 x0 s9 s9.next) (or (d83 x0 x1 x2 x3 x4 x5 x6 x7 n4 n4.next) (d84 x0 x1 x2 x3 x4 x5 x6 x7 n4 n4.next))))
(define-fun d86 ((s9 Bool)) Bool (not s9))
(define-fun d87 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not s9) (not s9.next)))
(define-fun d88 ((s9 Bool)) Bool (not s9))
(define-fun d89 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n3 Int) (n3.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n3.next (+ n3 1))))
(define-fun d90 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n3 Int) (n3.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n3.next n3)))
(define-fun d91 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (n3 Int) (s9.next Bool) (n3.next Int)) Bool (and (d87 x0 s9 s9.next) (or (d89 x0 x1 x2 x3 x4 x5 x6 x7 n3 n3.next) (d90 x0 x1 x2 x3 x4 x5 x6 x7 n3 n3.next))))
(define-fun d92 ((s9 Bool)) Bool (not s9))
(define-fun d93 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) x4 x5 x6 (not x7) (not s9) s9.next))
(define-fun d94 ((s9 Bool)) Bool s9)
(define-fun d95 ((s9 Bool) (s10 Bool)) Bool (and (not s10) (d86 s9)))
(define-fun d96 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (n3 Int) (s9.next Bool) (s10.next Bool) (n3.next Int)) Bool (and (not s10) (not s10.next) (d91 x0 x1 x2 x3 x4 x5 x6 x7 s9 n3 s9.next n3.next)))
(define-fun d97 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (n3 Int) (s9.next Bool) (s10.next Bool) (n3.next Int)) Bool (and s10 s10.next (d93 x0 x1 x2 x3 x4 x5 x6 x7 s9 s9.next) (= n3 n3.next)))
(define-fun d98 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (n3 Int) (s9.next Bool) (s10.next Bool) (n3.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s10) s10.next (d88 s9) (d92 s9.next) (= n3 n3.next)))
(define-fun d99 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (n3 Int) (s9.next Bool) (s10.next Bool) (n3.next Int)) Bool (or (d96 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 n3 s9.next s10.next n3.next) (d97 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 n3 s9.next s10.next n3.next) (d98 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 n3 s9.next s10.next n3.next)))
(define-fun d100 ((s9 Bool) (s10 Bool)) Bool (and s10 (d94 s9)))
(define-fun d101 ((s11 Bool)) Bool (not s11))
(define-fun d102 ((x0 Bool) (x6 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not x6) (not s11) (not s11.next)))
(define-fun d103 ((x0 Bool) (x5 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not x5) (not s11) (not s11.next)))
(define-fun d104 ((x0 Bool) (x4 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not x4) (not s11) (not s11.next)))
(define-fun d105 ((x0 Bool) (x3 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) x3 (not s11) (not s11.next)))
(define-fun d106 ((x0 Bool) (x7 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) x7 (not s11) (not s11.next)))
(define-fun d107 ((x0 Bool) (x2 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not x2) (not s11) (not s11.next)))
(define-fun d108 ((x0 Bool) (x1 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) x1 (not s11) (not s11.next)))
(define-fun d109 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s11.next Bool)) Bool (or (d102 x0 x6 s11 s11.next) (d103 x0 x5 s11 s11.next) (d104 x0 x4 s11 s11.next) (d105 x0 x3 s11 s11.next) (d106 x0 x7 s11 s11.next) (d107 x0 x2 s11 s11.next) (d108 x0 x1 s11 s11.next)))
(define-fun d110 ((s11 Bool)) Bool (not s11))
(define-fun d111 ((s11 Bool)) Bool (not s11))
(define-fun d112 ((x0 Bool) (s11 Bool) (s11.next Bool)) Bool (and (not x0) (not s11) s11.next))
(define-fun d113 ((s11 Bool)) Bool s11)
(define-fun d114 ((s11 Bool) (s12 Bool)) Bool (and (not s12) (d101 s11)))
(define-fun d115 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (not s12) (not s12.next) (d109 x0 x1 x2 x3 x4 x5 x6 x7 s11 s11.next)))
(define-fun d116 ((x0 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and s12 s12.next (d112 x0 s11 s11.next)))
(define-fun d117 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s12) s12.next (d110 s11) (d111 s11.next)))
(define-fun d118 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d115 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s11.next s12.next) (d116 x0 s11 s12 s11.next s12.next) (d117 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s11.next s12.next)))
(define-fun d119 ((s11 Bool) (s12 Bool)) Bool (and s12 (d113 s11)))
(define-fun d120 ((s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool)) Bool (and (d95 s9 s10) (d114 s11 s12)))
(define-fun d121 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (n3 Int) (s9.next Bool) (s10.next Bool) (n3.next Int)) Bool (or (d99 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 n3 s9.next s10.next n3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s9 s9.next) (= s10 s10.next) (= n3 n3.next))))
(define-fun d122 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s11 Bool) (s12 Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d118 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s11.next s12.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s11 s11.next) (= s12 s12.next))))
(define-fun d123 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (n3 Int) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (n3.next Int)) Bool (and (d121 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 n3 s9.next s10.next n3.next) (d122 x0 x1 x2 x3 x4 x5 x6 x7 s11 s12 s11.next s12.next)))
(define-fun d124 ((s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool)) Bool (and (d100 s9 s10) (d119 s11 s12)))
(define-fun d125 ((s9 Bool) (s13 Bool)) Bool (and (not s13) (d80 s9)))
(define-fun d126 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s13 Bool) (n3 Int) (n4 Int) (s9.next Bool) (s13.next Bool) (n3.next Int) (n4.next Int)) Bool (and (not s13) (not s13.next) (d85 x0 x1 x2 x3 x4 x5 x6 x7 s9 n4 s9.next n4.next) (= n3 n3.next)))
(define-fun d127 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (n3 Int) (n4 Int) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n3.next Int) (n4.next Int)) Bool (and s13 s13.next (d123 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s11 s12 n3 s9.next s10.next s11.next s12.next n3.next) (= n4 n4.next)))
(define-fun d128 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s13 Bool) (n3 Int) (n4 Int) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n3.next Int) (n4.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s13) s13.next (d82 s9) (d120 s9.next s10.next s11.next s12.next) (= n3 n3.next) (= n4 n4.next)))
(define-fun d129 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (n3 Int) (n4 Int) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n3.next Int) (n4.next Int)) Bool (or (d126 x0 x1 x2 x3 x4 x5 x6 x7 s9 s13 n3 n4 s9.next s13.next n3.next n4.next) (d127 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s11 s12 s13 n3 n4 s9.next s10.next s11.next s12.next s13.next n3.next n4.next) (d128 x0 x1 x2 x3 x4 x5 x6 x7 s9 s13 n3 n4 s9.next s10.next s11.next s12.next s13.next n3.next n4.next)))
(define-fun d130 ((s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool)) Bool (and s13 (d124 s9 s10 s11 s12)))
(define-fun d131 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s13 Bool)) Bool (and (d75 s0 s1 s2 s3 s4 s5 s6 s7 s8) (d125 s9 s13)))
(define-fun d132 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (y64 Bool) (y65 Bool) (y66 Bool) (y67 Bool) (y68 Bool) (y69 Bool) (y70 Bool) (y71 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (or (d78 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 y64 y65 y66 y67 y68 y69 y70 y71 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next n1.next n2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next))))
(define-fun d133 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (n3 Int) (n4 Int) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n3.next Int) (n4.next Int)) Bool (or (d129 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s11 s12 s13 n3 n4 s9.next s10.next s11.next s12.next s13.next n3.next n4.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= n3 n3.next) (= n4 n4.next))))
(define-fun d134 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (y64 Bool) (y65 Bool) (y66 Bool) (y67 Bool) (y68 Bool) (y69 Bool) (y70 Bool) (y71 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (n4 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int) (n4.next Int)) Bool (and (d132 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 y64 y65 y66 y67 y68 y69 y70 y71 s0 s1 s2 s3 s4 s5 s6 s7 s8 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next n0.next n1.next n2.next) (d133 x0 x1 x2 x3 x4 x5 x6 x7 s9 s10 s11 s12 s13 n3 n4 s9.next s10.next s11.next s12.next s13.next n3.next n4.next)))
(define-fun d135 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool)) Bool (and (d79 s0 s1 s3 s4 s5 s6 s7 s8) (d130 s9 s10 s11 s12 s13)))
(define-fun d136 ((s14 Bool)) Bool (not s14))
(define-fun d137 ((x0 Bool) (s14 Bool) (s14.next Bool)) Bool (and (not x0) (not s14) (not s14.next)))
(define-fun d138 ((s14 Bool)) Bool (not s14))
(define-fun d139 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s13 Bool) (s14 Bool)) Bool (and (d131 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s13) (d136 s14)))
(define-fun d140 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (y64 Bool) (y65 Bool) (y66 Bool) (y67 Bool) (y68 Bool) (y69 Bool) (y70 Bool) (y71 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (n4 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int) (n4.next Int)) Bool (or (d134 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 y64 y65 y66 y67 y68 y69 y70 y71 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 n0 n1 n2 n3 n4 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next n0.next n1.next n2.next n3.next n4.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next) (= s13 s13.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next) (= n3 n3.next) (= n4 n4.next))))
(define-fun d141 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s14 Bool) (s14.next Bool)) Bool (or (d137 x0 s14 s14.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s14 s14.next))))
(define-fun d142 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (y56 Bool) (y57 Bool) (y58 Bool) (y59 Bool) (y60 Bool) (y61 Bool) (y62 Bool) (y63 Bool) (y64 Bool) (y65 Bool) (y66 Bool) (y67 Bool) (y68 Bool) (y69 Bool) (y70 Bool) (y71 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool) (n0 Int) (n1 Int) (n2 Int) (n3 Int) (n4 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (s13.next Bool) (s14.next Bool) (n0.next Int) (n1.next Int) (n2.next Int) (n3.next Int) (n4.next Int)) Bool (and (d140 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 y64 y65 y66 y67 y68 y69 y70 y71 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 n0 n1 n2 n3 n4 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next n0.next n1.next n2.next n3.next n4.next) (d141 x0 x1 x2 x3 x4 x5 x6 x7 s14 s14.next)))
(define-fun d143 ((s0 Bool) (s1 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s13 Bool) (s14 Bool)) Bool (and (d135 s0 s1 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13) (d138 s14)))
;
;
(define-fun I () Bool (! (d139 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s13 s14) :init true))
(define-fun T () Bool (! (d142 x0 x1 x2 x3 x4 x5 x6 x7 y56 y57 y58 y59 y60 y61 y62 y63 y64 y65 y66 y67 y68 y69 y70 y71 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 n0 n1 n2 n3 n4 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next s13.next s14.next n0.next n1.next n2.next n3.next n4.next) :trans true))
(define-fun O () Bool (! (not (d143 s0 s1 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14)) :invar-property 0))
