(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! s0 :next s0.next))
(define-fun nxt9 () Bool (! s1 :next s1.next))
(define-fun nxt10 () Bool (! s2 :next s2.next))
(define-fun nxt11 () Bool (! s3 :next s3.next))
(define-fun nxt12 () Bool (! s4 :next s4.next))
(define-fun nxt13 () Bool (! s5 :next s5.next))
(define-fun nxt14 () Bool (! s6 :next s6.next))
(define-fun nxt15 () Bool (! s7 :next s7.next))
(define-fun nxt16 () Bool (! s8 :next s8.next))
(define-fun nxt17 () Bool (! s9 :next s9.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s1 Bool)) Bool (not s1))
(define-fun d4 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) (not s1) (not s1.next)))
(define-fun d5 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) (not x2) (not x3) x4 (not x5) (not x6) x7 (not s1) (not s1.next)))
(define-fun d6 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d4 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (d5 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d7 ((s1 Bool)) Bool (not s1))
(define-fun d8 ((s0 Bool) (s1 Bool)) Bool (and (d0 s0) (d3 s1)))
(define-fun d9 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d1 x0 s0 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d10 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d6 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next))))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (d9 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d10 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d12 ((s0 Bool) (s1 Bool)) Bool (and (d2 s0) (d7 s1)))
(define-fun d13 ((s0 Bool)) Bool (not s0))
(define-fun d14 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) s0.next))
(define-fun d15 ((x0 Bool) (x3 Bool) (s0.next Bool)) Bool (and (not x0) x3 (not s0.next)))
(define-fun d16 ((x0 Bool) (x4 Bool) (s0.next Bool)) Bool (and (not x0) x4 (not s0.next)))
(define-fun d17 ((x0 Bool) (x5 Bool) (s0.next Bool)) Bool (and (not x0) x5 (not s0.next)))
(define-fun d18 ((x0 Bool) (x6 Bool) (s0.next Bool)) Bool (and (not x0) x6 (not s0.next)))
(define-fun d19 ((x0 Bool) (x7 Bool) (s0.next Bool)) Bool (and (not x0) x7 (not s0.next)))
(define-fun d20 ((x0 Bool) (x2 Bool) (s0.next Bool)) Bool (and (not x0) (not x2) (not s0.next)))
(define-fun d21 ((x0 Bool) (x1 Bool) (s0.next Bool)) Bool (and (not x0) x1 (not s0.next)))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0.next Bool)) Bool (or (d14 x0 x1 x2 x3 x4 x5 x6 x7 s0.next) (d15 x0 x3 s0.next) (d16 x0 x4 s0.next) (d17 x0 x5 s0.next) (d18 x0 x6 s0.next) (d19 x0 x7 s0.next) (d20 x0 x2 s0.next) (d21 x0 x1 s0.next)))
(define-fun d23 ((s0 Bool)) Bool (not s0))
(define-fun d24 ((s1 Bool)) Bool (not s1))
(define-fun d25 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) (not x2) (not x3) x4 (not x5) (not x6) x7 s1.next))
(define-fun d26 ((x0 Bool) (x7 Bool) (s1.next Bool)) Bool (and (not x0) (not x7) (not s1.next)))
(define-fun d27 ((x0 Bool) (x5 Bool) (s1.next Bool)) Bool (and (not x0) x5 (not s1.next)))
(define-fun d28 ((x0 Bool) (x6 Bool) (s1.next Bool)) Bool (and (not x0) x6 (not s1.next)))
(define-fun d29 ((x0 Bool) (x4 Bool) (s1.next Bool)) Bool (and (not x0) (not x4) (not s1.next)))
(define-fun d30 ((x0 Bool) (x3 Bool) (s1.next Bool)) Bool (and (not x0) x3 (not s1.next)))
(define-fun d31 ((x0 Bool) (x2 Bool) (s1.next Bool)) Bool (and (not x0) x2 (not s1.next)))
(define-fun d32 ((x0 Bool) (x1 Bool) (s1.next Bool)) Bool (and (not x0) x1 (not s1.next)))
(define-fun d33 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1.next Bool)) Bool (or (d25 x0 x1 x2 x3 x4 x5 x6 x7 s1.next) (d26 x0 x7 s1.next) (d27 x0 x5 s1.next) (d28 x0 x6 s1.next) (d29 x0 x4 s1.next) (d30 x0 x3 s1.next) (d31 x0 x2 s1.next) (d32 x0 x1 s1.next)))
(define-fun d34 ((s1 Bool)) Bool (not s1))
(define-fun d35 ((s2 Bool)) Bool s2)
(define-fun d36 ((x0 Bool) (x7 Bool) (s2.next Bool)) Bool (and (not x0) (not x7) (not s2.next)))
(define-fun d37 ((x0 Bool) (x5 Bool) (s2.next Bool)) Bool (and (not x0) x5 (not s2.next)))
(define-fun d38 ((x0 Bool) (x6 Bool) (s2.next Bool)) Bool (and (not x0) x6 (not s2.next)))
(define-fun d39 ((x0 Bool) (x4 Bool) (s2.next Bool)) Bool (and (not x0) (not x4) (not s2.next)))
(define-fun d40 ((x0 Bool) (x3 Bool) (s2.next Bool)) Bool (and (not x0) x3 (not s2.next)))
(define-fun d41 ((x0 Bool) (x2 Bool) (s2.next Bool)) Bool (and (not x0) x2 (not s2.next)))
(define-fun d42 ((x0 Bool) (x1 Bool) (s2.next Bool)) Bool (and (not x0) x1 (not s2.next)))
(define-fun d43 ((x0 Bool) (s2 Bool) (s2.next Bool)) Bool (and (not x0) (not s2) (not s2.next)))
(define-fun d44 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d36 x0 x7 s2.next) (d37 x0 x5 s2.next) (d38 x0 x6 s2.next) (d39 x0 x4 s2.next) (d40 x0 x3 s2.next) (d41 x0 x2 s2.next) (d42 x0 x1 s2.next) (d43 x0 s2 s2.next)))
(define-fun d45 ((s2 Bool)) Bool (not s2))
(define-fun d46 ((s2 Bool)) Bool s2)
(define-fun d47 ((s2 Bool)) Bool (or (d45 s2) (d46 s2)))
(define-fun d48 ((s3 Bool)) Bool (not s3))
(define-fun d49 ((x0 Bool) (x3 Bool) (s3.next Bool)) Bool (and (not x0) x3 s3.next))
(define-fun d50 ((x0 Bool) (x4 Bool) (s3.next Bool)) Bool (and (not x0) x4 s3.next))
(define-fun d51 ((x0 Bool) (x5 Bool) (s3.next Bool)) Bool (and (not x0) x5 s3.next))
(define-fun d52 ((x0 Bool) (x6 Bool) (s3.next Bool)) Bool (and (not x0) x6 s3.next))
(define-fun d53 ((x0 Bool) (x7 Bool) (s3.next Bool)) Bool (and (not x0) x7 s3.next))
(define-fun d54 ((x0 Bool) (x2 Bool) (s3.next Bool)) Bool (and (not x0) (not x2) s3.next))
(define-fun d55 ((x0 Bool) (x1 Bool) (s3.next Bool)) Bool (and (not x0) x1 s3.next))
(define-fun d56 ((x0 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) s3 s3.next))
(define-fun d57 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s3.next Bool)) Bool (or (d49 x0 x3 s3.next) (d50 x0 x4 s3.next) (d51 x0 x5 s3.next) (d52 x0 x6 s3.next) (d53 x0 x7 s3.next) (d54 x0 x2 s3.next) (d55 x0 x1 s3.next) (d56 x0 s3 s3.next)))
(define-fun d58 ((s3 Bool)) Bool (not s3))
(define-fun d59 ((s3 Bool)) Bool s3)
(define-fun d60 ((s3 Bool)) Bool (or (d58 s3) (d59 s3)))
(define-fun d61 ((s4 Bool)) Bool (not s4))
(define-fun d62 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s4.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) (not s4) s4.next))
(define-fun d63 ((s4 Bool)) Bool s4)
(define-fun d64 ((s5 Bool)) Bool (not s5))
(define-fun d65 ((x0 Bool) (s5 Bool) (s5.next Bool)) Bool (and (not x0) (not s5) (not s5.next)))
(define-fun d66 ((s5 Bool)) Bool (not s5))
(define-fun d67 ((s4 Bool) (s5 Bool)) Bool (and (d61 s4) (d64 s5)))
(define-fun d68 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s4.next Bool)) Bool (or (d62 x0 x1 x2 x3 x4 x5 x6 x7 s4 s4.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next))))
(define-fun d69 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s5.next Bool)) Bool (or (d65 x0 s5 s5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next))))
(define-fun d70 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (d68 x0 x1 x2 x3 x4 x5 x6 x7 s4 s4.next) (d69 x0 x1 x2 x3 x4 x5 x6 x7 s5 s5.next)))
(define-fun d71 ((s4 Bool) (s5 Bool)) Bool (and (d63 s4) (d66 s5)))
(define-fun d72 ((s6 Bool)) Bool (not s6))
(define-fun d73 ((x0 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not s6) (not s6.next)))
(define-fun d74 ((s6 Bool)) Bool (not s6))
(define-fun d75 ((s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (d67 s4 s5) (d72 s6)))
(define-fun d76 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (or (d70 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next) (= s5 s5.next))))
(define-fun d77 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (or (d73 x0 s6 s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next))))
(define-fun d78 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (d76 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (d77 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next)))
(define-fun d79 ((s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (d71 s4 s5) (d74 s6)))
(define-fun d80 ((s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (d48 s3) (d75 s4 s5 s6)))
(define-fun d81 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s3.next Bool)) Bool (or (d57 x0 x1 x2 x3 x4 x5 x6 x7 s3 s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s3 s3.next))))
(define-fun d82 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d78 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next))))
(define-fun d83 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (d81 x0 x1 x2 x3 x4 x5 x6 x7 s3 s3.next) (d82 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s4.next s5.next s6.next)))
(define-fun d84 ((s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (d60 s3) (d79 s4 s5 s6)))
(define-fun d85 ((s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (d35 s2) (d80 s3 s4 s5 s6)))
(define-fun d86 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s2.next Bool)) Bool (or (d44 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next))))
(define-fun d87 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d83 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s3.next s4.next s5.next s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next))))
(define-fun d88 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (d86 x0 x1 x2 x3 x4 x5 x6 x7 s2 s2.next) (d87 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s5 s6 s3.next s4.next s5.next s6.next)))
(define-fun d89 ((s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (d47 s2) (d84 s3 s4 s5 s6)))
(define-fun d90 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (d24 s1) (d85 s2 s3 s4 s5 s6)))
(define-fun d91 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d33 x0 x1 x2 x3 x4 x5 x6 x7 s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next))))
(define-fun d92 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d88 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s4 s5 s6 s2.next s3.next s4.next s5.next s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next))))
(define-fun d93 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (d91 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (d92 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s4 s5 s6 s2.next s3.next s4.next s5.next s6.next)))
(define-fun d94 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (d34 s1) (d89 s2 s3 s4 s5 s6)))
(define-fun d95 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (d13 s0) (d90 s1 s2 s3 s4 s5 s6)))
(define-fun d96 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d22 x0 x1 x2 x3 x4 x5 x6 x7 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d97 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d93 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s5 s6 s1.next s2.next s3.next s4.next s5.next s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next))))
(define-fun d98 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool)) Bool (and (d96 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d97 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s5 s6 s1.next s2.next s3.next s4.next s5.next s6.next)))
(define-fun d99 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool)) Bool (and (d23 s0) (d94 s1 s2 s3 s4 s5 s6)))
(define-fun d100 ((s0 Bool)) Bool (not s0))
(define-fun d101 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d102 ((s0 Bool)) Bool (not s0))
(define-fun d103 ((s1 Bool)) Bool (not s1))
(define-fun d104 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) (not s1) (not s1.next)))
(define-fun d105 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) (not x2) (not x3) x4 (not x5) (not x6) x7 (not s1) (not s1.next)))
(define-fun d106 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d104 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (d105 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d107 ((s1 Bool)) Bool (not s1))
(define-fun d108 ((s0 Bool) (s1 Bool)) Bool (and (d100 s0) (d103 s1)))
(define-fun d109 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d101 x0 s0 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d110 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d106 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next))))
(define-fun d111 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (d109 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d110 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d112 ((s0 Bool) (s1 Bool)) Bool (and (d102 s0) (d107 s1)))
(define-fun d113 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (not s7) (d95 s0 s1 s2 s3 s4 s5 s6)))
(define-fun d114 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not s7) (not s7.next) (d98 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s0.next s1.next s2.next s3.next s4.next s5.next s6.next)))
(define-fun d115 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s7.next Bool)) Bool (and s7 s7.next (d111 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next)))
(define-fun d116 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s7.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s7) s7.next (d99 s0 s1 s2 s3 s4 s5 s6) (d108 s0.next s1.next)))
(define-fun d117 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d114 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next) (d115 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s7 s0.next s1.next s7.next) (d116 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s7.next)))
(define-fun d118 ((s0 Bool) (s1 Bool) (s7 Bool)) Bool (and s7 (d112 s0 s1)))
(define-fun d119 ((s0 Bool) (s1 Bool) (s8 Bool)) Bool (and (not s8) (d8 s0 s1)))
(define-fun d120 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s8 Bool) (s0.next Bool) (s1.next Bool) (s8.next Bool)) Bool (and (not s8) (not s8.next) (d11 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next)))
(define-fun d121 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (and s8 s8.next (d117 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next)))
(define-fun d122 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s8 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s8) s8.next (d12 s0 s1) (d113 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next)))
(define-fun d123 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (or (d120 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s8 s0.next s1.next s8.next) (d121 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next) (d122 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s8 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next)))
(define-fun d124 ((s0 Bool) (s1 Bool) (s7 Bool) (s8 Bool)) Bool (and s8 (d118 s0 s1 s7)))
(define-fun d125 ((s9 Bool)) Bool (not s9))
(define-fun d126 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not s9) (not s9.next)))
(define-fun d127 ((s9 Bool)) Bool (not s9))
(define-fun d128 ((s0 Bool) (s1 Bool) (s8 Bool) (s9 Bool)) Bool (and (d119 s0 s1 s8) (d125 s9)))
(define-fun d129 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (or (d123 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next))))
(define-fun d130 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s9.next Bool)) Bool (or (d126 x0 s9 s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s9 s9.next))))
(define-fun d131 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (d129 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next) (d130 x0 x1 x2 x3 x4 x5 x6 x7 s9 s9.next)))
(define-fun d132 ((s0 Bool) (s1 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d124 s0 s1 s7 s8) (d127 s9)))
;
(define-fun d133 ((s0 Bool) (s1 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d132 s0 s1 s7 s8 s9)))
(define-fun d134 ((s0 Bool) (s1 Bool) (s8 Bool) (s9 Bool)) Bool (and (d128 s0 s1 s8 s9)))
;
(define-fun I () Bool (! (d134 s0 s1 s8 s9) :init true))
(define-fun T () Bool (! (d131 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next) :trans true))
(define-fun O () Bool (! (not (d133 s0 s1 s7 s8 s9)) :invar-property 0))
