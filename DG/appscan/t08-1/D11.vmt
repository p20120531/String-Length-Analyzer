(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! s0 :next s0.next))
(define-fun nxt9 () Bool (! s1 :next s1.next))
(define-fun nxt10 () Bool (! s2 :next s2.next))
(define-fun nxt11 () Bool (! s3 :next s3.next))
(define-fun nxt12 () Bool (! s4 :next s4.next))
(define-fun nxt13 () Bool (! s5 :next s5.next))
(define-fun nxt14 () Bool (! s6 :next s6.next))
(define-fun nxt15 () Bool (! s7 :next s7.next))
(define-fun nxt16 () Bool (! s8 :next s8.next))
(define-fun nxt17 () Bool (! s9 :next s9.next))
(define-fun nxt18 () Bool (! s10 :next s10.next))
(define-fun nxt19 () Bool (! s11 :next s11.next))
(define-fun nxt20 () Bool (! s12 :next s12.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and (not s1) s2 (not s3) (not s4)))
(define-fun d4 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) (not x1) x2 x3 (not x4) x5 x6 (not x7) s1 (not s2) (not s3) (not s4) s1.next s2.next s3.next s4.next))
(define-fun d5 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) x4 x5 (not x6) (not x7) s1 s2 (not s3) s4 (not s1.next) s2.next (not s3.next) s4.next))
(define-fun d6 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) (not x1) x2 x3 (not x4) (not x5) x6 (not x7) s1 s2 s3 (not s4) s1.next s2.next (not s3.next) (not s4.next)))
(define-fun d7 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) (not x1) (not x2) (not x3) x4 (not x5) (not x6) x7 (not s1) s2 (not s3) (not s4) (not s1.next) s2.next s3.next (not s4.next)))
(define-fun d8 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) (not x1) (not x2) (not x3) x4 (not x5) (not x6) x7 (not s1) (not s2) (not s3) (not s4) s1.next s2.next (not s3.next) s4.next))
(define-fun d9 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) (not x1) (not x2) (not x3) x4 (not x5) (not x6) x7 s1 (not s2) s3 (not s4) s1.next (not s2.next) (not s3.next) s4.next))
(define-fun d10 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) (not s1) s2 s3 (not s4) (not s1.next) (not s2.next) (not s3.next) (not s4.next)))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) s1 s2 s3 s4 s1.next (not s2.next) s3.next (not s4.next)))
(define-fun d12 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) (not x6) x7 s1 s2 (not s3) (not s4) (not s1.next) (not s2.next) s3.next (not s4.next)))
(define-fun d13 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) x1 x2 x3 x4 (not x5) (not x6) (not x7) (not s1) (not s2) s3 s4 s1.next s2.next s3.next (not s4.next)))
(define-fun d14 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) x1 x2 x3 x4 (not x5) (not x6) (not x7) (not s1) s2 (not s3) s4 (not s1.next) (not s2.next) (not s3.next) s4.next))
(define-fun d15 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) x1 x2 x3 x4 (not x5) (not x6) (not x7) s1 (not s2) s3 s4 (not s1.next) (not s2.next) s3.next s4.next))
(define-fun d16 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) x1 x2 x3 x4 (not x5) (not x6) (not x7) (not s1) (not s2) (not s3) s4 s1.next (not s2.next) s3.next s4.next))
(define-fun d17 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) (not x6) (not x7) (not s1) s2 s3 s4 s1.next (not s2.next) (not s3.next) (not s4.next)))
(define-fun d18 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) (not x6) (not x7) (not s1) (not s2) s3 (not s4) (not s1.next) s2.next s3.next s4.next))
(define-fun d19 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (or (d4 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d5 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d6 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d7 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d8 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d9 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d10 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d11 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d12 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d13 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d14 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d15 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d16 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d17 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (d18 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next)))
(define-fun d20 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and s1 (not s2) (not s3) s4))
(define-fun d21 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and (d0 s0) (d3 s1 s2 s3 s4)))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d1 x0 s0 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d23 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (or (d19 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next))))
(define-fun d24 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (and (d22 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d23 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s1.next s2.next s3.next s4.next)))
(define-fun d25 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and (d2 s0) (d20 s1 s2 s3 s4)))
(define-fun d26 ((s5 Bool)) Bool (not s5))
(define-fun d27 ((x0 Bool) (s5 Bool) (s5.next Bool)) Bool (and (not x0) (not s5) (not s5.next)))
(define-fun d28 ((s5 Bool)) Bool (not s5))
(define-fun d29 ((s6 Bool)) Bool (not s6))
(define-fun d30 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) (not s6) (not s6.next)))
(define-fun d31 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x1) (not x2) (not x3) x4 (not x5) (not x6) x7 (not s6) (not s6.next)))
(define-fun d32 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (or (d30 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next) (d31 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next)))
(define-fun d33 ((s6 Bool)) Bool (not s6))
(define-fun d34 ((s5 Bool) (s6 Bool)) Bool (and (d26 s5) (d29 s6)))
(define-fun d35 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s5.next Bool)) Bool (or (d27 x0 s5 s5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next))))
(define-fun d36 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (or (d32 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next))))
(define-fun d37 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and (d35 x0 x1 x2 x3 x4 x5 x6 x7 s5 s5.next) (d36 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next)))
(define-fun d38 ((s5 Bool) (s6 Bool)) Bool (and (d28 s5) (d33 s6)))
(define-fun d39 ((s5 Bool)) Bool (not s5))
(define-fun d40 ((x0 Bool) (s5 Bool) (s5.next Bool)) Bool (and (not x0) (not s5) (not s5.next)))
(define-fun d41 ((s5 Bool)) Bool (not s5))
(define-fun d42 ((s6 Bool)) Bool (not s6))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) s6.next))
(define-fun d44 ((x0 Bool) (x3 Bool) (s6.next Bool)) Bool (and (not x0) x3 (not s6.next)))
(define-fun d45 ((x0 Bool) (x4 Bool) (s6.next Bool)) Bool (and (not x0) x4 (not s6.next)))
(define-fun d46 ((x0 Bool) (x5 Bool) (s6.next Bool)) Bool (and (not x0) x5 (not s6.next)))
(define-fun d47 ((x0 Bool) (x6 Bool) (s6.next Bool)) Bool (and (not x0) x6 (not s6.next)))
(define-fun d48 ((x0 Bool) (x7 Bool) (s6.next Bool)) Bool (and (not x0) x7 (not s6.next)))
(define-fun d49 ((x0 Bool) (x2 Bool) (s6.next Bool)) Bool (and (not x0) (not x2) (not s6.next)))
(define-fun d50 ((x0 Bool) (x1 Bool) (s6.next Bool)) Bool (and (not x0) x1 (not s6.next)))
(define-fun d51 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6.next Bool)) Bool (or (d43 x0 x1 x2 x3 x4 x5 x6 x7 s6.next) (d44 x0 x3 s6.next) (d45 x0 x4 s6.next) (d46 x0 x5 s6.next) (d47 x0 x6 s6.next) (d48 x0 x7 s6.next) (d49 x0 x2 s6.next) (d50 x0 x1 s6.next)))
(define-fun d52 ((s6 Bool)) Bool (not s6))
(define-fun d53 ((s5 Bool) (s6 Bool)) Bool (and (d39 s5) (d42 s6)))
(define-fun d54 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s5.next Bool)) Bool (or (d40 x0 s5 s5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next))))
(define-fun d55 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (or (d51 x0 x1 x2 x3 x4 x5 x6 x7 s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next))))
(define-fun d56 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and (d54 x0 x1 x2 x3 x4 x5 x6 x7 s5 s5.next) (d55 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next)))
(define-fun d57 ((s5 Bool) (s6 Bool)) Bool (and (d41 s5) (d52 s6)))
(define-fun d58 ((s7 Bool)) Bool (not s7))
(define-fun d59 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7.next Bool)) Bool (and (not x0) (not x1) (not x2) (not x3) x4 (not x5) (not x6) x7 s7.next))
(define-fun d60 ((x0 Bool) (x7 Bool) (s7.next Bool)) Bool (and (not x0) (not x7) (not s7.next)))
(define-fun d61 ((x0 Bool) (x5 Bool) (s7.next Bool)) Bool (and (not x0) x5 (not s7.next)))
(define-fun d62 ((x0 Bool) (x6 Bool) (s7.next Bool)) Bool (and (not x0) x6 (not s7.next)))
(define-fun d63 ((x0 Bool) (x4 Bool) (s7.next Bool)) Bool (and (not x0) (not x4) (not s7.next)))
(define-fun d64 ((x0 Bool) (x3 Bool) (s7.next Bool)) Bool (and (not x0) x3 (not s7.next)))
(define-fun d65 ((x0 Bool) (x2 Bool) (s7.next Bool)) Bool (and (not x0) x2 (not s7.next)))
(define-fun d66 ((x0 Bool) (x1 Bool) (s7.next Bool)) Bool (and (not x0) x1 (not s7.next)))
(define-fun d67 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7.next Bool)) Bool (or (d59 x0 x1 x2 x3 x4 x5 x6 x7 s7.next) (d60 x0 x7 s7.next) (d61 x0 x5 s7.next) (d62 x0 x6 s7.next) (d63 x0 x4 s7.next) (d64 x0 x3 s7.next) (d65 x0 x2 s7.next) (d66 x0 x1 s7.next)))
(define-fun d68 ((s7 Bool)) Bool (not s7))
(define-fun d69 ((s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (d53 s5 s6) (d58 s7)))
(define-fun d70 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (or (d56 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next) (= s6 s6.next))))
(define-fun d71 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s7 Bool) (s7.next Bool)) Bool (or (d67 x0 x1 x2 x3 x4 x5 x6 x7 s7.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s7 s7.next))))
(define-fun d72 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (and (d70 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next) (d71 x0 x1 x2 x3 x4 x5 x6 x7 s7 s7.next)))
(define-fun d73 ((s5 Bool) (s6 Bool) (s7 Bool)) Bool (and (d57 s5 s6) (d68 s7)))
(define-fun d74 ((s8 Bool)) Bool s8)
(define-fun d75 ((x0 Bool) (x7 Bool) (s8.next Bool)) Bool (and (not x0) (not x7) (not s8.next)))
(define-fun d76 ((x0 Bool) (x5 Bool) (s8.next Bool)) Bool (and (not x0) x5 (not s8.next)))
(define-fun d77 ((x0 Bool) (x6 Bool) (s8.next Bool)) Bool (and (not x0) x6 (not s8.next)))
(define-fun d78 ((x0 Bool) (x4 Bool) (s8.next Bool)) Bool (and (not x0) (not x4) (not s8.next)))
(define-fun d79 ((x0 Bool) (x3 Bool) (s8.next Bool)) Bool (and (not x0) x3 (not s8.next)))
(define-fun d80 ((x0 Bool) (x2 Bool) (s8.next Bool)) Bool (and (not x0) x2 (not s8.next)))
(define-fun d81 ((x0 Bool) (x1 Bool) (s8.next Bool)) Bool (and (not x0) x1 (not s8.next)))
(define-fun d82 ((x0 Bool) (s8 Bool) (s8.next Bool)) Bool (and (not x0) (not s8) (not s8.next)))
(define-fun d83 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s8.next Bool)) Bool (or (d75 x0 x7 s8.next) (d76 x0 x5 s8.next) (d77 x0 x6 s8.next) (d78 x0 x4 s8.next) (d79 x0 x3 s8.next) (d80 x0 x2 s8.next) (d81 x0 x1 s8.next) (d82 x0 s8 s8.next)))
(define-fun d84 ((s8 Bool)) Bool (not s8))
(define-fun d85 ((s8 Bool)) Bool s8)
(define-fun d86 ((s8 Bool)) Bool (or (d84 s8) (d85 s8)))
(define-fun d87 ((s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (d69 s5 s6 s7) (d74 s8)))
(define-fun d88 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d72 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next))))
(define-fun d89 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s8.next Bool)) Bool (or (d83 x0 x1 x2 x3 x4 x5 x6 x7 s8 s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8 s8.next))))
(define-fun d90 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (and (d88 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s5.next s6.next s7.next) (d89 x0 x1 x2 x3 x4 x5 x6 x7 s8 s8.next)))
(define-fun d91 ((s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool)) Bool (and (d73 s5 s6 s7) (d86 s8)))
(define-fun d92 ((s9 Bool)) Bool (not s9))
(define-fun d93 ((x0 Bool) (x3 Bool) (s9.next Bool)) Bool (and (not x0) x3 s9.next))
(define-fun d94 ((x0 Bool) (x4 Bool) (s9.next Bool)) Bool (and (not x0) x4 s9.next))
(define-fun d95 ((x0 Bool) (x5 Bool) (s9.next Bool)) Bool (and (not x0) x5 s9.next))
(define-fun d96 ((x0 Bool) (x6 Bool) (s9.next Bool)) Bool (and (not x0) x6 s9.next))
(define-fun d97 ((x0 Bool) (x7 Bool) (s9.next Bool)) Bool (and (not x0) x7 s9.next))
(define-fun d98 ((x0 Bool) (x2 Bool) (s9.next Bool)) Bool (and (not x0) (not x2) s9.next))
(define-fun d99 ((x0 Bool) (x1 Bool) (s9.next Bool)) Bool (and (not x0) x1 s9.next))
(define-fun d100 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) s9 s9.next))
(define-fun d101 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s9.next Bool)) Bool (or (d93 x0 x3 s9.next) (d94 x0 x4 s9.next) (d95 x0 x5 s9.next) (d96 x0 x6 s9.next) (d97 x0 x7 s9.next) (d98 x0 x2 s9.next) (d99 x0 x1 s9.next) (d100 x0 s9 s9.next)))
(define-fun d102 ((s9 Bool)) Bool (not s9))
(define-fun d103 ((s9 Bool)) Bool s9)
(define-fun d104 ((s9 Bool)) Bool (or (d102 s9) (d103 s9)))
(define-fun d105 ((s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d87 s5 s6 s7 s8) (d92 s9)))
(define-fun d106 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool)) Bool (or (d90 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s5.next s6.next s7.next s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next))))
(define-fun d107 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s9.next Bool)) Bool (or (d101 x0 x1 x2 x3 x4 x5 x6 x7 s9 s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s9 s9.next))))
(define-fun d108 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (d106 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s5.next s6.next s7.next s8.next) (d107 x0 x1 x2 x3 x4 x5 x6 x7 s9 s9.next)))
(define-fun d109 ((s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d91 s5 s6 s7 s8) (d104 s9)))
(define-fun d110 ((s10 Bool)) Bool (not s10))
(define-fun d111 ((x0 Bool) (s10 Bool) (s10.next Bool)) Bool (and (not x0) (not s10) (not s10.next)))
(define-fun d112 ((s10 Bool)) Bool (not s10))
(define-fun d113 ((s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d105 s5 s6 s7 s8 s9) (d110 s10)))
(define-fun d114 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d108 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s9 s5.next s6.next s7.next s8.next s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next))))
(define-fun d115 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s10 Bool) (s10.next Bool)) Bool (or (d111 x0 s10 s10.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s10 s10.next))))
(define-fun d116 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (d114 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s9 s5.next s6.next s7.next s8.next s9.next) (d115 x0 x1 x2 x3 x4 x5 x6 x7 s10 s10.next)))
(define-fun d117 ((s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d109 s5 s6 s7 s8 s9) (d112 s10)))
(define-fun d118 ((s5 Bool)) Bool (not s5))
(define-fun d119 ((x0 Bool) (s5 Bool) (s5.next Bool)) Bool (and (not x0) (not s5) (not s5.next)))
(define-fun d120 ((s5 Bool)) Bool (not s5))
(define-fun d121 ((s6 Bool)) Bool (not s6))
(define-fun d122 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x1) x2 (not x3) (not x4) (not x5) (not x6) (not x7) (not s6) (not s6.next)))
(define-fun d123 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (and (not x0) (not x1) (not x2) (not x3) x4 (not x5) (not x6) x7 (not s6) (not s6.next)))
(define-fun d124 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (or (d122 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next) (d123 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next)))
(define-fun d125 ((s6 Bool)) Bool (not s6))
(define-fun d126 ((s5 Bool) (s6 Bool)) Bool (and (d118 s5) (d121 s6)))
(define-fun d127 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s5.next Bool)) Bool (or (d119 x0 s5 s5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next))))
(define-fun d128 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool)) Bool (or (d124 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next))))
(define-fun d129 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s5.next Bool) (s6.next Bool)) Bool (and (d127 x0 x1 x2 x3 x4 x5 x6 x7 s5 s5.next) (d128 x0 x1 x2 x3 x4 x5 x6 x7 s6 s6.next)))
(define-fun d130 ((s5 Bool) (s6 Bool)) Bool (and (d120 s5) (d125 s6)))
(define-fun d131 ((s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool)) Bool (and (not s11) (d113 s5 s6 s7 s8 s9 s10)))
(define-fun d132 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (and (not s11) (not s11.next) (d116 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s9 s10 s5.next s6.next s7.next s8.next s9.next s10.next)))
(define-fun d133 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s11 Bool) (s5.next Bool) (s6.next Bool) (s11.next Bool)) Bool (and s11 s11.next (d129 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next)))
(define-fun d134 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s5.next Bool) (s6.next Bool) (s11.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s11) s11.next (d117 s5 s6 s7 s8 s9 s10) (d126 s5.next s6.next)))
(define-fun d135 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool)) Bool (or (d132 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s9 s10 s11 s5.next s6.next s7.next s8.next s9.next s10.next s11.next) (d133 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s11 s5.next s6.next s11.next) (d134 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s9 s10 s11 s5.next s6.next s11.next)))
(define-fun d136 ((s5 Bool) (s6 Bool) (s11 Bool)) Bool (and s11 (d130 s5 s6)))
(define-fun d137 ((s5 Bool) (s6 Bool) (s12 Bool)) Bool (and (not s12) (d34 s5 s6)))
(define-fun d138 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s12 Bool) (s5.next Bool) (s6.next Bool) (s12.next Bool)) Bool (and (not s12) (not s12.next) (d37 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s5.next s6.next)))
(define-fun d139 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (and s12 s12.next (d135 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s9 s10 s11 s5.next s6.next s7.next s8.next s9.next s10.next s11.next)))
(define-fun d140 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s12 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s12) s12.next (d38 s5 s6) (d131 s5.next s6.next s7.next s8.next s9.next s10.next s11.next)))
(define-fun d141 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d138 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s12 s5.next s6.next s12.next) (d139 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s9 s10 s11 s12 s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next) (d140 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s12 s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next)))
(define-fun d142 ((s5 Bool) (s6 Bool) (s11 Bool) (s12 Bool)) Bool (and s12 (d136 s5 s6 s11)))
(define-fun d143 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s12 Bool)) Bool (and (d21 s0 s1 s2 s3 s4) (d137 s5 s6 s12)))
(define-fun d144 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool)) Bool (or (d24 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s0.next s1.next s2.next s3.next s4.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next))))
(define-fun d145 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (or (d141 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s9 s10 s11 s12 s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= s12 s12.next))))
(define-fun d146 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool)) Bool (and (d144 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s0.next s1.next s2.next s3.next s4.next) (d145 x0 x1 x2 x3 x4 x5 x6 x7 s5 s6 s7 s8 s9 s10 s11 s12 s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next)))
(define-fun d147 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s11 Bool) (s12 Bool)) Bool (and (d25 s0 s1 s2 s3 s4) (d142 s5 s6 s11 s12)))
;
;
(define-fun I () Bool (! (d143 s0 s1 s2 s3 s4 s5 s6 s12) :init true))
(define-fun T () Bool (! (d146 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next) :trans true))
(define-fun O () Bool (! (not (d147 s0 s1 s2 s3 s4 s5 s6 s11 s12)) :invar-property 0))
