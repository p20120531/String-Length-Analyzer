(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! s0 :next s0.next))
(define-fun nxt9 () Bool (! s1 :next s1.next))
(define-fun nxt10 () Bool (! s2 :next s2.next))
(define-fun nxt11 () Bool (! s3 :next s3.next))
(define-fun nxt12 () Bool (! s4 :next s4.next))
(define-fun nxt13 () Bool (! s5 :next s5.next))
(define-fun nxt14 () Bool (! s6 :next s6.next))
(define-fun nxt15 () Bool (! s7 :next s7.next))
(define-fun nxt16 () Bool (! s8 :next s8.next))
(define-fun nxt17 () Bool (! s9 :next s9.next))
(define-fun nxt18 () Bool (! s10 :next s10.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool) (s1 Bool)) Bool (and (not s0) s1))
(define-fun d1 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) (not x7) s0 s1 (not s0.next) (not s1.next)))
(define-fun d2 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) x1 (not x2) x3 x4 x5 x6 x7 (not s0) s1 s0.next s1.next))
(define-fun d3 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) (not x4) (not x5) (not x6) x7 (not s0) (not s1) s0.next (not s1.next)))
(define-fun d4 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (or (d1 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (d2 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (d3 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next)))
(define-fun d5 ((s0 Bool) (s1 Bool)) Bool (and s0 (not s1)))
(define-fun d6 ((s2 Bool) (s3 Bool)) Bool (and (not s2) s3))
(define-fun d7 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) x3 x4 x5 x6 x7 (not s2) s3 s2.next s3.next))
(define-fun d8 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) x4 (not x5) (not x6) (not x7) s2 s3 (not s2.next) (not s3.next)))
(define-fun d9 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) (not x4) (not x5) (not x6) x7 (not s2) (not s3) s2.next (not s3.next)))
(define-fun d10 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d7 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d8 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d9 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next)))
(define-fun d11 ((s2 Bool) (s3 Bool)) Bool (and s2 (not s3)))
(define-fun d12 ((s4 Bool) (s5 Bool)) Bool (and (not s4) s5))
(define-fun d13 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x1 (not x2) x3 x4 x5 x6 x7 (not s4) s5 s4.next s5.next))
(define-fun d14 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) x4 (not x5) (not x6) (not x7) s4 s5 (not s4.next) (not s5.next)))
(define-fun d15 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) (not x6) x7 (not s4) (not s5) s4.next (not s5.next)))
(define-fun d16 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (or (d13 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (d14 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (d15 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next)))
(define-fun d17 ((s4 Bool) (s5 Bool)) Bool (and s4 (not s5)))
(define-fun d18 ((s6 Bool) (s7 Bool)) Bool (and (not s6) s7))
(define-fun d19 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x1 (not x2) x3 x4 x5 x6 x7 (not s6) s7 s6.next s7.next))
(define-fun d20 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) (not x7) s6 s7 (not s6.next) (not s7.next)))
(define-fun d21 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) (not x6) x7 (not s6) (not s7) s6.next (not s7.next)))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d19 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next) (d20 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next) (d21 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next)))
(define-fun d23 ((s6 Bool) (s7 Bool)) Bool (and s6 (not s7)))
(define-fun d24 ((s8 Bool)) Bool (not s8))
(define-fun d25 ((x0 Bool) (s8 Bool) (s8.next Bool)) Bool (and (not x0) (not s8) (not s8.next)))
(define-fun d26 ((s8 Bool)) Bool (not s8))
(define-fun d27 ((s9 Bool)) Bool s9)
(define-fun d28 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not s9) (not s9.next)))
(define-fun d29 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) s9 (not s9.next)))
(define-fun d30 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (or (d28 x0 s9 s9.next) (d29 x0 s9 s9.next)))
(define-fun d31 ((s9 Bool)) Bool (not s9))
(define-fun d32 ((s8 Bool) (s9 Bool)) Bool (and (d24 s8) (d27 s9)))
(define-fun d33 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s8.next Bool)) Bool (or (d25 x0 s8 s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8 s8.next))))
(define-fun d34 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s9.next Bool)) Bool (or (d30 x0 s9 s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s9 s9.next))))
(define-fun d35 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool)) Bool (and (d33 x0 x1 x2 x3 x4 x5 x6 x7 s8 s8.next) (d34 x0 x1 x2 x3 x4 x5 x6 x7 s9 s9.next)))
(define-fun d36 ((s8 Bool) (s9 Bool)) Bool (and (d26 s8) (d31 s9)))
(define-fun d37 ((s10 Bool)) Bool (not s10))
(define-fun d38 () Bool false)
(define-fun d39 ((s10 Bool)) Bool (not s10))
(define-fun d40 ((s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d32 s8 s9) (d37 s10)))
(define-fun d41 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d35 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s8.next s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8 s8.next) (= s9 s9.next))))
(define-fun d42 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s10 Bool) (s10.next Bool)) Bool (or d38 (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s10 s10.next))))
(define-fun d43 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (d41 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s8.next s9.next) (d42 x0 x1 x2 x3 x4 x5 x6 x7 s10 s10.next)))
(define-fun d44 ((s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d36 s8 s9) (d39 s10)))
(define-fun d45 ((s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d18 s6 s7) (d40 s8 s9 s10)))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d22 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next) (= s7 s7.next))))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (or (d43 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s8.next s9.next s10.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next))))
(define-fun d48 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (d46 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next) (d47 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s10 s8.next s9.next s10.next)))
(define-fun d49 ((s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d23 s6 s7) (d44 s8 s9 s10)))
(define-fun d50 ((s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d12 s4 s5) (d45 s6 s7 s8 s9 s10)))
(define-fun d51 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (or (d16 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next) (= s5 s5.next))))
(define-fun d52 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (or (d48 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s10 s6.next s7.next s8.next s9.next s10.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next))))
(define-fun d53 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (d51 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (d52 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s10 s6.next s7.next s8.next s9.next s10.next)))
(define-fun d54 ((s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d17 s4 s5) (d49 s6 s7 s8 s9 s10)))
(define-fun d55 ((s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d6 s2 s3) (d50 s4 s5 s6 s7 s8 s9 s10)))
(define-fun d56 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d10 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next) (= s3 s3.next))))
(define-fun d57 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (or (d53 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 s9 s10 s4.next s5.next s6.next s7.next s8.next s9.next s10.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next))))
(define-fun d58 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (d56 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d57 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 s9 s10 s4.next s5.next s6.next s7.next s8.next s9.next s10.next)))
(define-fun d59 ((s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d11 s2 s3) (d54 s4 s5 s6 s7 s8 s9 s10)))
(define-fun d60 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d0 s0 s1) (d55 s2 s3 s4 s5 s6 s7 s8 s9 s10)))
(define-fun d61 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (or (d4 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next))))
(define-fun d62 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (or (d58 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s4 s5 s6 s7 s8 s9 s10 s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next))))
(define-fun d63 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool)) Bool (and (d61 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (d62 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s4 s5 s6 s7 s8 s9 s10 s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next)))
(define-fun d64 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d5 s0 s1) (d59 s2 s3 s4 s5 s6 s7 s8 s9 s10)))
;
(define-fun d65 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d64 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10)))
(define-fun d66 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (d60 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10)))
;
(define-fun I () Bool (! (d66 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10) :init true))
(define-fun T () Bool (! (d63 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next) :trans true))
(define-fun O () Bool (! (not (d65 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10)) :invar-property 0))
