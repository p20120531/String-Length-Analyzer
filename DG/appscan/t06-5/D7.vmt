(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! s0 :next s0.next))
(define-fun nxt9 () Bool (! s1 :next s1.next))
(define-fun nxt10 () Bool (! s2 :next s2.next))
(define-fun nxt11 () Bool (! s3 :next s3.next))
(define-fun nxt12 () Bool (! s4 :next s4.next))
(define-fun nxt13 () Bool (! s5 :next s5.next))
(define-fun nxt14 () Bool (! s6 :next s6.next))
(define-fun nxt15 () Bool (! s7 :next s7.next))
(define-fun nxt16 () Bool (! s8 :next s8.next))
(define-fun nxt17 () Bool (! s9 :next s9.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool) (s1 Bool)) Bool (and s0 s1))
(define-fun d1 ((x0 Bool) (x3 Bool) (x4 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) x3 (not x4) s0.next s1.next))
(define-fun d2 ((x0 Bool) (x6 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) (not x6) s1 s0.next s1.next))
(define-fun d3 ((x0 Bool) (x2 Bool) (x3 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) x2 x3 s0.next s1.next))
(define-fun d4 ((x0 Bool) (x4 Bool) (x6 Bool) (x7 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) x4 (not x6) x7 s0.next s1.next))
(define-fun d5 ((x0 Bool) (x2 Bool) (x7 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) (not x2) (not x7) s0.next s1.next))
(define-fun d6 ((x0 Bool) (x5 Bool) (x6 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) (not x5) x6 s0.next s1.next))
(define-fun d7 ((x0 Bool) (x3 Bool) (x5 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) (not x3) x5 s0.next s1.next))
(define-fun d8 ((x0 Bool) (x4 Bool) (s0 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) (not x4) (not s0) s0.next s1.next))
(define-fun d9 ((x0 Bool) (x2 Bool) (s0 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) x2 s0 s0.next s1.next))
(define-fun d10 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) x1 (not x2) x3 x4 x5 x6 x7 (not s0.next) (not s1.next)))
(define-fun d11 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) (not x7) (not s0) (not s1) s0.next (not s1.next)))
(define-fun d12 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) (not x4) (not x5) (not x6) x7 s0 (not s1) (not s0.next) s1.next))
(define-fun d13 ((x0 Bool) (x1 Bool) (s0.next Bool) (s1.next Bool)) Bool (and (not x0) (not x1) s0.next s1.next))
(define-fun d14 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (or (d1 x0 x3 x4 s0.next s1.next) (d2 x0 x6 s1 s0.next s1.next) (d3 x0 x2 x3 s0.next s1.next) (d4 x0 x4 x6 x7 s0.next s1.next) (d5 x0 x2 x7 s0.next s1.next) (d6 x0 x5 x6 s0.next s1.next) (d7 x0 x3 x5 s0.next s1.next) (d8 x0 x4 s0 s0.next s1.next) (d9 x0 x2 s0 s0.next s1.next) (d10 x0 x1 x2 x3 x4 x5 x6 x7 s0.next s1.next) (d11 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (d12 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (d13 x0 x1 s0.next s1.next)))
(define-fun d15 ((s1 Bool)) Bool (not s1))
(define-fun d16 ((s0 Bool)) Bool s0)
(define-fun d17 ((s0 Bool) (s1 Bool)) Bool (or (d15 s1) (d16 s0)))
(define-fun d18 ((s2 Bool) (s3 Bool)) Bool (and s2 s3))
(define-fun d19 ((x0 Bool) (x6 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x6) s3 s2.next s3.next))
(define-fun d20 ((x0 Bool) (x3 Bool) (x7 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x3 (not x7) s2.next s3.next))
(define-fun d21 ((x0 Bool) (x3 Bool) (x4 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x3 (not x4) s2.next s3.next))
(define-fun d22 ((x0 Bool) (x4 Bool) (x6 Bool) (x7 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x4 (not x6) x7 s2.next s3.next))
(define-fun d23 ((x0 Bool) (x5 Bool) (x6 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x5) x6 s2.next s3.next))
(define-fun d24 ((x0 Bool) (x3 Bool) (x5 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x3) x5 s2.next s3.next))
(define-fun d25 ((x0 Bool) (x4 Bool) (s2 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x4) (not s2) s2.next s3.next))
(define-fun d26 ((x0 Bool) (x7 Bool) (s2 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x7) s2 s2.next s3.next))
(define-fun d27 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) x3 x4 x5 x6 x7 (not s2.next) (not s3.next)))
(define-fun d28 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) x4 (not x5) (not x6) (not x7) (not s2) (not s3) s2.next (not s3.next)))
(define-fun d29 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) (not x4) (not x5) (not x6) x7 s2 (not s3) (not s2.next) s3.next))
(define-fun d30 ((x0 Bool) (x2 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) x2 s2.next s3.next))
(define-fun d31 ((x0 Bool) (x1 Bool) (s2.next Bool) (s3.next Bool)) Bool (and (not x0) (not x1) s2.next s3.next))
(define-fun d32 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d19 x0 x6 s3 s2.next s3.next) (d20 x0 x3 x7 s2.next s3.next) (d21 x0 x3 x4 s2.next s3.next) (d22 x0 x4 x6 x7 s2.next s3.next) (d23 x0 x5 x6 s2.next s3.next) (d24 x0 x3 x5 s2.next s3.next) (d25 x0 x4 s2 s2.next s3.next) (d26 x0 x7 s2 s2.next s3.next) (d27 x0 x1 x2 x3 x4 x5 x6 x7 s2.next s3.next) (d28 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d29 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d30 x0 x2 s2.next s3.next) (d31 x0 x1 s2.next s3.next)))
(define-fun d33 ((s3 Bool)) Bool (not s3))
(define-fun d34 ((s2 Bool)) Bool s2)
(define-fun d35 ((s2 Bool) (s3 Bool)) Bool (or (d33 s3) (d34 s2)))
(define-fun d36 ((s4 Bool) (s5 Bool)) Bool (and s4 s5))
(define-fun d37 ((x0 Bool) (x3 Bool) (x7 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x3 (not x7) s4.next s5.next))
(define-fun d38 ((x0 Bool) (x6 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) (not x6) s5 s4.next s5.next))
(define-fun d39 ((x0 Bool) (x3 Bool) (x4 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x3 (not x4) s4.next s5.next))
(define-fun d40 ((x0 Bool) (x2 Bool) (x6 Bool) (x7 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) (not x2) (not x6) x7 s4.next s5.next))
(define-fun d41 ((x0 Bool) (x5 Bool) (x6 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) (not x5) x6 s4.next s5.next))
(define-fun d42 ((x0 Bool) (x3 Bool) (x5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) (not x3) x5 s4.next s5.next))
(define-fun d43 ((x0 Bool) (x2 Bool) (x4 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x2 x4 s4.next s5.next))
(define-fun d44 ((x0 Bool) (x4 Bool) (s4 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) (not x4) (not s4) s4.next s5.next))
(define-fun d45 ((x0 Bool) (x7 Bool) (s4 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) (not x7) s4 s4.next s5.next))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x1 (not x2) x3 x4 x5 x6 x7 (not s4.next) (not s5.next)))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) x4 (not x5) (not x6) (not x7) (not s4) (not s5) s4.next (not s5.next)))
(define-fun d48 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) (not x6) x7 s4 (not s5) (not s4.next) s5.next))
(define-fun d49 ((x0 Bool) (x1 Bool) (s4.next Bool) (s5.next Bool)) Bool (and (not x0) (not x1) s4.next s5.next))
(define-fun d50 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (or (d37 x0 x3 x7 s4.next s5.next) (d38 x0 x6 s5 s4.next s5.next) (d39 x0 x3 x4 s4.next s5.next) (d40 x0 x2 x6 x7 s4.next s5.next) (d41 x0 x5 x6 s4.next s5.next) (d42 x0 x3 x5 s4.next s5.next) (d43 x0 x2 x4 s4.next s5.next) (d44 x0 x4 s4 s4.next s5.next) (d45 x0 x7 s4 s4.next s5.next) (d46 x0 x1 x2 x3 x4 x5 x6 x7 s4.next s5.next) (d47 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (d48 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (d49 x0 x1 s4.next s5.next)))
(define-fun d51 ((s5 Bool)) Bool (not s5))
(define-fun d52 ((s4 Bool)) Bool s4)
(define-fun d53 ((s4 Bool) (s5 Bool)) Bool (or (d51 s5) (d52 s4)))
(define-fun d54 ((s6 Bool) (s7 Bool)) Bool (and s6 s7))
(define-fun d55 ((x0 Bool) (x4 Bool) (x6 Bool) (s6 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x4 (not x6) s6 s6.next s7.next))
(define-fun d56 ((x0 Bool) (x4 Bool) (x6 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) (not x4) x6 s6.next s7.next))
(define-fun d57 ((x0 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) (not x6) x7 (not s6) s6.next s7.next))
(define-fun d58 ((x0 Bool) (x4 Bool) (x7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) (not x4) (not x7) s6.next s7.next))
(define-fun d59 ((x0 Bool) (x5 Bool) (x6 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) (not x5) x6 s6.next s7.next))
(define-fun d60 ((x0 Bool) (x2 Bool) (x6 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) (not x2) (not x6) s6.next s7.next))
(define-fun d61 ((x0 Bool) (x6 Bool) (x7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x6 (not x7) s6.next s7.next))
(define-fun d62 ((x0 Bool) (x6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) (not x6) s7 s6.next s7.next))
(define-fun d63 ((x0 Bool) (x3 Bool) (x5 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) (not x3) x5 s6.next s7.next))
(define-fun d64 ((x0 Bool) (x2 Bool) (x3 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x2 x3 s6.next s7.next))
(define-fun d65 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x1 (not x2) x3 x4 x5 x6 x7 (not s6.next) (not s7.next)))
(define-fun d66 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) (not x7) (not s6) (not s7) s6.next (not s7.next)))
(define-fun d67 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) (not x6) x7 s6 (not s7) (not s6.next) s7.next))
(define-fun d68 ((x0 Bool) (x1 Bool) (s6.next Bool) (s7.next Bool)) Bool (and (not x0) (not x1) s6.next s7.next))
(define-fun d69 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d55 x0 x4 x6 s6 s6.next s7.next) (d56 x0 x4 x6 s6.next s7.next) (d57 x0 x6 x7 s6 s6.next s7.next) (d58 x0 x4 x7 s6.next s7.next) (d59 x0 x5 x6 s6.next s7.next) (d60 x0 x2 x6 s6.next s7.next) (d61 x0 x6 x7 s6.next s7.next) (d62 x0 x6 s7 s6.next s7.next) (d63 x0 x3 x5 s6.next s7.next) (d64 x0 x2 x3 s6.next s7.next) (d65 x0 x1 x2 x3 x4 x5 x6 x7 s6.next s7.next) (d66 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next) (d67 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next) (d68 x0 x1 s6.next s7.next)))
(define-fun d70 ((s7 Bool)) Bool (not s7))
(define-fun d71 ((s6 Bool)) Bool s6)
(define-fun d72 ((s6 Bool) (s7 Bool)) Bool (or (d70 s7) (d71 s6)))
(define-fun d73 ((s8 Bool)) Bool (not s8))
(define-fun d74 ((x0 Bool) (s8 Bool) (s8.next Bool)) Bool (and (not x0) (not s8) (not s8.next)))
(define-fun d75 ((s8 Bool)) Bool (not s8))
(define-fun d76 ((s9 Bool)) Bool s9)
(define-fun d77 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) (not s9) (not s9.next)))
(define-fun d78 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (and (not x0) s9 (not s9.next)))
(define-fun d79 ((x0 Bool) (s9 Bool) (s9.next Bool)) Bool (or (d77 x0 s9 s9.next) (d78 x0 s9 s9.next)))
(define-fun d80 ((s9 Bool)) Bool (not s9))
(define-fun d81 ((s8 Bool) (s9 Bool)) Bool (and (d73 s8) (d76 s9)))
(define-fun d82 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s8.next Bool)) Bool (or (d74 x0 s8 s8.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8 s8.next))))
(define-fun d83 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s9 Bool) (s9.next Bool)) Bool (or (d79 x0 s9 s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s9 s9.next))))
(define-fun d84 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool)) Bool (and (d82 x0 x1 x2 x3 x4 x5 x6 x7 s8 s8.next) (d83 x0 x1 x2 x3 x4 x5 x6 x7 s9 s9.next)))
(define-fun d85 ((s8 Bool) (s9 Bool)) Bool (and (d75 s8) (d80 s9)))
(define-fun d86 ((s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d54 s6 s7) (d81 s8 s9)))
(define-fun d87 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s6.next Bool) (s7.next Bool)) Bool (or (d69 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next) (= s7 s7.next))))
(define-fun d88 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s8 Bool) (s9 Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d84 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s8.next s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s8 s8.next) (= s9 s9.next))))
(define-fun d89 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (d87 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s6.next s7.next) (d88 x0 x1 x2 x3 x4 x5 x6 x7 s8 s9 s8.next s9.next)))
(define-fun d90 ((s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d72 s6 s7) (d85 s8 s9)))
(define-fun d91 ((s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d36 s4 s5) (d86 s6 s7 s8 s9)))
(define-fun d92 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s4.next Bool) (s5.next Bool)) Bool (or (d50 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next) (= s5 s5.next))))
(define-fun d93 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d89 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next))))
(define-fun d94 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (d92 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s4.next s5.next) (d93 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next)))
(define-fun d95 ((s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d53 s4 s5) (d90 s6 s7 s8 s9)))
(define-fun d96 ((s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d18 s2 s3) (d91 s4 s5 s6 s7 s8 s9)))
(define-fun d97 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s2.next Bool) (s3.next Bool)) Bool (or (d32 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next) (= s3 s3.next))))
(define-fun d98 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d94 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 s9 s4.next s5.next s6.next s7.next s8.next s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next))))
(define-fun d99 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (d97 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s2.next s3.next) (d98 x0 x1 x2 x3 x4 x5 x6 x7 s4 s5 s6 s7 s8 s9 s4.next s5.next s6.next s7.next s8.next s9.next)))
(define-fun d100 ((s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d35 s2 s3) (d95 s4 s5 s6 s7 s8 s9)))
(define-fun d101 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d0 s0 s1) (d96 s2 s3 s4 s5 s6 s7 s8 s9)))
(define-fun d102 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s0.next Bool) (s1.next Bool)) Bool (or (d14 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next))))
(define-fun d103 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d99 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s4 s5 s6 s7 s8 s9 s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next))))
(define-fun d104 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (d102 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s0.next s1.next) (d103 x0 x1 x2 x3 x4 x5 x6 x7 s2 s3 s4 s5 s6 s7 s8 s9 s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next)))
(define-fun d105 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d17 s0 s1) (d100 s2 s3 s4 s5 s6 s7 s8 s9)))
;
;
(define-fun I () Bool (! (d101 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9) :init true))
(define-fun T () Bool (! (d104 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next) :trans true))
(define-fun O () Bool (! (not (d105 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9)) :invar-property 0))
