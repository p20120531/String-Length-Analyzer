(declare-fun x0 () Bool)
(declare-fun x0.next () Bool)
(declare-fun x1 () Bool)
(declare-fun x1.next () Bool)
(declare-fun x2 () Bool)
(declare-fun x2.next () Bool)
(declare-fun x3 () Bool)
(declare-fun x3.next () Bool)
(declare-fun x4 () Bool)
(declare-fun x4.next () Bool)
(declare-fun x5 () Bool)
(declare-fun x5.next () Bool)
(declare-fun x6 () Bool)
(declare-fun x6.next () Bool)
(declare-fun x7 () Bool)
(declare-fun x7.next () Bool)
(declare-fun s0 () Bool)
(declare-fun s0.next () Bool)
(declare-fun s1 () Bool)
(declare-fun s1.next () Bool)
(declare-fun s2 () Bool)
(declare-fun s2.next () Bool)
(declare-fun s3 () Bool)
(declare-fun s3.next () Bool)
(declare-fun s4 () Bool)
(declare-fun s4.next () Bool)
(declare-fun s5 () Bool)
(declare-fun s5.next () Bool)
(declare-fun s6 () Bool)
(declare-fun s6.next () Bool)
(declare-fun s7 () Bool)
(declare-fun s7.next () Bool)
(declare-fun s8 () Bool)
(declare-fun s8.next () Bool)
(declare-fun s9 () Bool)
(declare-fun s9.next () Bool)
(declare-fun s10 () Bool)
(declare-fun s10.next () Bool)
(declare-fun s11 () Bool)
(declare-fun s11.next () Bool)
(declare-fun s12 () Bool)
(declare-fun s12.next () Bool)
(declare-fun n0 () Int)
(declare-fun n0.next () Int)
(declare-fun n1 () Int)
(declare-fun n1.next () Int)
(declare-fun n2 () Int)
(declare-fun n2.next () Int)
;
(define-fun nxt0 () Bool (! x0 :next x0.next))
(define-fun nxt1 () Bool (! x1 :next x1.next))
(define-fun nxt2 () Bool (! x2 :next x2.next))
(define-fun nxt3 () Bool (! x3 :next x3.next))
(define-fun nxt4 () Bool (! x4 :next x4.next))
(define-fun nxt5 () Bool (! x5 :next x5.next))
(define-fun nxt6 () Bool (! x6 :next x6.next))
(define-fun nxt7 () Bool (! x7 :next x7.next))
(define-fun nxt8 () Bool (! s0 :next s0.next))
(define-fun nxt9 () Bool (! s1 :next s1.next))
(define-fun nxt10 () Bool (! s2 :next s2.next))
(define-fun nxt11 () Bool (! s3 :next s3.next))
(define-fun nxt12 () Bool (! s4 :next s4.next))
(define-fun nxt13 () Bool (! s5 :next s5.next))
(define-fun nxt14 () Bool (! s6 :next s6.next))
(define-fun nxt15 () Bool (! s7 :next s7.next))
(define-fun nxt16 () Bool (! s8 :next s8.next))
(define-fun nxt17 () Bool (! s9 :next s9.next))
(define-fun nxt18 () Bool (! s10 :next s10.next))
(define-fun nxt19 () Bool (! s11 :next s11.next))
(define-fun nxt20 () Bool (! s12 :next s12.next))
(define-fun nxt21 () Bool (! n0 :next n0.next))
(define-fun nxt22 () Bool (! n1 :next n1.next))
(define-fun nxt23 () Bool (! n2 :next n2.next))
;
(define-fun epsilon ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool)) Bool (and x0 (not x1) (not x2) (not x3) (not x4) (not x5) (not x6) (not x7)))
(define-fun d0 ((s0 Bool)) Bool (not s0))
(define-fun d1 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d2 ((s0 Bool)) Bool (not s0))
(define-fun d3 ((s0 Bool)) Bool (not s0))
(define-fun d4 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d5 ((s0 Bool)) Bool (not s0))
(define-fun d6 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n0.next (+ n0 1))))
(define-fun d7 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n0 Int) (n0.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n0.next n0)))
(define-fun d8 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (n0 Int) (s0.next Bool) (n0.next Int)) Bool (and (d4 x0 s0 s0.next) (or (d6 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next) (d7 x0 x1 x2 x3 x4 x5 x6 x7 n0 n0.next))))
(define-fun d9 ((s1 Bool)) Bool (not s1))
(define-fun d10 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d11 ((s1 Bool)) Bool (not s1))
(define-fun d12 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n2 Int) (n2.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n2.next (+ n2 1))))
(define-fun d13 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n2 Int) (n2.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n2.next n2)))
(define-fun d14 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (n2 Int) (s1.next Bool) (n2.next Int)) Bool (and (d10 x0 s1 s1.next) (or (d12 x0 x1 x2 x3 x4 x5 x6 x7 n2 n2.next) (d13 x0 x1 x2 x3 x4 x5 x6 x7 n2 n2.next))))
(define-fun d15 ((s1 Bool)) Bool (not s1))
(define-fun d16 ((x0 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not s1) (not s1.next)))
(define-fun d17 ((s1 Bool)) Bool (not s1))
(define-fun d18 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (not (epsilon x0 x1 x2 x3 x4 x5 x6 x7)) (= n1.next (+ n1 1))))
(define-fun d19 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (n1 Int) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= n1.next n1)))
(define-fun d20 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (n1 Int) (s1.next Bool) (n1.next Int)) Bool (and (d16 x0 s1 s1.next) (or (d18 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next) (d19 x0 x1 x2 x3 x4 x5 x6 x7 n1 n1.next))))
(define-fun d21 ((s1 Bool)) Bool (not s1))
(define-fun d22 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) x7 (not s1) s1.next))
(define-fun d23 ((s1 Bool)) Bool s1)
(define-fun d24 ((s1 Bool) (s2 Bool)) Bool (and (not s2) (d15 s1)))
(define-fun d25 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (n1.next Int)) Bool (and (not s2) (not s2.next) (d20 x0 x1 x2 x3 x4 x5 x6 x7 s1 n1 s1.next n1.next)))
(define-fun d26 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (n1.next Int)) Bool (and s2 s2.next (d22 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next) (= n1 n1.next)))
(define-fun d27 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (n1.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s2) s2.next (d17 s1) (d21 s1.next) (= n1 n1.next)))
(define-fun d28 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (n1.next Int)) Bool (or (d25 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 n1 s1.next s2.next n1.next) (d26 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 n1 s1.next s2.next n1.next) (d27 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 n1 s1.next s2.next n1.next)))
(define-fun d29 ((s1 Bool) (s2 Bool)) Bool (and s2 (d23 s1)))
(define-fun d30 ((s3 Bool)) Bool (not s3))
(define-fun d31 ((x0 Bool) (x7 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x7) (not s3) (not s3.next)))
(define-fun d32 ((x0 Bool) (x5 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x5) (not s3) (not s3.next)))
(define-fun d33 ((x0 Bool) (x4 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x4) (not s3) (not s3.next)))
(define-fun d34 ((x0 Bool) (x3 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x3) (not s3) (not s3.next)))
(define-fun d35 ((x0 Bool) (x6 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) x6 (not s3) (not s3.next)))
(define-fun d36 ((x0 Bool) (x2 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not x2) (not s3) (not s3.next)))
(define-fun d37 ((x0 Bool) (x1 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) x1 (not s3) (not s3.next)))
(define-fun d38 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s3.next Bool)) Bool (or (d31 x0 x7 s3 s3.next) (d32 x0 x5 s3 s3.next) (d33 x0 x4 s3 s3.next) (d34 x0 x3 s3 s3.next) (d35 x0 x6 s3 s3.next) (d36 x0 x2 s3 s3.next) (d37 x0 x1 s3 s3.next)))
(define-fun d39 ((s3 Bool)) Bool (not s3))
(define-fun d40 ((s3 Bool)) Bool (not s3))
(define-fun d41 ((x0 Bool) (s3 Bool) (s3.next Bool)) Bool (and (not x0) (not s3) s3.next))
(define-fun d42 ((s3 Bool)) Bool s3)
(define-fun d43 ((s3 Bool) (s4 Bool)) Bool (and (not s4) (d30 s3)))
(define-fun d44 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (and (not s4) (not s4.next) (d38 x0 x1 x2 x3 x4 x5 x6 x7 s3 s3.next)))
(define-fun d45 ((x0 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (and s4 s4.next (d41 x0 s3 s3.next)))
(define-fun d46 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s4) s4.next (d39 s3) (d40 s3.next)))
(define-fun d47 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (or (d44 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s3.next s4.next) (d45 x0 s3 s4 s3.next s4.next) (d46 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s3.next s4.next)))
(define-fun d48 ((s3 Bool) (s4 Bool)) Bool (and s4 (d42 s3)))
(define-fun d49 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and (d24 s1 s2) (d43 s3 s4)))
(define-fun d50 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (n1.next Int)) Bool (or (d28 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 n1 s1.next s2.next n1.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= n1 n1.next))))
(define-fun d51 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s3 Bool) (s4 Bool) (s3.next Bool) (s4.next Bool)) Bool (or (d47 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s3.next s4.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s3 s3.next) (= s4 s4.next))))
(define-fun d52 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (n1 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (n1.next Int)) Bool (and (d50 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 n1 s1.next s2.next n1.next) (d51 x0 x1 x2 x3 x4 x5 x6 x7 s3 s4 s3.next s4.next)))
(define-fun d53 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool)) Bool (and (d29 s1 s2) (d48 s3 s4)))
(define-fun d54 ((s1 Bool) (s5 Bool)) Bool (and (not s5) (d9 s1)))
(define-fun d55 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s5 Bool) (n1 Int) (n2 Int) (s1.next Bool) (s5.next Bool) (n1.next Int) (n2.next Int)) Bool (and (not s5) (not s5.next) (d14 x0 x1 x2 x3 x4 x5 x6 x7 s1 n2 s1.next n2.next) (= n1 n1.next)))
(define-fun d56 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n1 Int) (n2 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n1.next Int) (n2.next Int)) Bool (and s5 s5.next (d52 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 n1 s1.next s2.next s3.next s4.next n1.next) (= n2 n2.next)))
(define-fun d57 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s5 Bool) (n1 Int) (n2 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n1.next Int) (n2.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s5) s5.next (d11 s1) (d49 s1.next s2.next s3.next s4.next) (= n1 n1.next) (= n2 n2.next)))
(define-fun d58 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n1 Int) (n2 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n1.next Int) (n2.next Int)) Bool (or (d55 x0 x1 x2 x3 x4 x5 x6 x7 s1 s5 n1 n2 s1.next s5.next n1.next n2.next) (d56 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s5 n1 n2 s1.next s2.next s3.next s4.next s5.next n1.next n2.next) (d57 x0 x1 x2 x3 x4 x5 x6 x7 s1 s5 n1 n2 s1.next s2.next s3.next s4.next s5.next n1.next n2.next)))
(define-fun d59 ((s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and s5 (d53 s1 s2 s3 s4)))
(define-fun d60 ((s0 Bool) (s1 Bool) (s5 Bool)) Bool (and (d3 s0) (d54 s1 s5)))
(define-fun d61 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (n0 Int) (s0.next Bool) (n0.next Int)) Bool (or (d8 x0 x1 x2 x3 x4 x5 x6 x7 s0 n0 s0.next n0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= n0 n0.next))))
(define-fun d62 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n1 Int) (n2 Int) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n1.next Int) (n2.next Int)) Bool (or (d58 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s5 n1 n2 s1.next s2.next s3.next s4.next s5.next n1.next n2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= n1 n1.next) (= n2 n2.next))))
(define-fun d63 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (d61 x0 x1 x2 x3 x4 x5 x6 x7 s0 n0 s0.next n0.next) (d62 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s3 s4 s5 n1 n2 s1.next s2.next s3.next s4.next s5.next n1.next n2.next)))
(define-fun d64 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool)) Bool (and (d5 s0) (d59 s1 s2 s3 s4 s5)))
(define-fun d65 ((s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (not s6) (not s7) (not s8) s9))
(define-fun d66 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x7) (not s6) s7 (not s8) (not s9) (not s6.next) (not s7.next) (not s8.next) (not s9.next)))
(define-fun d67 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x6) x7 (not s6) s7 (not s8) (not s9) (not s6.next) (not s7.next) (not s8.next) (not s9.next)))
(define-fun d68 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x5 Bool) (x6 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x5) x6 (not s6) s7 (not s8) (not s9) (not s6.next) (not s7.next) (not s8.next) (not s9.next)))
(define-fun d69 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) x5 (not s6) s7 (not s8) (not s9) (not s6.next) (not s7.next) (not s8.next) (not s9.next)))
(define-fun d70 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 (not x2) (not x3) x4 x5 (not x6) (not x7) (not s6) s7 s8 s9 s6.next (not s7.next) s8.next s9.next))
(define-fun d71 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 (not x7) s6 (not s7) s8 (not s9) s6.next (not s7.next) (not s8.next) s9.next))
(define-fun d72 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) x6 x7 s6 (not s7) (not s8) s9 s6.next s7.next (not s8.next) s9.next))
(define-fun d73 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) (not x6) x7 s6 (not s7) s8 s9 (not s6.next) s7.next s8.next (not s9.next)))
(define-fun d74 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 (not x5) (not x6) (not x7) s6 s7 (not s8) s9 (not s6.next) s7.next s8.next s9.next))
(define-fun d75 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x6 x7 (not s6) (not s7) (not s8) s9 (not s6.next) (not s7.next) s8.next (not s9.next)))
(define-fun d76 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 x5 (not x6) x7 (not s6) s7 (not s8) s9 (not s6.next) s7.next (not s8.next) (not s9.next)))
(define-fun d77 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) (not x5) (not x6) x7 (not s6) (not s7) s8 s9 s6.next (not s7.next) s8.next (not s9.next)))
(define-fun d78 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 x3 (not x4) (not x5) x6 x7 (not s6) (not s7) s8 (not s9) s6.next (not s7.next) (not s8.next) (not s9.next)))
(define-fun d79 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) x5 (not x6) x7 s6 (not s7) (not s8) (not s9) (not s6.next) (not s7.next) s8.next s9.next))
(define-fun d80 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 (not x3) x4 x5 x6 (not x7) (not s6) s7 s8 (not s9) s6.next s7.next (not s8.next) (not s9.next)))
(define-fun d81 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (and (not x0) x1 x2 (not x3) (not x4) x5 x6 x7 s6 s7 (not s8) (not s9) (not s6.next) s7.next (not s8.next) s9.next))
(define-fun d82 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d66 x0 x1 x2 x3 x4 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d67 x0 x1 x2 x3 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d68 x0 x1 x2 x3 x5 x6 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d69 x0 x1 x2 x3 x4 x5 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d70 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d71 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d72 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d73 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d74 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d75 x0 x1 x2 x3 x4 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d76 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d77 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d78 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d79 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d80 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (d81 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next)))
(define-fun d83 ((s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (not s6) (not s7) (not s8) (not s9)))
(define-fun d84 ((s0 Bool) (s1 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d60 s0 s1 s5) (d65 s6 s7 s8 s9)))
(define-fun d85 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (or (d63 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next n0.next n1.next n2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next))))
(define-fun d86 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool)) Bool (or (d82 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next))))
(define-fun d87 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (d85 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next n0.next n1.next n2.next) (d86 x0 x1 x2 x3 x4 x5 x6 x7 s6 s7 s8 s9 s6.next s7.next s8.next s9.next)))
(define-fun d88 ((s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool)) Bool (and (d64 s0 s1 s2 s3 s4 s5) (d83 s6 s7 s8 s9)))
(define-fun d89 ((s0 Bool)) Bool (not s0))
(define-fun d90 ((x0 Bool) (s0 Bool) (s0.next Bool)) Bool (and (not x0) (not s0) (not s0.next)))
(define-fun d91 ((s0 Bool)) Bool (not s0))
(define-fun d92 ((s1 Bool)) Bool (not s1))
(define-fun d93 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x1) x2 x3 x4 (not x5) x6 x7 (not s1) s1.next))
(define-fun d94 ((s1 Bool)) Bool s1)
(define-fun d95 ((s1 Bool)) Bool (not s1))
(define-fun d96 ((x0 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x7) (not s1) (not s1.next)))
(define-fun d97 ((x0 Bool) (x5 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x5) (not s1) (not s1.next)))
(define-fun d98 ((x0 Bool) (x4 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x4) (not s1) (not s1.next)))
(define-fun d99 ((x0 Bool) (x3 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x3) (not s1) (not s1.next)))
(define-fun d100 ((x0 Bool) (x6 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) x6 (not s1) (not s1.next)))
(define-fun d101 ((x0 Bool) (x2 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) (not x2) (not s1) (not s1.next)))
(define-fun d102 ((x0 Bool) (x1 Bool) (s1 Bool) (s1.next Bool)) Bool (and (not x0) x1 (not s1) (not s1.next)))
(define-fun d103 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s1.next Bool)) Bool (or (d96 x0 x7 s1 s1.next) (d97 x0 x5 s1 s1.next) (d98 x0 x4 s1 s1.next) (d99 x0 x3 s1 s1.next) (d100 x0 x6 s1 s1.next) (d101 x0 x2 s1 s1.next) (d102 x0 x1 s1 s1.next)))
(define-fun d104 ((s1 Bool)) Bool (not s1))
(define-fun d105 ((s1 Bool) (s2 Bool)) Bool (and (not s2) (d92 s1)))
(define-fun d106 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (not s2) (not s2.next) (d93 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d107 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and s2 s2.next (d103 x0 x1 x2 x3 x4 x5 x6 x7 s1 s1.next)))
(define-fun d108 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s2) s2.next (d94 s1) (d95 s1.next)))
(define-fun d109 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (or (d106 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next) (d107 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next) (d108 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d110 ((s1 Bool) (s2 Bool)) Bool (and s2 (d104 s1)))
(define-fun d111 ((s0 Bool) (s1 Bool) (s2 Bool)) Bool (and (d89 s0) (d105 s1 s2)))
(define-fun d112 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s0.next Bool)) Bool (or (d90 x0 s0 s0.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next))))
(define-fun d113 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s1 Bool) (s2 Bool) (s1.next Bool) (s2.next Bool)) Bool (or (d109 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s1 s1.next) (= s2 s2.next))))
(define-fun d114 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s0.next Bool) (s1.next Bool) (s2.next Bool)) Bool (and (d112 x0 x1 x2 x3 x4 x5 x6 x7 s0 s0.next) (d113 x0 x1 x2 x3 x4 x5 x6 x7 s1 s2 s1.next s2.next)))
(define-fun d115 ((s0 Bool) (s1 Bool) (s2 Bool)) Bool (and (d91 s0) (d110 s1 s2)))
(define-fun d116 ((s0 Bool) (s1 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool)) Bool (and (not s10) (d84 s0 s1 s5 s6 s7 s8 s9)))
(define-fun d117 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (not s10) (not s10.next) (d87 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next n0.next n1.next n2.next)))
(define-fun d118 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and s10 s10.next (d114 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s0.next s1.next s2.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next)))
(define-fun d119 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s10) s10.next (d88 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9) (d111 s0.next s1.next s2.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next)))
(define-fun d120 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (or (d117 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next) (d118 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s10 n0 n1 n2 s0.next s1.next s2.next s10.next n0.next n1.next n2.next) (d119 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 s0.next s1.next s2.next s10.next n0.next n1.next n2.next)))
(define-fun d121 ((s0 Bool) (s1 Bool) (s2 Bool) (s10 Bool)) Bool (and s10 (d115 s0 s1 s2)))
(define-fun d122 ((s0 Bool) (s11 Bool)) Bool (and (not s11) (d0 s0)))
(define-fun d123 ((x0 Bool) (s0 Bool) (s11 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s11.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (not s11) (not s11.next) (d1 x0 s0 s0.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next)))
(define-fun d124 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and s11 s11.next (d120 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next n0.next n1.next n2.next)))
(define-fun d125 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s11 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (not s11) s11.next (d2 s0) (d116 s0.next s1.next s5.next s6.next s7.next s8.next s9.next s10.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next)))
(define-fun d126 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (or (d123 x0 s0 s11 n0 n1 n2 s0.next s11.next n0.next n1.next n2.next) (d124 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next n1.next n2.next) (d125 x0 x1 x2 x3 x4 x5 x6 x7 s0 s11 n0 n1 n2 s0.next s1.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next n1.next n2.next)))
(define-fun d127 ((s0 Bool) (s1 Bool) (s2 Bool) (s10 Bool) (s11 Bool)) Bool (and s11 (d121 s0 s1 s2 s10)))
(define-fun d128 ((s12 Bool)) Bool (not s12))
(define-fun d129 ((x0 Bool) (s12 Bool) (s12.next Bool)) Bool (and (not x0) (not s12) (not s12.next)))
(define-fun d130 ((s12 Bool)) Bool (not s12))
(define-fun d131 ((s0 Bool) (s11 Bool) (s12 Bool)) Bool (and (d122 s0 s11) (d128 s12)))
(define-fun d132 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (or (d126 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next n1.next n2.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s0 s0.next) (= s1 s1.next) (= s2 s2.next) (= s3 s3.next) (= s4 s4.next) (= s5 s5.next) (= s6 s6.next) (= s7 s7.next) (= s8 s8.next) (= s9 s9.next) (= s10 s10.next) (= s11 s11.next) (= n0 n0.next) (= n1 n1.next) (= n2 n2.next))))
(define-fun d133 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s12 Bool) (s12.next Bool)) Bool (or (d129 x0 s12 s12.next) (and (epsilon x0 x1 x2 x3 x4 x5 x6 x7) (= s12 s12.next))))
(define-fun d134 ((x0 Bool) (x1 Bool) (x2 Bool) (x3 Bool) (x4 Bool) (x5 Bool) (x6 Bool) (x7 Bool) (s0 Bool) (s1 Bool) (s2 Bool) (s3 Bool) (s4 Bool) (s5 Bool) (s6 Bool) (s7 Bool) (s8 Bool) (s9 Bool) (s10 Bool) (s11 Bool) (s12 Bool) (n0 Int) (n1 Int) (n2 Int) (s0.next Bool) (s1.next Bool) (s2.next Bool) (s3.next Bool) (s4.next Bool) (s5.next Bool) (s6.next Bool) (s7.next Bool) (s8.next Bool) (s9.next Bool) (s10.next Bool) (s11.next Bool) (s12.next Bool) (n0.next Int) (n1.next Int) (n2.next Int)) Bool (and (d132 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next n0.next n1.next n2.next) (d133 x0 x1 x2 x3 x4 x5 x6 x7 s12 s12.next)))
(define-fun d135 ((s0 Bool) (s1 Bool) (s2 Bool) (s10 Bool) (s11 Bool) (s12 Bool)) Bool (and (d127 s0 s1 s2 s10 s11) (d130 s12)))
;
;
(define-fun I () Bool (! (d131 s0 s11 s12) :init true))
(define-fun T () Bool (! (d134 x0 x1 x2 x3 x4 x5 x6 x7 s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 n0 n1 n2 s0.next s1.next s2.next s3.next s4.next s5.next s6.next s7.next s8.next s9.next s10.next s11.next s12.next n0.next n1.next n2.next) :trans true))
(define-fun O () Bool (! (not (d135 s0 s1 s2 s10 s11 s12)) :invar-property 0))
